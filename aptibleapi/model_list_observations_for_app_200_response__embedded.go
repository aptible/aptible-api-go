/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListObservationsForApp200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListObservationsForApp200ResponseEmbedded{}

// ListObservationsForApp200ResponseEmbedded struct for ListObservationsForApp200ResponseEmbedded
type ListObservationsForApp200ResponseEmbedded struct {
	Observations []Observation `json:"observations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListObservationsForApp200ResponseEmbedded ListObservationsForApp200ResponseEmbedded

// NewListObservationsForApp200ResponseEmbedded instantiates a new ListObservationsForApp200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListObservationsForApp200ResponseEmbedded() *ListObservationsForApp200ResponseEmbedded {
	this := ListObservationsForApp200ResponseEmbedded{}
	return &this
}

// NewListObservationsForApp200ResponseEmbeddedWithDefaults instantiates a new ListObservationsForApp200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListObservationsForApp200ResponseEmbeddedWithDefaults() *ListObservationsForApp200ResponseEmbedded {
	this := ListObservationsForApp200ResponseEmbedded{}
	return &this
}

// GetObservations returns the Observations field value if set, zero value otherwise.
func (o *ListObservationsForApp200ResponseEmbedded) GetObservations() []Observation {
	if o == nil || IsNil(o.Observations) {
		var ret []Observation
		return ret
	}
	return o.Observations
}

// GetObservationsOk returns a tuple with the Observations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListObservationsForApp200ResponseEmbedded) GetObservationsOk() ([]Observation, bool) {
	if o == nil || IsNil(o.Observations) {
		return nil, false
	}
	return o.Observations, true
}

// HasObservations returns a boolean if a field has been set.
func (o *ListObservationsForApp200ResponseEmbedded) HasObservations() bool {
	if o != nil && !IsNil(o.Observations) {
		return true
	}

	return false
}

// SetObservations gets a reference to the given []Observation and assigns it to the Observations field.
func (o *ListObservationsForApp200ResponseEmbedded) SetObservations(v []Observation) {
	o.Observations = v
}

func (o ListObservationsForApp200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListObservationsForApp200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Observations) {
		toSerialize["observations"] = o.Observations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListObservationsForApp200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListObservationsForApp200ResponseEmbedded := _ListObservationsForApp200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListObservationsForApp200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListObservationsForApp200ResponseEmbedded(varListObservationsForApp200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "observations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListObservationsForApp200ResponseEmbedded struct {
	value *ListObservationsForApp200ResponseEmbedded
	isSet bool
}

func (v NullableListObservationsForApp200ResponseEmbedded) Get() *ListObservationsForApp200ResponseEmbedded {
	return v.value
}

func (v *NullableListObservationsForApp200ResponseEmbedded) Set(val *ListObservationsForApp200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListObservationsForApp200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListObservationsForApp200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListObservationsForApp200ResponseEmbedded(val *ListObservationsForApp200ResponseEmbedded) *NullableListObservationsForApp200ResponseEmbedded {
	return &NullableListObservationsForApp200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListObservationsForApp200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListObservationsForApp200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


