/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Deployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Deployment{}

// Deployment struct for Deployment
type Deployment struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	Status string `json:"status"`
	OperationId int32 `json:"operation_id"`
	AppId int32 `json:"app_id"`
	ConfigurationId NullableInt32 `json:"configuration_id"`
	ImageId NullableInt32 `json:"image_id"`
	SourceId NullableInt32 `json:"source_id"`
	DockerImage NullableString `json:"docker_image"`
	DockerRepositoryUrl NullableString `json:"docker_repository_url"`
	GitRepositoryUrl NullableString `json:"git_repository_url"`
	GitRef NullableString `json:"git_ref"`
	GitCommitSha NullableString `json:"git_commit_sha"`
	GitCommitTimestamp NullableString `json:"git_commit_timestamp"`
	GitCommitUrl NullableString `json:"git_commit_url"`
	GitCommitMessage NullableString `json:"git_commit_message"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt NullableString `json:"deleted_at"`
	Links *DeploymentLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Deployment Deployment

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment(id int32, metaType string, status string, operationId int32, appId int32, configurationId NullableInt32, imageId NullableInt32, sourceId NullableInt32, dockerImage NullableString, dockerRepositoryUrl NullableString, gitRepositoryUrl NullableString, gitRef NullableString, gitCommitSha NullableString, gitCommitTimestamp NullableString, gitCommitUrl NullableString, gitCommitMessage NullableString, createdAt string, updatedAt string, deletedAt NullableString) *Deployment {
	this := Deployment{}
	this.Id = id
	this.MetaType = metaType
	this.Status = status
	this.OperationId = operationId
	this.AppId = appId
	this.ConfigurationId = configurationId
	this.ImageId = imageId
	this.SourceId = sourceId
	this.DockerImage = dockerImage
	this.DockerRepositoryUrl = dockerRepositoryUrl
	this.GitRepositoryUrl = gitRepositoryUrl
	this.GitRef = gitRef
	this.GitCommitSha = gitCommitSha
	this.GitCommitTimestamp = gitCommitTimestamp
	this.GitCommitUrl = gitCommitUrl
	this.GitCommitMessage = gitCommitMessage
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.DeletedAt = deletedAt
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetId returns the Id field value
func (o *Deployment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Deployment) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *Deployment) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Deployment) SetMetaType(v string) {
	o.MetaType = v
}

// GetStatus returns the Status field value
func (o *Deployment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Deployment) SetStatus(v string) {
	o.Status = v
}

// GetOperationId returns the OperationId field value
func (o *Deployment) GetOperationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetOperationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationId, true
}

// SetOperationId sets field value
func (o *Deployment) SetOperationId(v int32) {
	o.OperationId = v
}

// GetAppId returns the AppId field value
func (o *Deployment) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *Deployment) SetAppId(v int32) {
	o.AppId = v
}

// GetConfigurationId returns the ConfigurationId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Deployment) GetConfigurationId() int32 {
	if o == nil || o.ConfigurationId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ConfigurationId.Get()
}

// GetConfigurationIdOk returns a tuple with the ConfigurationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetConfigurationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigurationId.Get(), o.ConfigurationId.IsSet()
}

// SetConfigurationId sets field value
func (o *Deployment) SetConfigurationId(v int32) {
	o.ConfigurationId.Set(&v)
}

// GetImageId returns the ImageId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Deployment) GetImageId() int32 {
	if o == nil || o.ImageId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetImageIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// SetImageId sets field value
func (o *Deployment) SetImageId(v int32) {
	o.ImageId.Set(&v)
}

// GetSourceId returns the SourceId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Deployment) GetSourceId() int32 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetSourceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// SetSourceId sets field value
func (o *Deployment) SetSourceId(v int32) {
	o.SourceId.Set(&v)
}

// GetDockerImage returns the DockerImage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetDockerImage() string {
	if o == nil || o.DockerImage.Get() == nil {
		var ret string
		return ret
	}

	return *o.DockerImage.Get()
}

// GetDockerImageOk returns a tuple with the DockerImage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetDockerImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DockerImage.Get(), o.DockerImage.IsSet()
}

// SetDockerImage sets field value
func (o *Deployment) SetDockerImage(v string) {
	o.DockerImage.Set(&v)
}

// GetDockerRepositoryUrl returns the DockerRepositoryUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetDockerRepositoryUrl() string {
	if o == nil || o.DockerRepositoryUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.DockerRepositoryUrl.Get()
}

// GetDockerRepositoryUrlOk returns a tuple with the DockerRepositoryUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetDockerRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DockerRepositoryUrl.Get(), o.DockerRepositoryUrl.IsSet()
}

// SetDockerRepositoryUrl sets field value
func (o *Deployment) SetDockerRepositoryUrl(v string) {
	o.DockerRepositoryUrl.Set(&v)
}

// GetGitRepositoryUrl returns the GitRepositoryUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetGitRepositoryUrl() string {
	if o == nil || o.GitRepositoryUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.GitRepositoryUrl.Get()
}

// GetGitRepositoryUrlOk returns a tuple with the GitRepositoryUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGitRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitRepositoryUrl.Get(), o.GitRepositoryUrl.IsSet()
}

// SetGitRepositoryUrl sets field value
func (o *Deployment) SetGitRepositoryUrl(v string) {
	o.GitRepositoryUrl.Set(&v)
}

// GetGitRef returns the GitRef field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetGitRef() string {
	if o == nil || o.GitRef.Get() == nil {
		var ret string
		return ret
	}

	return *o.GitRef.Get()
}

// GetGitRefOk returns a tuple with the GitRef field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGitRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitRef.Get(), o.GitRef.IsSet()
}

// SetGitRef sets field value
func (o *Deployment) SetGitRef(v string) {
	o.GitRef.Set(&v)
}

// GetGitCommitSha returns the GitCommitSha field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetGitCommitSha() string {
	if o == nil || o.GitCommitSha.Get() == nil {
		var ret string
		return ret
	}

	return *o.GitCommitSha.Get()
}

// GetGitCommitShaOk returns a tuple with the GitCommitSha field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGitCommitShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitCommitSha.Get(), o.GitCommitSha.IsSet()
}

// SetGitCommitSha sets field value
func (o *Deployment) SetGitCommitSha(v string) {
	o.GitCommitSha.Set(&v)
}

// GetGitCommitTimestamp returns the GitCommitTimestamp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetGitCommitTimestamp() string {
	if o == nil || o.GitCommitTimestamp.Get() == nil {
		var ret string
		return ret
	}

	return *o.GitCommitTimestamp.Get()
}

// GetGitCommitTimestampOk returns a tuple with the GitCommitTimestamp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGitCommitTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitCommitTimestamp.Get(), o.GitCommitTimestamp.IsSet()
}

// SetGitCommitTimestamp sets field value
func (o *Deployment) SetGitCommitTimestamp(v string) {
	o.GitCommitTimestamp.Set(&v)
}

// GetGitCommitUrl returns the GitCommitUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetGitCommitUrl() string {
	if o == nil || o.GitCommitUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.GitCommitUrl.Get()
}

// GetGitCommitUrlOk returns a tuple with the GitCommitUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGitCommitUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitCommitUrl.Get(), o.GitCommitUrl.IsSet()
}

// SetGitCommitUrl sets field value
func (o *Deployment) SetGitCommitUrl(v string) {
	o.GitCommitUrl.Set(&v)
}

// GetGitCommitMessage returns the GitCommitMessage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetGitCommitMessage() string {
	if o == nil || o.GitCommitMessage.Get() == nil {
		var ret string
		return ret
	}

	return *o.GitCommitMessage.Get()
}

// GetGitCommitMessageOk returns a tuple with the GitCommitMessage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGitCommitMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitCommitMessage.Get(), o.GitCommitMessage.IsSet()
}

// SetGitCommitMessage sets field value
func (o *Deployment) SetGitCommitMessage(v string) {
	o.GitCommitMessage.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *Deployment) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Deployment) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Deployment) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Deployment) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetDeletedAt returns the DeletedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetDeletedAt() string {
	if o == nil || o.DeletedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetDeletedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// SetDeletedAt sets field value
func (o *Deployment) SetDeletedAt(v string) {
	o.DeletedAt.Set(&v)
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Deployment) GetLinks() DeploymentLinks {
	if o == nil || IsNil(o.Links) {
		var ret DeploymentLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetLinksOk() (*DeploymentLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Deployment) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given DeploymentLinks and assigns it to the Links field.
func (o *Deployment) SetLinks(v DeploymentLinks) {
	o.Links = &v
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Deployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["status"] = o.Status
	toSerialize["operation_id"] = o.OperationId
	toSerialize["app_id"] = o.AppId
	toSerialize["configuration_id"] = o.ConfigurationId.Get()
	toSerialize["image_id"] = o.ImageId.Get()
	toSerialize["source_id"] = o.SourceId.Get()
	toSerialize["docker_image"] = o.DockerImage.Get()
	toSerialize["docker_repository_url"] = o.DockerRepositoryUrl.Get()
	toSerialize["git_repository_url"] = o.GitRepositoryUrl.Get()
	toSerialize["git_ref"] = o.GitRef.Get()
	toSerialize["git_commit_sha"] = o.GitCommitSha.Get()
	toSerialize["git_commit_timestamp"] = o.GitCommitTimestamp.Get()
	toSerialize["git_commit_url"] = o.GitCommitUrl.Get()
	toSerialize["git_commit_message"] = o.GitCommitMessage.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["deleted_at"] = o.DeletedAt.Get()
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Deployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"status",
		"operation_id",
		"app_id",
		"configuration_id",
		"image_id",
		"source_id",
		"docker_image",
		"docker_repository_url",
		"git_repository_url",
		"git_ref",
		"git_commit_sha",
		"git_commit_timestamp",
		"git_commit_url",
		"git_commit_message",
		"created_at",
		"updated_at",
		"deleted_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeployment := _Deployment{}

	err = json.Unmarshal(data, &varDeployment)

	if err != nil {
		return err
	}

	*o = Deployment(varDeployment)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "status")
		delete(additionalProperties, "operation_id")
		delete(additionalProperties, "app_id")
		delete(additionalProperties, "configuration_id")
		delete(additionalProperties, "image_id")
		delete(additionalProperties, "source_id")
		delete(additionalProperties, "docker_image")
		delete(additionalProperties, "docker_repository_url")
		delete(additionalProperties, "git_repository_url")
		delete(additionalProperties, "git_ref")
		delete(additionalProperties, "git_commit_sha")
		delete(additionalProperties, "git_commit_timestamp")
		delete(additionalProperties, "git_commit_url")
		delete(additionalProperties, "git_commit_message")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


