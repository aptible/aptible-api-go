/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the LogDrainsLogDrainIdContainersGet200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogDrainsLogDrainIdContainersGet200ResponseEmbedded{}

// LogDrainsLogDrainIdContainersGet200ResponseEmbedded struct for LogDrainsLogDrainIdContainersGet200ResponseEmbedded
type LogDrainsLogDrainIdContainersGet200ResponseEmbedded struct {
	Containers []Container `json:"containers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogDrainsLogDrainIdContainersGet200ResponseEmbedded LogDrainsLogDrainIdContainersGet200ResponseEmbedded

// NewLogDrainsLogDrainIdContainersGet200ResponseEmbedded instantiates a new LogDrainsLogDrainIdContainersGet200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogDrainsLogDrainIdContainersGet200ResponseEmbedded() *LogDrainsLogDrainIdContainersGet200ResponseEmbedded {
	this := LogDrainsLogDrainIdContainersGet200ResponseEmbedded{}
	return &this
}

// NewLogDrainsLogDrainIdContainersGet200ResponseEmbeddedWithDefaults instantiates a new LogDrainsLogDrainIdContainersGet200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogDrainsLogDrainIdContainersGet200ResponseEmbeddedWithDefaults() *LogDrainsLogDrainIdContainersGet200ResponseEmbedded {
	this := LogDrainsLogDrainIdContainersGet200ResponseEmbedded{}
	return &this
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) GetContainers() []Container {
	if o == nil || IsNil(o.Containers) {
		var ret []Container
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) GetContainersOk() ([]Container, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []Container and assigns it to the Containers field.
func (o *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) SetContainers(v []Container) {
	o.Containers = v
}

func (o LogDrainsLogDrainIdContainersGet200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogDrainsLogDrainIdContainersGet200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varLogDrainsLogDrainIdContainersGet200ResponseEmbedded := _LogDrainsLogDrainIdContainersGet200ResponseEmbedded{}

	err = json.Unmarshal(data, &varLogDrainsLogDrainIdContainersGet200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = LogDrainsLogDrainIdContainersGet200ResponseEmbedded(varLogDrainsLogDrainIdContainersGet200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "containers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded struct {
	value *LogDrainsLogDrainIdContainersGet200ResponseEmbedded
	isSet bool
}

func (v NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded) Get() *LogDrainsLogDrainIdContainersGet200ResponseEmbedded {
	return v.value
}

func (v *NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded) Set(val *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded(val *LogDrainsLogDrainIdContainersGet200ResponseEmbedded) *NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded {
	return &NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogDrainsLogDrainIdContainersGet200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


