/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateDatadogIntegrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDatadogIntegrationRequest{}

// CreateDatadogIntegrationRequest struct for CreateDatadogIntegrationRequest
type CreateDatadogIntegrationRequest struct {
	Type string `json:"type"`
	OrganizationId string `json:"organization_id"`
	AwsRoleArn *string `json:"aws_role_arn,omitempty"`
	ApiKey *string `json:"api_key,omitempty"`
	AppKey *string `json:"app_key,omitempty"`
	Host *string `json:"host,omitempty"`
	Port *string `json:"port,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	Database *string `json:"database,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateDatadogIntegrationRequest CreateDatadogIntegrationRequest

// NewCreateDatadogIntegrationRequest instantiates a new CreateDatadogIntegrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDatadogIntegrationRequest(type_ string, organizationId string) *CreateDatadogIntegrationRequest {
	this := CreateDatadogIntegrationRequest{}
	this.Type = type_
	this.OrganizationId = organizationId
	return &this
}

// NewCreateDatadogIntegrationRequestWithDefaults instantiates a new CreateDatadogIntegrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDatadogIntegrationRequestWithDefaults() *CreateDatadogIntegrationRequest {
	this := CreateDatadogIntegrationRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateDatadogIntegrationRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateDatadogIntegrationRequest) SetType(v string) {
	o.Type = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateDatadogIntegrationRequest) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateDatadogIntegrationRequest) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetAwsRoleArn returns the AwsRoleArn field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetAwsRoleArn() string {
	if o == nil || IsNil(o.AwsRoleArn) {
		var ret string
		return ret
	}
	return *o.AwsRoleArn
}

// GetAwsRoleArnOk returns a tuple with the AwsRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetAwsRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.AwsRoleArn) {
		return nil, false
	}
	return o.AwsRoleArn, true
}

// HasAwsRoleArn returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasAwsRoleArn() bool {
	if o != nil && !IsNil(o.AwsRoleArn) {
		return true
	}

	return false
}

// SetAwsRoleArn gets a reference to the given string and assigns it to the AwsRoleArn field.
func (o *CreateDatadogIntegrationRequest) SetAwsRoleArn(v string) {
	o.AwsRoleArn = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *CreateDatadogIntegrationRequest) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetAppKey returns the AppKey field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetAppKey() string {
	if o == nil || IsNil(o.AppKey) {
		var ret string
		return ret
	}
	return *o.AppKey
}

// GetAppKeyOk returns a tuple with the AppKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetAppKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AppKey) {
		return nil, false
	}
	return o.AppKey, true
}

// HasAppKey returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasAppKey() bool {
	if o != nil && !IsNil(o.AppKey) {
		return true
	}

	return false
}

// SetAppKey gets a reference to the given string and assigns it to the AppKey field.
func (o *CreateDatadogIntegrationRequest) SetAppKey(v string) {
	o.AppKey = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *CreateDatadogIntegrationRequest) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *CreateDatadogIntegrationRequest) SetPort(v string) {
	o.Port = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateDatadogIntegrationRequest) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateDatadogIntegrationRequest) SetPassword(v string) {
	o.Password = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *CreateDatadogIntegrationRequest) GetDatabase() string {
	if o == nil || IsNil(o.Database) {
		var ret string
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatadogIntegrationRequest) GetDatabaseOk() (*string, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *CreateDatadogIntegrationRequest) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given string and assigns it to the Database field.
func (o *CreateDatadogIntegrationRequest) SetDatabase(v string) {
	o.Database = &v
}

func (o CreateDatadogIntegrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDatadogIntegrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["organization_id"] = o.OrganizationId
	if !IsNil(o.AwsRoleArn) {
		toSerialize["aws_role_arn"] = o.AwsRoleArn
	}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.AppKey) {
		toSerialize["app_key"] = o.AppKey
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateDatadogIntegrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"organization_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDatadogIntegrationRequest := _CreateDatadogIntegrationRequest{}

	err = json.Unmarshal(data, &varCreateDatadogIntegrationRequest)

	if err != nil {
		return err
	}

	*o = CreateDatadogIntegrationRequest(varCreateDatadogIntegrationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "aws_role_arn")
		delete(additionalProperties, "api_key")
		delete(additionalProperties, "app_key")
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "database")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateDatadogIntegrationRequest struct {
	value *CreateDatadogIntegrationRequest
	isSet bool
}

func (v NullableCreateDatadogIntegrationRequest) Get() *CreateDatadogIntegrationRequest {
	return v.value
}

func (v *NullableCreateDatadogIntegrationRequest) Set(val *CreateDatadogIntegrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDatadogIntegrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDatadogIntegrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDatadogIntegrationRequest(val *CreateDatadogIntegrationRequest) *NullableCreateDatadogIntegrationRequest {
	return &NullableCreateDatadogIntegrationRequest{value: val, isSet: true}
}

func (v NullableCreateDatadogIntegrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDatadogIntegrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


