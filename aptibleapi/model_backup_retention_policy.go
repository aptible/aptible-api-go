/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the BackupRetentionPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRetentionPolicy{}

// BackupRetentionPolicy struct for BackupRetentionPolicy
type BackupRetentionPolicy struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	CreatedAt string `json:"created_at"`
	Daily int32 `json:"daily"`
	Monthly int32 `json:"monthly"`
	Yearly int32 `json:"yearly"`
	MakeCopy bool `json:"make_copy"`
	KeepFinal bool `json:"keep_final"`
	Links *BackupRetentionPolicyLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BackupRetentionPolicy BackupRetentionPolicy

// NewBackupRetentionPolicy instantiates a new BackupRetentionPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRetentionPolicy(id int32, metaType string, createdAt string, daily int32, monthly int32, yearly int32, makeCopy bool, keepFinal bool) *BackupRetentionPolicy {
	this := BackupRetentionPolicy{}
	this.Id = id
	this.MetaType = metaType
	this.CreatedAt = createdAt
	this.Daily = daily
	this.Monthly = monthly
	this.Yearly = yearly
	this.MakeCopy = makeCopy
	this.KeepFinal = keepFinal
	return &this
}

// NewBackupRetentionPolicyWithDefaults instantiates a new BackupRetentionPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRetentionPolicyWithDefaults() *BackupRetentionPolicy {
	this := BackupRetentionPolicy{}
	return &this
}

// GetId returns the Id field value
func (o *BackupRetentionPolicy) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BackupRetentionPolicy) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *BackupRetentionPolicy) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *BackupRetentionPolicy) SetMetaType(v string) {
	o.MetaType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BackupRetentionPolicy) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BackupRetentionPolicy) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDaily returns the Daily field value
func (o *BackupRetentionPolicy) GetDaily() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Daily
}

// GetDailyOk returns a tuple with the Daily field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetDailyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Daily, true
}

// SetDaily sets field value
func (o *BackupRetentionPolicy) SetDaily(v int32) {
	o.Daily = v
}

// GetMonthly returns the Monthly field value
func (o *BackupRetentionPolicy) GetMonthly() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetMonthlyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Monthly, true
}

// SetMonthly sets field value
func (o *BackupRetentionPolicy) SetMonthly(v int32) {
	o.Monthly = v
}

// GetYearly returns the Yearly field value
func (o *BackupRetentionPolicy) GetYearly() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Yearly
}

// GetYearlyOk returns a tuple with the Yearly field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetYearlyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Yearly, true
}

// SetYearly sets field value
func (o *BackupRetentionPolicy) SetYearly(v int32) {
	o.Yearly = v
}

// GetMakeCopy returns the MakeCopy field value
func (o *BackupRetentionPolicy) GetMakeCopy() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MakeCopy
}

// GetMakeCopyOk returns a tuple with the MakeCopy field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetMakeCopyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MakeCopy, true
}

// SetMakeCopy sets field value
func (o *BackupRetentionPolicy) SetMakeCopy(v bool) {
	o.MakeCopy = v
}

// GetKeepFinal returns the KeepFinal field value
func (o *BackupRetentionPolicy) GetKeepFinal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KeepFinal
}

// GetKeepFinalOk returns a tuple with the KeepFinal field value
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetKeepFinalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeepFinal, true
}

// SetKeepFinal sets field value
func (o *BackupRetentionPolicy) SetKeepFinal(v bool) {
	o.KeepFinal = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BackupRetentionPolicy) GetLinks() BackupRetentionPolicyLinks {
	if o == nil || IsNil(o.Links) {
		var ret BackupRetentionPolicyLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRetentionPolicy) GetLinksOk() (*BackupRetentionPolicyLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BackupRetentionPolicy) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given BackupRetentionPolicyLinks and assigns it to the Links field.
func (o *BackupRetentionPolicy) SetLinks(v BackupRetentionPolicyLinks) {
	o.Links = &v
}

func (o BackupRetentionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRetentionPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["daily"] = o.Daily
	toSerialize["monthly"] = o.Monthly
	toSerialize["yearly"] = o.Yearly
	toSerialize["make_copy"] = o.MakeCopy
	toSerialize["keep_final"] = o.KeepFinal
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BackupRetentionPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"created_at",
		"daily",
		"monthly",
		"yearly",
		"make_copy",
		"keep_final",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupRetentionPolicy := _BackupRetentionPolicy{}

	err = json.Unmarshal(data, &varBackupRetentionPolicy)

	if err != nil {
		return err
	}

	*o = BackupRetentionPolicy(varBackupRetentionPolicy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "daily")
		delete(additionalProperties, "monthly")
		delete(additionalProperties, "yearly")
		delete(additionalProperties, "make_copy")
		delete(additionalProperties, "keep_final")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBackupRetentionPolicy struct {
	value *BackupRetentionPolicy
	isSet bool
}

func (v NullableBackupRetentionPolicy) Get() *BackupRetentionPolicy {
	return v.value
}

func (v *NullableBackupRetentionPolicy) Set(val *BackupRetentionPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRetentionPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRetentionPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRetentionPolicy(val *BackupRetentionPolicy) *NullableBackupRetentionPolicy {
	return &NullableBackupRetentionPolicy{value: val, isSet: true}
}

func (v NullableBackupRetentionPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRetentionPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


