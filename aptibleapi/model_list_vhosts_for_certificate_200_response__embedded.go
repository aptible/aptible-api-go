/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListVhostsForCertificate200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVhostsForCertificate200ResponseEmbedded{}

// ListVhostsForCertificate200ResponseEmbedded struct for ListVhostsForCertificate200ResponseEmbedded
type ListVhostsForCertificate200ResponseEmbedded struct {
	Vhosts []Vhost `json:"vhosts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListVhostsForCertificate200ResponseEmbedded ListVhostsForCertificate200ResponseEmbedded

// NewListVhostsForCertificate200ResponseEmbedded instantiates a new ListVhostsForCertificate200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVhostsForCertificate200ResponseEmbedded() *ListVhostsForCertificate200ResponseEmbedded {
	this := ListVhostsForCertificate200ResponseEmbedded{}
	return &this
}

// NewListVhostsForCertificate200ResponseEmbeddedWithDefaults instantiates a new ListVhostsForCertificate200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVhostsForCertificate200ResponseEmbeddedWithDefaults() *ListVhostsForCertificate200ResponseEmbedded {
	this := ListVhostsForCertificate200ResponseEmbedded{}
	return &this
}

// GetVhosts returns the Vhosts field value if set, zero value otherwise.
func (o *ListVhostsForCertificate200ResponseEmbedded) GetVhosts() []Vhost {
	if o == nil || IsNil(o.Vhosts) {
		var ret []Vhost
		return ret
	}
	return o.Vhosts
}

// GetVhostsOk returns a tuple with the Vhosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVhostsForCertificate200ResponseEmbedded) GetVhostsOk() ([]Vhost, bool) {
	if o == nil || IsNil(o.Vhosts) {
		return nil, false
	}
	return o.Vhosts, true
}

// HasVhosts returns a boolean if a field has been set.
func (o *ListVhostsForCertificate200ResponseEmbedded) HasVhosts() bool {
	if o != nil && !IsNil(o.Vhosts) {
		return true
	}

	return false
}

// SetVhosts gets a reference to the given []Vhost and assigns it to the Vhosts field.
func (o *ListVhostsForCertificate200ResponseEmbedded) SetVhosts(v []Vhost) {
	o.Vhosts = v
}

func (o ListVhostsForCertificate200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVhostsForCertificate200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Vhosts) {
		toSerialize["vhosts"] = o.Vhosts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListVhostsForCertificate200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListVhostsForCertificate200ResponseEmbedded := _ListVhostsForCertificate200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListVhostsForCertificate200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListVhostsForCertificate200ResponseEmbedded(varListVhostsForCertificate200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vhosts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListVhostsForCertificate200ResponseEmbedded struct {
	value *ListVhostsForCertificate200ResponseEmbedded
	isSet bool
}

func (v NullableListVhostsForCertificate200ResponseEmbedded) Get() *ListVhostsForCertificate200ResponseEmbedded {
	return v.value
}

func (v *NullableListVhostsForCertificate200ResponseEmbedded) Set(val *ListVhostsForCertificate200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListVhostsForCertificate200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListVhostsForCertificate200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVhostsForCertificate200ResponseEmbedded(val *ListVhostsForCertificate200ResponseEmbedded) *NullableListVhostsForCertificate200ResponseEmbedded {
	return &NullableListVhostsForCertificate200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListVhostsForCertificate200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVhostsForCertificate200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


