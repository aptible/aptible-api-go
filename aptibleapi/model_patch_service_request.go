/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the PatchServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchServiceRequest{}

// PatchServiceRequest struct for PatchServiceRequest
type PatchServiceRequest struct {
	NaiveHealthCheck *bool `json:"naive_health_check,omitempty"`
	ForceZeroDowntime *bool `json:"force_zero_downtime,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchServiceRequest PatchServiceRequest

// NewPatchServiceRequest instantiates a new PatchServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchServiceRequest() *PatchServiceRequest {
	this := PatchServiceRequest{}
	return &this
}

// NewPatchServiceRequestWithDefaults instantiates a new PatchServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchServiceRequestWithDefaults() *PatchServiceRequest {
	this := PatchServiceRequest{}
	return &this
}

// GetNaiveHealthCheck returns the NaiveHealthCheck field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetNaiveHealthCheck() bool {
	if o == nil || IsNil(o.NaiveHealthCheck) {
		var ret bool
		return ret
	}
	return *o.NaiveHealthCheck
}

// GetNaiveHealthCheckOk returns a tuple with the NaiveHealthCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetNaiveHealthCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.NaiveHealthCheck) {
		return nil, false
	}
	return o.NaiveHealthCheck, true
}

// HasNaiveHealthCheck returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasNaiveHealthCheck() bool {
	if o != nil && !IsNil(o.NaiveHealthCheck) {
		return true
	}

	return false
}

// SetNaiveHealthCheck gets a reference to the given bool and assigns it to the NaiveHealthCheck field.
func (o *PatchServiceRequest) SetNaiveHealthCheck(v bool) {
	o.NaiveHealthCheck = &v
}

// GetForceZeroDowntime returns the ForceZeroDowntime field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetForceZeroDowntime() bool {
	if o == nil || IsNil(o.ForceZeroDowntime) {
		var ret bool
		return ret
	}
	return *o.ForceZeroDowntime
}

// GetForceZeroDowntimeOk returns a tuple with the ForceZeroDowntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetForceZeroDowntimeOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceZeroDowntime) {
		return nil, false
	}
	return o.ForceZeroDowntime, true
}

// HasForceZeroDowntime returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasForceZeroDowntime() bool {
	if o != nil && !IsNil(o.ForceZeroDowntime) {
		return true
	}

	return false
}

// SetForceZeroDowntime gets a reference to the given bool and assigns it to the ForceZeroDowntime field.
func (o *PatchServiceRequest) SetForceZeroDowntime(v bool) {
	o.ForceZeroDowntime = &v
}

func (o PatchServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NaiveHealthCheck) {
		toSerialize["naive_health_check"] = o.NaiveHealthCheck
	}
	if !IsNil(o.ForceZeroDowntime) {
		toSerialize["force_zero_downtime"] = o.ForceZeroDowntime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchServiceRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchServiceRequest := _PatchServiceRequest{}

	err = json.Unmarshal(data, &varPatchServiceRequest)

	if err != nil {
		return err
	}

	*o = PatchServiceRequest(varPatchServiceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "naive_health_check")
		delete(additionalProperties, "force_zero_downtime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchServiceRequest struct {
	value *PatchServiceRequest
	isSet bool
}

func (v NullablePatchServiceRequest) Get() *PatchServiceRequest {
	return v.value
}

func (v *NullablePatchServiceRequest) Set(val *PatchServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchServiceRequest(val *PatchServiceRequest) *NullablePatchServiceRequest {
	return &NullablePatchServiceRequest{value: val, isSet: true}
}

func (v NullablePatchServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


