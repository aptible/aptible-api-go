/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the UpdateLogDrainRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLogDrainRequest{}

// UpdateLogDrainRequest struct for UpdateLogDrainRequest
type UpdateLogDrainRequest struct {
	DrainApps *bool `json:"drain_apps,omitempty"`
	DrainDatabases *bool `json:"drain_databases,omitempty"`
	DrainEphemeralSessions *bool `json:"drain_ephemeral_sessions,omitempty"`
	DrainProxies *bool `json:"drain_proxies,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateLogDrainRequest UpdateLogDrainRequest

// NewUpdateLogDrainRequest instantiates a new UpdateLogDrainRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLogDrainRequest() *UpdateLogDrainRequest {
	this := UpdateLogDrainRequest{}
	return &this
}

// NewUpdateLogDrainRequestWithDefaults instantiates a new UpdateLogDrainRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLogDrainRequestWithDefaults() *UpdateLogDrainRequest {
	this := UpdateLogDrainRequest{}
	return &this
}

// GetDrainApps returns the DrainApps field value if set, zero value otherwise.
func (o *UpdateLogDrainRequest) GetDrainApps() bool {
	if o == nil || IsNil(o.DrainApps) {
		var ret bool
		return ret
	}
	return *o.DrainApps
}

// GetDrainAppsOk returns a tuple with the DrainApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogDrainRequest) GetDrainAppsOk() (*bool, bool) {
	if o == nil || IsNil(o.DrainApps) {
		return nil, false
	}
	return o.DrainApps, true
}

// HasDrainApps returns a boolean if a field has been set.
func (o *UpdateLogDrainRequest) HasDrainApps() bool {
	if o != nil && !IsNil(o.DrainApps) {
		return true
	}

	return false
}

// SetDrainApps gets a reference to the given bool and assigns it to the DrainApps field.
func (o *UpdateLogDrainRequest) SetDrainApps(v bool) {
	o.DrainApps = &v
}

// GetDrainDatabases returns the DrainDatabases field value if set, zero value otherwise.
func (o *UpdateLogDrainRequest) GetDrainDatabases() bool {
	if o == nil || IsNil(o.DrainDatabases) {
		var ret bool
		return ret
	}
	return *o.DrainDatabases
}

// GetDrainDatabasesOk returns a tuple with the DrainDatabases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogDrainRequest) GetDrainDatabasesOk() (*bool, bool) {
	if o == nil || IsNil(o.DrainDatabases) {
		return nil, false
	}
	return o.DrainDatabases, true
}

// HasDrainDatabases returns a boolean if a field has been set.
func (o *UpdateLogDrainRequest) HasDrainDatabases() bool {
	if o != nil && !IsNil(o.DrainDatabases) {
		return true
	}

	return false
}

// SetDrainDatabases gets a reference to the given bool and assigns it to the DrainDatabases field.
func (o *UpdateLogDrainRequest) SetDrainDatabases(v bool) {
	o.DrainDatabases = &v
}

// GetDrainEphemeralSessions returns the DrainEphemeralSessions field value if set, zero value otherwise.
func (o *UpdateLogDrainRequest) GetDrainEphemeralSessions() bool {
	if o == nil || IsNil(o.DrainEphemeralSessions) {
		var ret bool
		return ret
	}
	return *o.DrainEphemeralSessions
}

// GetDrainEphemeralSessionsOk returns a tuple with the DrainEphemeralSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogDrainRequest) GetDrainEphemeralSessionsOk() (*bool, bool) {
	if o == nil || IsNil(o.DrainEphemeralSessions) {
		return nil, false
	}
	return o.DrainEphemeralSessions, true
}

// HasDrainEphemeralSessions returns a boolean if a field has been set.
func (o *UpdateLogDrainRequest) HasDrainEphemeralSessions() bool {
	if o != nil && !IsNil(o.DrainEphemeralSessions) {
		return true
	}

	return false
}

// SetDrainEphemeralSessions gets a reference to the given bool and assigns it to the DrainEphemeralSessions field.
func (o *UpdateLogDrainRequest) SetDrainEphemeralSessions(v bool) {
	o.DrainEphemeralSessions = &v
}

// GetDrainProxies returns the DrainProxies field value if set, zero value otherwise.
func (o *UpdateLogDrainRequest) GetDrainProxies() bool {
	if o == nil || IsNil(o.DrainProxies) {
		var ret bool
		return ret
	}
	return *o.DrainProxies
}

// GetDrainProxiesOk returns a tuple with the DrainProxies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogDrainRequest) GetDrainProxiesOk() (*bool, bool) {
	if o == nil || IsNil(o.DrainProxies) {
		return nil, false
	}
	return o.DrainProxies, true
}

// HasDrainProxies returns a boolean if a field has been set.
func (o *UpdateLogDrainRequest) HasDrainProxies() bool {
	if o != nil && !IsNil(o.DrainProxies) {
		return true
	}

	return false
}

// SetDrainProxies gets a reference to the given bool and assigns it to the DrainProxies field.
func (o *UpdateLogDrainRequest) SetDrainProxies(v bool) {
	o.DrainProxies = &v
}

func (o UpdateLogDrainRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLogDrainRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DrainApps) {
		toSerialize["drain_apps"] = o.DrainApps
	}
	if !IsNil(o.DrainDatabases) {
		toSerialize["drain_databases"] = o.DrainDatabases
	}
	if !IsNil(o.DrainEphemeralSessions) {
		toSerialize["drain_ephemeral_sessions"] = o.DrainEphemeralSessions
	}
	if !IsNil(o.DrainProxies) {
		toSerialize["drain_proxies"] = o.DrainProxies
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateLogDrainRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateLogDrainRequest := _UpdateLogDrainRequest{}

	err = json.Unmarshal(data, &varUpdateLogDrainRequest)

	if err != nil {
		return err
	}

	*o = UpdateLogDrainRequest(varUpdateLogDrainRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "drain_apps")
		delete(additionalProperties, "drain_databases")
		delete(additionalProperties, "drain_ephemeral_sessions")
		delete(additionalProperties, "drain_proxies")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateLogDrainRequest struct {
	value *UpdateLogDrainRequest
	isSet bool
}

func (v NullableUpdateLogDrainRequest) Get() *UpdateLogDrainRequest {
	return v.value
}

func (v *NullableUpdateLogDrainRequest) Set(val *UpdateLogDrainRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLogDrainRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLogDrainRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLogDrainRequest(val *UpdateLogDrainRequest) *NullableUpdateLogDrainRequest {
	return &NullableUpdateLogDrainRequest{value: val, isSet: true}
}

func (v NullableUpdateLogDrainRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLogDrainRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


