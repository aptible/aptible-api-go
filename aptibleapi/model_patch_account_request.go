/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the PatchAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchAccountRequest{}

// PatchAccountRequest struct for PatchAccountRequest
type PatchAccountRequest struct {
	Handle *string `json:"handle,omitempty"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchAccountRequest PatchAccountRequest

// NewPatchAccountRequest instantiates a new PatchAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchAccountRequest() *PatchAccountRequest {
	this := PatchAccountRequest{}
	return &this
}

// NewPatchAccountRequestWithDefaults instantiates a new PatchAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchAccountRequestWithDefaults() *PatchAccountRequest {
	this := PatchAccountRequest{}
	return &this
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *PatchAccountRequest) GetHandle() string {
	if o == nil || IsNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAccountRequest) GetHandleOk() (*string, bool) {
	if o == nil || IsNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *PatchAccountRequest) HasHandle() bool {
	if o != nil && !IsNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *PatchAccountRequest) SetHandle(v string) {
	o.Handle = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchAccountRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAccountRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchAccountRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchAccountRequest) SetName(v string) {
	o.Name = &v
}

func (o PatchAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchAccountRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchAccountRequest := _PatchAccountRequest{}

	err = json.Unmarshal(data, &varPatchAccountRequest)

	if err != nil {
		return err
	}

	*o = PatchAccountRequest(varPatchAccountRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "handle")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchAccountRequest struct {
	value *PatchAccountRequest
	isSet bool
}

func (v NullablePatchAccountRequest) Get() *PatchAccountRequest {
	return v.value
}

func (v *NullablePatchAccountRequest) Set(val *PatchAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchAccountRequest(val *PatchAccountRequest) *NullablePatchAccountRequest {
	return &NullablePatchAccountRequest{value: val, isSet: true}
}

func (v NullablePatchAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


