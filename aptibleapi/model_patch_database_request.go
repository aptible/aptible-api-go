/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the PatchDatabaseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchDatabaseRequest{}

// PatchDatabaseRequest struct for PatchDatabaseRequest
type PatchDatabaseRequest struct {
	CurrentConfiguration *int32 `json:"current_configuration,omitempty"`
	Handle *string `json:"handle,omitempty"`
	InitialDiskSize *int32 `json:"initial_disk_size,omitempty"`
	InitialContinerSize *int32 `json:"initial_continer_size,omitempty"`
	DatabaseImageId *int32 `json:"database_image_id,omitempty"`
	CurrentKmsArn *int32 `json:"current_kms_arn,omitempty"`
	EnableBackups *bool `json:"enable_backups,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchDatabaseRequest PatchDatabaseRequest

// NewPatchDatabaseRequest instantiates a new PatchDatabaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchDatabaseRequest() *PatchDatabaseRequest {
	this := PatchDatabaseRequest{}
	return &this
}

// NewPatchDatabaseRequestWithDefaults instantiates a new PatchDatabaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchDatabaseRequestWithDefaults() *PatchDatabaseRequest {
	this := PatchDatabaseRequest{}
	return &this
}

// GetCurrentConfiguration returns the CurrentConfiguration field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetCurrentConfiguration() int32 {
	if o == nil || IsNil(o.CurrentConfiguration) {
		var ret int32
		return ret
	}
	return *o.CurrentConfiguration
}

// GetCurrentConfigurationOk returns a tuple with the CurrentConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetCurrentConfigurationOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentConfiguration) {
		return nil, false
	}
	return o.CurrentConfiguration, true
}

// HasCurrentConfiguration returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasCurrentConfiguration() bool {
	if o != nil && !IsNil(o.CurrentConfiguration) {
		return true
	}

	return false
}

// SetCurrentConfiguration gets a reference to the given int32 and assigns it to the CurrentConfiguration field.
func (o *PatchDatabaseRequest) SetCurrentConfiguration(v int32) {
	o.CurrentConfiguration = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetHandle() string {
	if o == nil || IsNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetHandleOk() (*string, bool) {
	if o == nil || IsNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasHandle() bool {
	if o != nil && !IsNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *PatchDatabaseRequest) SetHandle(v string) {
	o.Handle = &v
}

// GetInitialDiskSize returns the InitialDiskSize field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetInitialDiskSize() int32 {
	if o == nil || IsNil(o.InitialDiskSize) {
		var ret int32
		return ret
	}
	return *o.InitialDiskSize
}

// GetInitialDiskSizeOk returns a tuple with the InitialDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetInitialDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.InitialDiskSize) {
		return nil, false
	}
	return o.InitialDiskSize, true
}

// HasInitialDiskSize returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasInitialDiskSize() bool {
	if o != nil && !IsNil(o.InitialDiskSize) {
		return true
	}

	return false
}

// SetInitialDiskSize gets a reference to the given int32 and assigns it to the InitialDiskSize field.
func (o *PatchDatabaseRequest) SetInitialDiskSize(v int32) {
	o.InitialDiskSize = &v
}

// GetInitialContinerSize returns the InitialContinerSize field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetInitialContinerSize() int32 {
	if o == nil || IsNil(o.InitialContinerSize) {
		var ret int32
		return ret
	}
	return *o.InitialContinerSize
}

// GetInitialContinerSizeOk returns a tuple with the InitialContinerSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetInitialContinerSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.InitialContinerSize) {
		return nil, false
	}
	return o.InitialContinerSize, true
}

// HasInitialContinerSize returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasInitialContinerSize() bool {
	if o != nil && !IsNil(o.InitialContinerSize) {
		return true
	}

	return false
}

// SetInitialContinerSize gets a reference to the given int32 and assigns it to the InitialContinerSize field.
func (o *PatchDatabaseRequest) SetInitialContinerSize(v int32) {
	o.InitialContinerSize = &v
}

// GetDatabaseImageId returns the DatabaseImageId field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetDatabaseImageId() int32 {
	if o == nil || IsNil(o.DatabaseImageId) {
		var ret int32
		return ret
	}
	return *o.DatabaseImageId
}

// GetDatabaseImageIdOk returns a tuple with the DatabaseImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetDatabaseImageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DatabaseImageId) {
		return nil, false
	}
	return o.DatabaseImageId, true
}

// HasDatabaseImageId returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasDatabaseImageId() bool {
	if o != nil && !IsNil(o.DatabaseImageId) {
		return true
	}

	return false
}

// SetDatabaseImageId gets a reference to the given int32 and assigns it to the DatabaseImageId field.
func (o *PatchDatabaseRequest) SetDatabaseImageId(v int32) {
	o.DatabaseImageId = &v
}

// GetCurrentKmsArn returns the CurrentKmsArn field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetCurrentKmsArn() int32 {
	if o == nil || IsNil(o.CurrentKmsArn) {
		var ret int32
		return ret
	}
	return *o.CurrentKmsArn
}

// GetCurrentKmsArnOk returns a tuple with the CurrentKmsArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetCurrentKmsArnOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentKmsArn) {
		return nil, false
	}
	return o.CurrentKmsArn, true
}

// HasCurrentKmsArn returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasCurrentKmsArn() bool {
	if o != nil && !IsNil(o.CurrentKmsArn) {
		return true
	}

	return false
}

// SetCurrentKmsArn gets a reference to the given int32 and assigns it to the CurrentKmsArn field.
func (o *PatchDatabaseRequest) SetCurrentKmsArn(v int32) {
	o.CurrentKmsArn = &v
}

// GetEnableBackups returns the EnableBackups field value if set, zero value otherwise.
func (o *PatchDatabaseRequest) GetEnableBackups() bool {
	if o == nil || IsNil(o.EnableBackups) {
		var ret bool
		return ret
	}
	return *o.EnableBackups
}

// GetEnableBackupsOk returns a tuple with the EnableBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDatabaseRequest) GetEnableBackupsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBackups) {
		return nil, false
	}
	return o.EnableBackups, true
}

// HasEnableBackups returns a boolean if a field has been set.
func (o *PatchDatabaseRequest) HasEnableBackups() bool {
	if o != nil && !IsNil(o.EnableBackups) {
		return true
	}

	return false
}

// SetEnableBackups gets a reference to the given bool and assigns it to the EnableBackups field.
func (o *PatchDatabaseRequest) SetEnableBackups(v bool) {
	o.EnableBackups = &v
}

func (o PatchDatabaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchDatabaseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentConfiguration) {
		toSerialize["current_configuration"] = o.CurrentConfiguration
	}
	if !IsNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !IsNil(o.InitialDiskSize) {
		toSerialize["initial_disk_size"] = o.InitialDiskSize
	}
	if !IsNil(o.InitialContinerSize) {
		toSerialize["initial_continer_size"] = o.InitialContinerSize
	}
	if !IsNil(o.DatabaseImageId) {
		toSerialize["database_image_id"] = o.DatabaseImageId
	}
	if !IsNil(o.CurrentKmsArn) {
		toSerialize["current_kms_arn"] = o.CurrentKmsArn
	}
	if !IsNil(o.EnableBackups) {
		toSerialize["enable_backups"] = o.EnableBackups
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchDatabaseRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchDatabaseRequest := _PatchDatabaseRequest{}

	err = json.Unmarshal(data, &varPatchDatabaseRequest)

	if err != nil {
		return err
	}

	*o = PatchDatabaseRequest(varPatchDatabaseRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "current_configuration")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "initial_disk_size")
		delete(additionalProperties, "initial_continer_size")
		delete(additionalProperties, "database_image_id")
		delete(additionalProperties, "current_kms_arn")
		delete(additionalProperties, "enable_backups")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchDatabaseRequest struct {
	value *PatchDatabaseRequest
	isSet bool
}

func (v NullablePatchDatabaseRequest) Get() *PatchDatabaseRequest {
	return v.value
}

func (v *NullablePatchDatabaseRequest) Set(val *PatchDatabaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchDatabaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchDatabaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchDatabaseRequest(val *PatchDatabaseRequest) *NullablePatchDatabaseRequest {
	return &NullablePatchDatabaseRequest{value: val, isSet: true}
}

func (v NullablePatchDatabaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchDatabaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


