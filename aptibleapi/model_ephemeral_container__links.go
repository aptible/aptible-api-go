/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the EphemeralContainerLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EphemeralContainerLinks{}

// EphemeralContainerLinks struct for EphemeralContainerLinks
type EphemeralContainerLinks struct {
	EphemeralSession *EphemeralContainerLinksEphemeralSession `json:"ephemeral_session,omitempty"`
	LogDrain *EphemeralContainerLinksLogDrain `json:"log_drain,omitempty"`
	Self *EphemeralContainerLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EphemeralContainerLinks EphemeralContainerLinks

// NewEphemeralContainerLinks instantiates a new EphemeralContainerLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEphemeralContainerLinks() *EphemeralContainerLinks {
	this := EphemeralContainerLinks{}
	return &this
}

// NewEphemeralContainerLinksWithDefaults instantiates a new EphemeralContainerLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEphemeralContainerLinksWithDefaults() *EphemeralContainerLinks {
	this := EphemeralContainerLinks{}
	return &this
}

// GetEphemeralSession returns the EphemeralSession field value if set, zero value otherwise.
func (o *EphemeralContainerLinks) GetEphemeralSession() EphemeralContainerLinksEphemeralSession {
	if o == nil || IsNil(o.EphemeralSession) {
		var ret EphemeralContainerLinksEphemeralSession
		return ret
	}
	return *o.EphemeralSession
}

// GetEphemeralSessionOk returns a tuple with the EphemeralSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EphemeralContainerLinks) GetEphemeralSessionOk() (*EphemeralContainerLinksEphemeralSession, bool) {
	if o == nil || IsNil(o.EphemeralSession) {
		return nil, false
	}
	return o.EphemeralSession, true
}

// HasEphemeralSession returns a boolean if a field has been set.
func (o *EphemeralContainerLinks) HasEphemeralSession() bool {
	if o != nil && !IsNil(o.EphemeralSession) {
		return true
	}

	return false
}

// SetEphemeralSession gets a reference to the given EphemeralContainerLinksEphemeralSession and assigns it to the EphemeralSession field.
func (o *EphemeralContainerLinks) SetEphemeralSession(v EphemeralContainerLinksEphemeralSession) {
	o.EphemeralSession = &v
}

// GetLogDrain returns the LogDrain field value if set, zero value otherwise.
func (o *EphemeralContainerLinks) GetLogDrain() EphemeralContainerLinksLogDrain {
	if o == nil || IsNil(o.LogDrain) {
		var ret EphemeralContainerLinksLogDrain
		return ret
	}
	return *o.LogDrain
}

// GetLogDrainOk returns a tuple with the LogDrain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EphemeralContainerLinks) GetLogDrainOk() (*EphemeralContainerLinksLogDrain, bool) {
	if o == nil || IsNil(o.LogDrain) {
		return nil, false
	}
	return o.LogDrain, true
}

// HasLogDrain returns a boolean if a field has been set.
func (o *EphemeralContainerLinks) HasLogDrain() bool {
	if o != nil && !IsNil(o.LogDrain) {
		return true
	}

	return false
}

// SetLogDrain gets a reference to the given EphemeralContainerLinksLogDrain and assigns it to the LogDrain field.
func (o *EphemeralContainerLinks) SetLogDrain(v EphemeralContainerLinksLogDrain) {
	o.LogDrain = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *EphemeralContainerLinks) GetSelf() EphemeralContainerLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret EphemeralContainerLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EphemeralContainerLinks) GetSelfOk() (*EphemeralContainerLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *EphemeralContainerLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given EphemeralContainerLinksSelf and assigns it to the Self field.
func (o *EphemeralContainerLinks) SetSelf(v EphemeralContainerLinksSelf) {
	o.Self = &v
}

func (o EphemeralContainerLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EphemeralContainerLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EphemeralSession) {
		toSerialize["ephemeral_session"] = o.EphemeralSession
	}
	if !IsNil(o.LogDrain) {
		toSerialize["log_drain"] = o.LogDrain
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EphemeralContainerLinks) UnmarshalJSON(data []byte) (err error) {
	varEphemeralContainerLinks := _EphemeralContainerLinks{}

	err = json.Unmarshal(data, &varEphemeralContainerLinks)

	if err != nil {
		return err
	}

	*o = EphemeralContainerLinks(varEphemeralContainerLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ephemeral_session")
		delete(additionalProperties, "log_drain")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEphemeralContainerLinks struct {
	value *EphemeralContainerLinks
	isSet bool
}

func (v NullableEphemeralContainerLinks) Get() *EphemeralContainerLinks {
	return v.value
}

func (v *NullableEphemeralContainerLinks) Set(val *EphemeralContainerLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableEphemeralContainerLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableEphemeralContainerLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEphemeralContainerLinks(val *EphemeralContainerLinks) *NullableEphemeralContainerLinks {
	return &NullableEphemeralContainerLinks{value: val, isSet: true}
}

func (v NullableEphemeralContainerLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEphemeralContainerLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


