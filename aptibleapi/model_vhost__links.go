/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the VhostLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VhostLinks{}

// VhostLinks struct for VhostLinks
type VhostLinks struct {
	Service *ListAccountsForStack200ResponseLinksStack `json:"service,omitempty"`
	Certificate *ListAccountsForStack200ResponseLinksStack `json:"certificate,omitempty"`
	Operations *ListAccountsForStack200ResponseLinksStack `json:"operations,omitempty"`
	Self *ListAccountsForStack200ResponseLinksStack `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VhostLinks VhostLinks

// NewVhostLinks instantiates a new VhostLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVhostLinks() *VhostLinks {
	this := VhostLinks{}
	return &this
}

// NewVhostLinksWithDefaults instantiates a new VhostLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVhostLinksWithDefaults() *VhostLinks {
	this := VhostLinks{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *VhostLinks) GetService() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Service) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VhostLinks) GetServiceOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *VhostLinks) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Service field.
func (o *VhostLinks) SetService(v ListAccountsForStack200ResponseLinksStack) {
	o.Service = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *VhostLinks) GetCertificate() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Certificate) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VhostLinks) GetCertificateOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *VhostLinks) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Certificate field.
func (o *VhostLinks) SetCertificate(v ListAccountsForStack200ResponseLinksStack) {
	o.Certificate = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *VhostLinks) GetOperations() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Operations) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VhostLinks) GetOperationsOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *VhostLinks) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Operations field.
func (o *VhostLinks) SetOperations(v ListAccountsForStack200ResponseLinksStack) {
	o.Operations = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *VhostLinks) GetSelf() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Self) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VhostLinks) GetSelfOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *VhostLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Self field.
func (o *VhostLinks) SetSelf(v ListAccountsForStack200ResponseLinksStack) {
	o.Self = &v
}

func (o VhostLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VhostLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VhostLinks) UnmarshalJSON(data []byte) (err error) {
	varVhostLinks := _VhostLinks{}

	err = json.Unmarshal(data, &varVhostLinks)

	if err != nil {
		return err
	}

	*o = VhostLinks(varVhostLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "service")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "operations")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVhostLinks struct {
	value *VhostLinks
	isSet bool
}

func (v NullableVhostLinks) Get() *VhostLinks {
	return v.value
}

func (v *NullableVhostLinks) Set(val *VhostLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableVhostLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableVhostLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVhostLinks(val *VhostLinks) *NullableVhostLinks {
	return &NullableVhostLinks{value: val, isSet: true}
}

func (v NullableVhostLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVhostLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


