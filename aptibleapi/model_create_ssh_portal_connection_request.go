/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateSshPortalConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSshPortalConnectionRequest{}

// CreateSshPortalConnectionRequest struct for CreateSshPortalConnectionRequest
type CreateSshPortalConnectionRequest struct {
	SshPublicKey string `json:"ssh_public_key"`
	Command *string `json:"command,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateSshPortalConnectionRequest CreateSshPortalConnectionRequest

// NewCreateSshPortalConnectionRequest instantiates a new CreateSshPortalConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSshPortalConnectionRequest(sshPublicKey string) *CreateSshPortalConnectionRequest {
	this := CreateSshPortalConnectionRequest{}
	this.SshPublicKey = sshPublicKey
	return &this
}

// NewCreateSshPortalConnectionRequestWithDefaults instantiates a new CreateSshPortalConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSshPortalConnectionRequestWithDefaults() *CreateSshPortalConnectionRequest {
	this := CreateSshPortalConnectionRequest{}
	return &this
}

// GetSshPublicKey returns the SshPublicKey field value
func (o *CreateSshPortalConnectionRequest) GetSshPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshPublicKey
}

// GetSshPublicKeyOk returns a tuple with the SshPublicKey field value
// and a boolean to check if the value has been set.
func (o *CreateSshPortalConnectionRequest) GetSshPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshPublicKey, true
}

// SetSshPublicKey sets field value
func (o *CreateSshPortalConnectionRequest) SetSshPublicKey(v string) {
	o.SshPublicKey = v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *CreateSshPortalConnectionRequest) GetCommand() string {
	if o == nil || IsNil(o.Command) {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSshPortalConnectionRequest) GetCommandOk() (*string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *CreateSshPortalConnectionRequest) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *CreateSshPortalConnectionRequest) SetCommand(v string) {
	o.Command = &v
}

func (o CreateSshPortalConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSshPortalConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ssh_public_key"] = o.SshPublicKey
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateSshPortalConnectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ssh_public_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSshPortalConnectionRequest := _CreateSshPortalConnectionRequest{}

	err = json.Unmarshal(data, &varCreateSshPortalConnectionRequest)

	if err != nil {
		return err
	}

	*o = CreateSshPortalConnectionRequest(varCreateSshPortalConnectionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ssh_public_key")
		delete(additionalProperties, "command")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateSshPortalConnectionRequest struct {
	value *CreateSshPortalConnectionRequest
	isSet bool
}

func (v NullableCreateSshPortalConnectionRequest) Get() *CreateSshPortalConnectionRequest {
	return v.value
}

func (v *NullableCreateSshPortalConnectionRequest) Set(val *CreateSshPortalConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSshPortalConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSshPortalConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSshPortalConnectionRequest(val *CreateSshPortalConnectionRequest) *NullableCreateSshPortalConnectionRequest {
	return &NullableCreateSshPortalConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateSshPortalConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSshPortalConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


