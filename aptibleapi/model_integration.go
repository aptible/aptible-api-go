/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Integration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Integration{}

// Integration struct for Integration
type Integration struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	Type string `json:"type"`
	OrganizationId string `json:"organization_id"`
	AwsRoleArn NullableString `json:"aws_role_arn"`
	ApiKey NullableString `json:"api_key"`
	AppKey NullableString `json:"app_key"`
	Host NullableString `json:"host"`
	Port NullableString `json:"port"`
	Username NullableString `json:"username"`
	Password NullableString `json:"password"`
	Database NullableString `json:"database"`
	Links *IntegrationLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Integration Integration

// NewIntegration instantiates a new Integration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegration(id int32, metaType string, createdAt string, updatedAt string, type_ string, organizationId string, awsRoleArn NullableString, apiKey NullableString, appKey NullableString, host NullableString, port NullableString, username NullableString, password NullableString, database NullableString) *Integration {
	this := Integration{}
	this.Id = id
	this.MetaType = metaType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Type = type_
	this.OrganizationId = organizationId
	this.AwsRoleArn = awsRoleArn
	this.ApiKey = apiKey
	this.AppKey = appKey
	this.Host = host
	this.Port = port
	this.Username = username
	this.Password = password
	this.Database = database
	return &this
}

// NewIntegrationWithDefaults instantiates a new Integration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationWithDefaults() *Integration {
	this := Integration{}
	return &this
}

// GetId returns the Id field value
func (o *Integration) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Integration) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Integration) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *Integration) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Integration) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Integration) SetMetaType(v string) {
	o.MetaType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Integration) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Integration) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Integration) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Integration) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Integration) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Integration) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetType returns the Type field value
func (o *Integration) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Integration) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Integration) SetType(v string) {
	o.Type = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *Integration) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *Integration) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *Integration) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetAwsRoleArn returns the AwsRoleArn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetAwsRoleArn() string {
	if o == nil || o.AwsRoleArn.Get() == nil {
		var ret string
		return ret
	}

	return *o.AwsRoleArn.Get()
}

// GetAwsRoleArnOk returns a tuple with the AwsRoleArn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetAwsRoleArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsRoleArn.Get(), o.AwsRoleArn.IsSet()
}

// SetAwsRoleArn sets field value
func (o *Integration) SetAwsRoleArn(v string) {
	o.AwsRoleArn.Set(&v)
}

// GetApiKey returns the ApiKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetApiKey() string {
	if o == nil || o.ApiKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.ApiKey.Get()
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiKey.Get(), o.ApiKey.IsSet()
}

// SetApiKey sets field value
func (o *Integration) SetApiKey(v string) {
	o.ApiKey.Set(&v)
}

// GetAppKey returns the AppKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetAppKey() string {
	if o == nil || o.AppKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.AppKey.Get()
}

// GetAppKeyOk returns a tuple with the AppKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetAppKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppKey.Get(), o.AppKey.IsSet()
}

// SetAppKey sets field value
func (o *Integration) SetAppKey(v string) {
	o.AppKey.Set(&v)
}

// GetHost returns the Host field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetHost() string {
	if o == nil || o.Host.Get() == nil {
		var ret string
		return ret
	}

	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// SetHost sets field value
func (o *Integration) SetHost(v string) {
	o.Host.Set(&v)
}

// GetPort returns the Port field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetPort() string {
	if o == nil || o.Port.Get() == nil {
		var ret string
		return ret
	}

	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetPortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// SetPort sets field value
func (o *Integration) SetPort(v string) {
	o.Port.Set(&v)
}

// GetUsername returns the Username field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}

	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// SetUsername sets field value
func (o *Integration) SetUsername(v string) {
	o.Username.Set(&v)
}

// GetPassword returns the Password field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}

	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// SetPassword sets field value
func (o *Integration) SetPassword(v string) {
	o.Password.Set(&v)
}

// GetDatabase returns the Database field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Integration) GetDatabase() string {
	if o == nil || o.Database.Get() == nil {
		var ret string
		return ret
	}

	return *o.Database.Get()
}

// GetDatabaseOk returns a tuple with the Database field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Integration) GetDatabaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Database.Get(), o.Database.IsSet()
}

// SetDatabase sets field value
func (o *Integration) SetDatabase(v string) {
	o.Database.Set(&v)
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Integration) GetLinks() IntegrationLinks {
	if o == nil || IsNil(o.Links) {
		var ret IntegrationLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetLinksOk() (*IntegrationLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Integration) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given IntegrationLinks and assigns it to the Links field.
func (o *Integration) SetLinks(v IntegrationLinks) {
	o.Links = &v
}

func (o Integration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Integration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["type"] = o.Type
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["aws_role_arn"] = o.AwsRoleArn.Get()
	toSerialize["api_key"] = o.ApiKey.Get()
	toSerialize["app_key"] = o.AppKey.Get()
	toSerialize["host"] = o.Host.Get()
	toSerialize["port"] = o.Port.Get()
	toSerialize["username"] = o.Username.Get()
	toSerialize["password"] = o.Password.Get()
	toSerialize["database"] = o.Database.Get()
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Integration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"created_at",
		"updated_at",
		"type",
		"organization_id",
		"aws_role_arn",
		"api_key",
		"app_key",
		"host",
		"port",
		"username",
		"password",
		"database",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegration := _Integration{}

	err = json.Unmarshal(data, &varIntegration)

	if err != nil {
		return err
	}

	*o = Integration(varIntegration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "type")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "aws_role_arn")
		delete(additionalProperties, "api_key")
		delete(additionalProperties, "app_key")
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "database")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIntegration struct {
	value *Integration
	isSet bool
}

func (v NullableIntegration) Get() *Integration {
	return v.value
}

func (v *NullableIntegration) Set(val *Integration) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegration(val *Integration) *NullableIntegration {
	return &NullableIntegration{value: val, isSet: true}
}

func (v NullableIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


