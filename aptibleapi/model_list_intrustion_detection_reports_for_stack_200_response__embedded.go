/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListIntrustionDetectionReportsForStack200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIntrustionDetectionReportsForStack200ResponseEmbedded{}

// ListIntrustionDetectionReportsForStack200ResponseEmbedded struct for ListIntrustionDetectionReportsForStack200ResponseEmbedded
type ListIntrustionDetectionReportsForStack200ResponseEmbedded struct {
	IntrusionDetectionReports []IntrusionDetectionReport `json:"intrusion_detection_reports,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListIntrustionDetectionReportsForStack200ResponseEmbedded ListIntrustionDetectionReportsForStack200ResponseEmbedded

// NewListIntrustionDetectionReportsForStack200ResponseEmbedded instantiates a new ListIntrustionDetectionReportsForStack200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntrustionDetectionReportsForStack200ResponseEmbedded() *ListIntrustionDetectionReportsForStack200ResponseEmbedded {
	this := ListIntrustionDetectionReportsForStack200ResponseEmbedded{}
	return &this
}

// NewListIntrustionDetectionReportsForStack200ResponseEmbeddedWithDefaults instantiates a new ListIntrustionDetectionReportsForStack200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntrustionDetectionReportsForStack200ResponseEmbeddedWithDefaults() *ListIntrustionDetectionReportsForStack200ResponseEmbedded {
	this := ListIntrustionDetectionReportsForStack200ResponseEmbedded{}
	return &this
}

// GetIntrusionDetectionReports returns the IntrusionDetectionReports field value if set, zero value otherwise.
func (o *ListIntrustionDetectionReportsForStack200ResponseEmbedded) GetIntrusionDetectionReports() []IntrusionDetectionReport {
	if o == nil || IsNil(o.IntrusionDetectionReports) {
		var ret []IntrusionDetectionReport
		return ret
	}
	return o.IntrusionDetectionReports
}

// GetIntrusionDetectionReportsOk returns a tuple with the IntrusionDetectionReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntrustionDetectionReportsForStack200ResponseEmbedded) GetIntrusionDetectionReportsOk() ([]IntrusionDetectionReport, bool) {
	if o == nil || IsNil(o.IntrusionDetectionReports) {
		return nil, false
	}
	return o.IntrusionDetectionReports, true
}

// HasIntrusionDetectionReports returns a boolean if a field has been set.
func (o *ListIntrustionDetectionReportsForStack200ResponseEmbedded) HasIntrusionDetectionReports() bool {
	if o != nil && !IsNil(o.IntrusionDetectionReports) {
		return true
	}

	return false
}

// SetIntrusionDetectionReports gets a reference to the given []IntrusionDetectionReport and assigns it to the IntrusionDetectionReports field.
func (o *ListIntrustionDetectionReportsForStack200ResponseEmbedded) SetIntrusionDetectionReports(v []IntrusionDetectionReport) {
	o.IntrusionDetectionReports = v
}

func (o ListIntrustionDetectionReportsForStack200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIntrustionDetectionReportsForStack200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IntrusionDetectionReports) {
		toSerialize["intrusion_detection_reports"] = o.IntrusionDetectionReports
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListIntrustionDetectionReportsForStack200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListIntrustionDetectionReportsForStack200ResponseEmbedded := _ListIntrustionDetectionReportsForStack200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListIntrustionDetectionReportsForStack200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListIntrustionDetectionReportsForStack200ResponseEmbedded(varListIntrustionDetectionReportsForStack200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "intrusion_detection_reports")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListIntrustionDetectionReportsForStack200ResponseEmbedded struct {
	value *ListIntrustionDetectionReportsForStack200ResponseEmbedded
	isSet bool
}

func (v NullableListIntrustionDetectionReportsForStack200ResponseEmbedded) Get() *ListIntrustionDetectionReportsForStack200ResponseEmbedded {
	return v.value
}

func (v *NullableListIntrustionDetectionReportsForStack200ResponseEmbedded) Set(val *ListIntrustionDetectionReportsForStack200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntrustionDetectionReportsForStack200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntrustionDetectionReportsForStack200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntrustionDetectionReportsForStack200ResponseEmbedded(val *ListIntrustionDetectionReportsForStack200ResponseEmbedded) *NullableListIntrustionDetectionReportsForStack200ResponseEmbedded {
	return &NullableListIntrustionDetectionReportsForStack200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListIntrustionDetectionReportsForStack200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntrustionDetectionReportsForStack200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


