/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the CertificateLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertificateLinks{}

// CertificateLinks struct for CertificateLinks
type CertificateLinks struct {
	Account *CertificateLinksAccount `json:"account,omitempty"`
	Operations *CertificateLinksOperations `json:"operations,omitempty"`
	Vhosts *CertificateLinksVhosts `json:"vhosts,omitempty"`
	Apps *CertificateLinksApps `json:"apps,omitempty"`
	Self *CertificateLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CertificateLinks CertificateLinks

// NewCertificateLinks instantiates a new CertificateLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateLinks() *CertificateLinks {
	this := CertificateLinks{}
	return &this
}

// NewCertificateLinksWithDefaults instantiates a new CertificateLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateLinksWithDefaults() *CertificateLinks {
	this := CertificateLinks{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *CertificateLinks) GetAccount() CertificateLinksAccount {
	if o == nil || IsNil(o.Account) {
		var ret CertificateLinksAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateLinks) GetAccountOk() (*CertificateLinksAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *CertificateLinks) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given CertificateLinksAccount and assigns it to the Account field.
func (o *CertificateLinks) SetAccount(v CertificateLinksAccount) {
	o.Account = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *CertificateLinks) GetOperations() CertificateLinksOperations {
	if o == nil || IsNil(o.Operations) {
		var ret CertificateLinksOperations
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateLinks) GetOperationsOk() (*CertificateLinksOperations, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *CertificateLinks) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given CertificateLinksOperations and assigns it to the Operations field.
func (o *CertificateLinks) SetOperations(v CertificateLinksOperations) {
	o.Operations = &v
}

// GetVhosts returns the Vhosts field value if set, zero value otherwise.
func (o *CertificateLinks) GetVhosts() CertificateLinksVhosts {
	if o == nil || IsNil(o.Vhosts) {
		var ret CertificateLinksVhosts
		return ret
	}
	return *o.Vhosts
}

// GetVhostsOk returns a tuple with the Vhosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateLinks) GetVhostsOk() (*CertificateLinksVhosts, bool) {
	if o == nil || IsNil(o.Vhosts) {
		return nil, false
	}
	return o.Vhosts, true
}

// HasVhosts returns a boolean if a field has been set.
func (o *CertificateLinks) HasVhosts() bool {
	if o != nil && !IsNil(o.Vhosts) {
		return true
	}

	return false
}

// SetVhosts gets a reference to the given CertificateLinksVhosts and assigns it to the Vhosts field.
func (o *CertificateLinks) SetVhosts(v CertificateLinksVhosts) {
	o.Vhosts = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *CertificateLinks) GetApps() CertificateLinksApps {
	if o == nil || IsNil(o.Apps) {
		var ret CertificateLinksApps
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateLinks) GetAppsOk() (*CertificateLinksApps, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *CertificateLinks) HasApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given CertificateLinksApps and assigns it to the Apps field.
func (o *CertificateLinks) SetApps(v CertificateLinksApps) {
	o.Apps = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CertificateLinks) GetSelf() CertificateLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret CertificateLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateLinks) GetSelfOk() (*CertificateLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CertificateLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given CertificateLinksSelf and assigns it to the Self field.
func (o *CertificateLinks) SetSelf(v CertificateLinksSelf) {
	o.Self = &v
}

func (o CertificateLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CertificateLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.Vhosts) {
		toSerialize["vhosts"] = o.Vhosts
	}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CertificateLinks) UnmarshalJSON(data []byte) (err error) {
	varCertificateLinks := _CertificateLinks{}

	err = json.Unmarshal(data, &varCertificateLinks)

	if err != nil {
		return err
	}

	*o = CertificateLinks(varCertificateLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account")
		delete(additionalProperties, "operations")
		delete(additionalProperties, "vhosts")
		delete(additionalProperties, "apps")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCertificateLinks struct {
	value *CertificateLinks
	isSet bool
}

func (v NullableCertificateLinks) Get() *CertificateLinks {
	return v.value
}

func (v *NullableCertificateLinks) Set(val *CertificateLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateLinks(val *CertificateLinks) *NullableCertificateLinks {
	return &NullableCertificateLinks{value: val, isSet: true}
}

func (v NullableCertificateLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


