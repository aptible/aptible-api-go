/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateVhostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVhostRequest{}

// CreateVhostRequest struct for CreateVhostRequest
type CreateVhostRequest struct {
	Type string `json:"type"`
	Default *bool `json:"default,omitempty"`
	Internal *bool `json:"internal,omitempty"`
	Certificate *int32 `json:"certificate,omitempty"`
	UserDomain *string `json:"user_domain,omitempty"`
	Acme *bool `json:"acme,omitempty"`
	Platform *string `json:"platform,omitempty"`
	ContainerPort *int32 `json:"container_port,omitempty"`
	ContainerPorts []int32 `json:"container_ports,omitempty"`
	IpWhitelist []string `json:"ip_whitelist,omitempty"`
	ContainerExposedPorts []int32 `json:"container_exposed_ports,omitempty"`
	Shared *bool `json:"shared,omitempty"`
	LoadBalancingAlgorithmType *string `json:"load_balancing_algorithm_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateVhostRequest CreateVhostRequest

// NewCreateVhostRequest instantiates a new CreateVhostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVhostRequest(type_ string) *CreateVhostRequest {
	this := CreateVhostRequest{}
	this.Type = type_
	return &this
}

// NewCreateVhostRequestWithDefaults instantiates a new CreateVhostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVhostRequestWithDefaults() *CreateVhostRequest {
	this := CreateVhostRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateVhostRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateVhostRequest) SetType(v string) {
	o.Type = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *CreateVhostRequest) SetDefault(v bool) {
	o.Default = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetInternal() bool {
	if o == nil || IsNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *CreateVhostRequest) SetInternal(v bool) {
	o.Internal = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetCertificate() int32 {
	if o == nil || IsNil(o.Certificate) {
		var ret int32
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetCertificateOk() (*int32, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given int32 and assigns it to the Certificate field.
func (o *CreateVhostRequest) SetCertificate(v int32) {
	o.Certificate = &v
}

// GetUserDomain returns the UserDomain field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetUserDomain() string {
	if o == nil || IsNil(o.UserDomain) {
		var ret string
		return ret
	}
	return *o.UserDomain
}

// GetUserDomainOk returns a tuple with the UserDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetUserDomainOk() (*string, bool) {
	if o == nil || IsNil(o.UserDomain) {
		return nil, false
	}
	return o.UserDomain, true
}

// HasUserDomain returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasUserDomain() bool {
	if o != nil && !IsNil(o.UserDomain) {
		return true
	}

	return false
}

// SetUserDomain gets a reference to the given string and assigns it to the UserDomain field.
func (o *CreateVhostRequest) SetUserDomain(v string) {
	o.UserDomain = &v
}

// GetAcme returns the Acme field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetAcme() bool {
	if o == nil || IsNil(o.Acme) {
		var ret bool
		return ret
	}
	return *o.Acme
}

// GetAcmeOk returns a tuple with the Acme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetAcmeOk() (*bool, bool) {
	if o == nil || IsNil(o.Acme) {
		return nil, false
	}
	return o.Acme, true
}

// HasAcme returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasAcme() bool {
	if o != nil && !IsNil(o.Acme) {
		return true
	}

	return false
}

// SetAcme gets a reference to the given bool and assigns it to the Acme field.
func (o *CreateVhostRequest) SetAcme(v bool) {
	o.Acme = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *CreateVhostRequest) SetPlatform(v string) {
	o.Platform = &v
}

// GetContainerPort returns the ContainerPort field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetContainerPort() int32 {
	if o == nil || IsNil(o.ContainerPort) {
		var ret int32
		return ret
	}
	return *o.ContainerPort
}

// GetContainerPortOk returns a tuple with the ContainerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetContainerPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ContainerPort) {
		return nil, false
	}
	return o.ContainerPort, true
}

// HasContainerPort returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasContainerPort() bool {
	if o != nil && !IsNil(o.ContainerPort) {
		return true
	}

	return false
}

// SetContainerPort gets a reference to the given int32 and assigns it to the ContainerPort field.
func (o *CreateVhostRequest) SetContainerPort(v int32) {
	o.ContainerPort = &v
}

// GetContainerPorts returns the ContainerPorts field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetContainerPorts() []int32 {
	if o == nil || IsNil(o.ContainerPorts) {
		var ret []int32
		return ret
	}
	return o.ContainerPorts
}

// GetContainerPortsOk returns a tuple with the ContainerPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetContainerPortsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ContainerPorts) {
		return nil, false
	}
	return o.ContainerPorts, true
}

// HasContainerPorts returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasContainerPorts() bool {
	if o != nil && !IsNil(o.ContainerPorts) {
		return true
	}

	return false
}

// SetContainerPorts gets a reference to the given []int32 and assigns it to the ContainerPorts field.
func (o *CreateVhostRequest) SetContainerPorts(v []int32) {
	o.ContainerPorts = v
}

// GetIpWhitelist returns the IpWhitelist field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetIpWhitelist() []string {
	if o == nil || IsNil(o.IpWhitelist) {
		var ret []string
		return ret
	}
	return o.IpWhitelist
}

// GetIpWhitelistOk returns a tuple with the IpWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetIpWhitelistOk() ([]string, bool) {
	if o == nil || IsNil(o.IpWhitelist) {
		return nil, false
	}
	return o.IpWhitelist, true
}

// HasIpWhitelist returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasIpWhitelist() bool {
	if o != nil && !IsNil(o.IpWhitelist) {
		return true
	}

	return false
}

// SetIpWhitelist gets a reference to the given []string and assigns it to the IpWhitelist field.
func (o *CreateVhostRequest) SetIpWhitelist(v []string) {
	o.IpWhitelist = v
}

// GetContainerExposedPorts returns the ContainerExposedPorts field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetContainerExposedPorts() []int32 {
	if o == nil || IsNil(o.ContainerExposedPorts) {
		var ret []int32
		return ret
	}
	return o.ContainerExposedPorts
}

// GetContainerExposedPortsOk returns a tuple with the ContainerExposedPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetContainerExposedPortsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ContainerExposedPorts) {
		return nil, false
	}
	return o.ContainerExposedPorts, true
}

// HasContainerExposedPorts returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasContainerExposedPorts() bool {
	if o != nil && !IsNil(o.ContainerExposedPorts) {
		return true
	}

	return false
}

// SetContainerExposedPorts gets a reference to the given []int32 and assigns it to the ContainerExposedPorts field.
func (o *CreateVhostRequest) SetContainerExposedPorts(v []int32) {
	o.ContainerExposedPorts = v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetShared() bool {
	if o == nil || IsNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *CreateVhostRequest) SetShared(v bool) {
	o.Shared = &v
}

// GetLoadBalancingAlgorithmType returns the LoadBalancingAlgorithmType field value if set, zero value otherwise.
func (o *CreateVhostRequest) GetLoadBalancingAlgorithmType() string {
	if o == nil || IsNil(o.LoadBalancingAlgorithmType) {
		var ret string
		return ret
	}
	return *o.LoadBalancingAlgorithmType
}

// GetLoadBalancingAlgorithmTypeOk returns a tuple with the LoadBalancingAlgorithmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVhostRequest) GetLoadBalancingAlgorithmTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LoadBalancingAlgorithmType) {
		return nil, false
	}
	return o.LoadBalancingAlgorithmType, true
}

// HasLoadBalancingAlgorithmType returns a boolean if a field has been set.
func (o *CreateVhostRequest) HasLoadBalancingAlgorithmType() bool {
	if o != nil && !IsNil(o.LoadBalancingAlgorithmType) {
		return true
	}

	return false
}

// SetLoadBalancingAlgorithmType gets a reference to the given string and assigns it to the LoadBalancingAlgorithmType field.
func (o *CreateVhostRequest) SetLoadBalancingAlgorithmType(v string) {
	o.LoadBalancingAlgorithmType = &v
}

func (o CreateVhostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVhostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.UserDomain) {
		toSerialize["user_domain"] = o.UserDomain
	}
	if !IsNil(o.Acme) {
		toSerialize["acme"] = o.Acme
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.ContainerPort) {
		toSerialize["container_port"] = o.ContainerPort
	}
	if !IsNil(o.ContainerPorts) {
		toSerialize["container_ports"] = o.ContainerPorts
	}
	if !IsNil(o.IpWhitelist) {
		toSerialize["ip_whitelist"] = o.IpWhitelist
	}
	if !IsNil(o.ContainerExposedPorts) {
		toSerialize["container_exposed_ports"] = o.ContainerExposedPorts
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.LoadBalancingAlgorithmType) {
		toSerialize["load_balancing_algorithm_type"] = o.LoadBalancingAlgorithmType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateVhostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVhostRequest := _CreateVhostRequest{}

	err = json.Unmarshal(data, &varCreateVhostRequest)

	if err != nil {
		return err
	}

	*o = CreateVhostRequest(varCreateVhostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "default")
		delete(additionalProperties, "internal")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "user_domain")
		delete(additionalProperties, "acme")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "container_port")
		delete(additionalProperties, "container_ports")
		delete(additionalProperties, "ip_whitelist")
		delete(additionalProperties, "container_exposed_ports")
		delete(additionalProperties, "shared")
		delete(additionalProperties, "load_balancing_algorithm_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateVhostRequest struct {
	value *CreateVhostRequest
	isSet bool
}

func (v NullableCreateVhostRequest) Get() *CreateVhostRequest {
	return v.value
}

func (v *NullableCreateVhostRequest) Set(val *CreateVhostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVhostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVhostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVhostRequest(val *CreateVhostRequest) *NullableCreateVhostRequest {
	return &NullableCreateVhostRequest{value: val, isSet: true}
}

func (v NullableCreateVhostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVhostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


