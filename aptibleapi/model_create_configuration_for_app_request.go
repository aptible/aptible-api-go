/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateConfigurationForAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConfigurationForAppRequest{}

// CreateConfigurationForAppRequest struct for CreateConfigurationForAppRequest
type CreateConfigurationForAppRequest struct {
	// Mapping of environment variables
	Env map[string]interface{} `json:"env"`
	AdditionalProperties map[string]interface{}
}

type _CreateConfigurationForAppRequest CreateConfigurationForAppRequest

// NewCreateConfigurationForAppRequest instantiates a new CreateConfigurationForAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConfigurationForAppRequest(env map[string]interface{}) *CreateConfigurationForAppRequest {
	this := CreateConfigurationForAppRequest{}
	this.Env = env
	return &this
}

// NewCreateConfigurationForAppRequestWithDefaults instantiates a new CreateConfigurationForAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConfigurationForAppRequestWithDefaults() *CreateConfigurationForAppRequest {
	this := CreateConfigurationForAppRequest{}
	return &this
}

// GetEnv returns the Env field value
func (o *CreateConfigurationForAppRequest) GetEnv() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Env
}

// GetEnvOk returns a tuple with the Env field value
// and a boolean to check if the value has been set.
func (o *CreateConfigurationForAppRequest) GetEnvOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Env, true
}

// SetEnv sets field value
func (o *CreateConfigurationForAppRequest) SetEnv(v map[string]interface{}) {
	o.Env = v
}

func (o CreateConfigurationForAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConfigurationForAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["env"] = o.Env

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateConfigurationForAppRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"env",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateConfigurationForAppRequest := _CreateConfigurationForAppRequest{}

	err = json.Unmarshal(data, &varCreateConfigurationForAppRequest)

	if err != nil {
		return err
	}

	*o = CreateConfigurationForAppRequest(varCreateConfigurationForAppRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "env")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateConfigurationForAppRequest struct {
	value *CreateConfigurationForAppRequest
	isSet bool
}

func (v NullableCreateConfigurationForAppRequest) Get() *CreateConfigurationForAppRequest {
	return v.value
}

func (v *NullableCreateConfigurationForAppRequest) Set(val *CreateConfigurationForAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConfigurationForAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConfigurationForAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConfigurationForAppRequest(val *CreateConfigurationForAppRequest) *NullableCreateConfigurationForAppRequest {
	return &NullableCreateConfigurationForAppRequest{value: val, isSet: true}
}

func (v NullableCreateConfigurationForAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConfigurationForAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


