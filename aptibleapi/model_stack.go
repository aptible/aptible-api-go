/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Stack type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Stack{}

// Stack struct for Stack
type Stack struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	Name string `json:"name"`
	Version string `json:"version"`
	Region string `json:"region"`
	Default NullableBool `json:"default"`
	Public bool `json:"public"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	SshHostDsaPublicKey string `json:"ssh_host_dsa_public_key"`
	SshHostRsaPublicKey string `json:"ssh_host_rsa_public_key"`
	SshHostEcdsaPublicKey string `json:"ssh_host_ecdsa_public_key"`
	SshPortalHost string `json:"ssh_portal_host"`
	SshPortalPort int32 `json:"ssh_portal_port"`
	OutboundIpAddresses []string `json:"outbound_ip_addresses"`
	MemoryLimits bool `json:"memory_limits"`
	CpuLimits bool `json:"cpu_limits"`
	IntrusionDetection bool `json:"intrusion_detection"`
	ExposeIntrusionDetectionReports bool `json:"expose_intrusion_detection_reports"`
	AccountId NullableString `json:"account_id"`
	VpcId NullableString `json:"vpc_id"`
	InternalDomain NullableString `json:"internal_domain"`
	DefaultDomain NullableString `json:"default_domain"`
	BrickwallEnabled bool `json:"brickwall_enabled"`
	Links *StackLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Stack Stack

// NewStack instantiates a new Stack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStack(id int32, metaType string, name string, version string, region string, default_ NullableBool, public bool, createdAt string, updatedAt string, sshHostDsaPublicKey string, sshHostRsaPublicKey string, sshHostEcdsaPublicKey string, sshPortalHost string, sshPortalPort int32, outboundIpAddresses []string, memoryLimits bool, cpuLimits bool, intrusionDetection bool, exposeIntrusionDetectionReports bool, accountId NullableString, vpcId NullableString, internalDomain NullableString, defaultDomain NullableString, brickwallEnabled bool) *Stack {
	this := Stack{}
	this.Id = id
	this.MetaType = metaType
	this.Name = name
	this.Version = version
	this.Region = region
	this.Default = default_
	this.Public = public
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.SshHostDsaPublicKey = sshHostDsaPublicKey
	this.SshHostRsaPublicKey = sshHostRsaPublicKey
	this.SshHostEcdsaPublicKey = sshHostEcdsaPublicKey
	this.SshPortalHost = sshPortalHost
	this.SshPortalPort = sshPortalPort
	this.OutboundIpAddresses = outboundIpAddresses
	this.MemoryLimits = memoryLimits
	this.CpuLimits = cpuLimits
	this.IntrusionDetection = intrusionDetection
	this.ExposeIntrusionDetectionReports = exposeIntrusionDetectionReports
	this.AccountId = accountId
	this.VpcId = vpcId
	this.InternalDomain = internalDomain
	this.DefaultDomain = defaultDomain
	this.BrickwallEnabled = brickwallEnabled
	return &this
}

// NewStackWithDefaults instantiates a new Stack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackWithDefaults() *Stack {
	this := Stack{}
	return &this
}

// GetId returns the Id field value
func (o *Stack) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Stack) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Stack) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *Stack) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Stack) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Stack) SetMetaType(v string) {
	o.MetaType = v
}

// GetName returns the Name field value
func (o *Stack) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Stack) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Stack) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *Stack) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Stack) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Stack) SetVersion(v string) {
	o.Version = v
}

// GetRegion returns the Region field value
func (o *Stack) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *Stack) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *Stack) SetRegion(v string) {
	o.Region = v
}

// GetDefault returns the Default field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Stack) GetDefault() bool {
	if o == nil || o.Default.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Default.Get()
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stack) GetDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Default.Get(), o.Default.IsSet()
}

// SetDefault sets field value
func (o *Stack) SetDefault(v bool) {
	o.Default.Set(&v)
}

// GetPublic returns the Public field value
func (o *Stack) GetPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *Stack) GetPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *Stack) SetPublic(v bool) {
	o.Public = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Stack) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Stack) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Stack) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Stack) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Stack) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Stack) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetSshHostDsaPublicKey returns the SshHostDsaPublicKey field value
func (o *Stack) GetSshHostDsaPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshHostDsaPublicKey
}

// GetSshHostDsaPublicKeyOk returns a tuple with the SshHostDsaPublicKey field value
// and a boolean to check if the value has been set.
func (o *Stack) GetSshHostDsaPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshHostDsaPublicKey, true
}

// SetSshHostDsaPublicKey sets field value
func (o *Stack) SetSshHostDsaPublicKey(v string) {
	o.SshHostDsaPublicKey = v
}

// GetSshHostRsaPublicKey returns the SshHostRsaPublicKey field value
func (o *Stack) GetSshHostRsaPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshHostRsaPublicKey
}

// GetSshHostRsaPublicKeyOk returns a tuple with the SshHostRsaPublicKey field value
// and a boolean to check if the value has been set.
func (o *Stack) GetSshHostRsaPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshHostRsaPublicKey, true
}

// SetSshHostRsaPublicKey sets field value
func (o *Stack) SetSshHostRsaPublicKey(v string) {
	o.SshHostRsaPublicKey = v
}

// GetSshHostEcdsaPublicKey returns the SshHostEcdsaPublicKey field value
func (o *Stack) GetSshHostEcdsaPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshHostEcdsaPublicKey
}

// GetSshHostEcdsaPublicKeyOk returns a tuple with the SshHostEcdsaPublicKey field value
// and a boolean to check if the value has been set.
func (o *Stack) GetSshHostEcdsaPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshHostEcdsaPublicKey, true
}

// SetSshHostEcdsaPublicKey sets field value
func (o *Stack) SetSshHostEcdsaPublicKey(v string) {
	o.SshHostEcdsaPublicKey = v
}

// GetSshPortalHost returns the SshPortalHost field value
func (o *Stack) GetSshPortalHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshPortalHost
}

// GetSshPortalHostOk returns a tuple with the SshPortalHost field value
// and a boolean to check if the value has been set.
func (o *Stack) GetSshPortalHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshPortalHost, true
}

// SetSshPortalHost sets field value
func (o *Stack) SetSshPortalHost(v string) {
	o.SshPortalHost = v
}

// GetSshPortalPort returns the SshPortalPort field value
func (o *Stack) GetSshPortalPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SshPortalPort
}

// GetSshPortalPortOk returns a tuple with the SshPortalPort field value
// and a boolean to check if the value has been set.
func (o *Stack) GetSshPortalPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshPortalPort, true
}

// SetSshPortalPort sets field value
func (o *Stack) SetSshPortalPort(v int32) {
	o.SshPortalPort = v
}

// GetOutboundIpAddresses returns the OutboundIpAddresses field value
func (o *Stack) GetOutboundIpAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OutboundIpAddresses
}

// GetOutboundIpAddressesOk returns a tuple with the OutboundIpAddresses field value
// and a boolean to check if the value has been set.
func (o *Stack) GetOutboundIpAddressesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutboundIpAddresses, true
}

// SetOutboundIpAddresses sets field value
func (o *Stack) SetOutboundIpAddresses(v []string) {
	o.OutboundIpAddresses = v
}

// GetMemoryLimits returns the MemoryLimits field value
func (o *Stack) GetMemoryLimits() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MemoryLimits
}

// GetMemoryLimitsOk returns a tuple with the MemoryLimits field value
// and a boolean to check if the value has been set.
func (o *Stack) GetMemoryLimitsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryLimits, true
}

// SetMemoryLimits sets field value
func (o *Stack) SetMemoryLimits(v bool) {
	o.MemoryLimits = v
}

// GetCpuLimits returns the CpuLimits field value
func (o *Stack) GetCpuLimits() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CpuLimits
}

// GetCpuLimitsOk returns a tuple with the CpuLimits field value
// and a boolean to check if the value has been set.
func (o *Stack) GetCpuLimitsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuLimits, true
}

// SetCpuLimits sets field value
func (o *Stack) SetCpuLimits(v bool) {
	o.CpuLimits = v
}

// GetIntrusionDetection returns the IntrusionDetection field value
func (o *Stack) GetIntrusionDetection() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IntrusionDetection
}

// GetIntrusionDetectionOk returns a tuple with the IntrusionDetection field value
// and a boolean to check if the value has been set.
func (o *Stack) GetIntrusionDetectionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntrusionDetection, true
}

// SetIntrusionDetection sets field value
func (o *Stack) SetIntrusionDetection(v bool) {
	o.IntrusionDetection = v
}

// GetExposeIntrusionDetectionReports returns the ExposeIntrusionDetectionReports field value
func (o *Stack) GetExposeIntrusionDetectionReports() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExposeIntrusionDetectionReports
}

// GetExposeIntrusionDetectionReportsOk returns a tuple with the ExposeIntrusionDetectionReports field value
// and a boolean to check if the value has been set.
func (o *Stack) GetExposeIntrusionDetectionReportsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExposeIntrusionDetectionReports, true
}

// SetExposeIntrusionDetectionReports sets field value
func (o *Stack) SetExposeIntrusionDetectionReports(v bool) {
	o.ExposeIntrusionDetectionReports = v
}

// GetAccountId returns the AccountId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Stack) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stack) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// SetAccountId sets field value
func (o *Stack) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// GetVpcId returns the VpcId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Stack) GetVpcId() string {
	if o == nil || o.VpcId.Get() == nil {
		var ret string
		return ret
	}

	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stack) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// SetVpcId sets field value
func (o *Stack) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// GetInternalDomain returns the InternalDomain field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Stack) GetInternalDomain() string {
	if o == nil || o.InternalDomain.Get() == nil {
		var ret string
		return ret
	}

	return *o.InternalDomain.Get()
}

// GetInternalDomainOk returns a tuple with the InternalDomain field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stack) GetInternalDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalDomain.Get(), o.InternalDomain.IsSet()
}

// SetInternalDomain sets field value
func (o *Stack) SetInternalDomain(v string) {
	o.InternalDomain.Set(&v)
}

// GetDefaultDomain returns the DefaultDomain field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Stack) GetDefaultDomain() string {
	if o == nil || o.DefaultDomain.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultDomain.Get()
}

// GetDefaultDomainOk returns a tuple with the DefaultDomain field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stack) GetDefaultDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultDomain.Get(), o.DefaultDomain.IsSet()
}

// SetDefaultDomain sets field value
func (o *Stack) SetDefaultDomain(v string) {
	o.DefaultDomain.Set(&v)
}

// GetBrickwallEnabled returns the BrickwallEnabled field value
func (o *Stack) GetBrickwallEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BrickwallEnabled
}

// GetBrickwallEnabledOk returns a tuple with the BrickwallEnabled field value
// and a boolean to check if the value has been set.
func (o *Stack) GetBrickwallEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrickwallEnabled, true
}

// SetBrickwallEnabled sets field value
func (o *Stack) SetBrickwallEnabled(v bool) {
	o.BrickwallEnabled = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Stack) GetLinks() StackLinks {
	if o == nil || IsNil(o.Links) {
		var ret StackLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stack) GetLinksOk() (*StackLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Stack) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given StackLinks and assigns it to the Links field.
func (o *Stack) SetLinks(v StackLinks) {
	o.Links = &v
}

func (o Stack) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Stack) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["name"] = o.Name
	toSerialize["version"] = o.Version
	toSerialize["region"] = o.Region
	toSerialize["default"] = o.Default.Get()
	toSerialize["public"] = o.Public
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["ssh_host_dsa_public_key"] = o.SshHostDsaPublicKey
	toSerialize["ssh_host_rsa_public_key"] = o.SshHostRsaPublicKey
	toSerialize["ssh_host_ecdsa_public_key"] = o.SshHostEcdsaPublicKey
	toSerialize["ssh_portal_host"] = o.SshPortalHost
	toSerialize["ssh_portal_port"] = o.SshPortalPort
	toSerialize["outbound_ip_addresses"] = o.OutboundIpAddresses
	toSerialize["memory_limits"] = o.MemoryLimits
	toSerialize["cpu_limits"] = o.CpuLimits
	toSerialize["intrusion_detection"] = o.IntrusionDetection
	toSerialize["expose_intrusion_detection_reports"] = o.ExposeIntrusionDetectionReports
	toSerialize["account_id"] = o.AccountId.Get()
	toSerialize["vpc_id"] = o.VpcId.Get()
	toSerialize["internal_domain"] = o.InternalDomain.Get()
	toSerialize["default_domain"] = o.DefaultDomain.Get()
	toSerialize["brickwall_enabled"] = o.BrickwallEnabled
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Stack) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"name",
		"version",
		"region",
		"default",
		"public",
		"created_at",
		"updated_at",
		"ssh_host_dsa_public_key",
		"ssh_host_rsa_public_key",
		"ssh_host_ecdsa_public_key",
		"ssh_portal_host",
		"ssh_portal_port",
		"outbound_ip_addresses",
		"memory_limits",
		"cpu_limits",
		"intrusion_detection",
		"expose_intrusion_detection_reports",
		"account_id",
		"vpc_id",
		"internal_domain",
		"default_domain",
		"brickwall_enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStack := _Stack{}

	err = json.Unmarshal(data, &varStack)

	if err != nil {
		return err
	}

	*o = Stack(varStack)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "version")
		delete(additionalProperties, "region")
		delete(additionalProperties, "default")
		delete(additionalProperties, "public")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "ssh_host_dsa_public_key")
		delete(additionalProperties, "ssh_host_rsa_public_key")
		delete(additionalProperties, "ssh_host_ecdsa_public_key")
		delete(additionalProperties, "ssh_portal_host")
		delete(additionalProperties, "ssh_portal_port")
		delete(additionalProperties, "outbound_ip_addresses")
		delete(additionalProperties, "memory_limits")
		delete(additionalProperties, "cpu_limits")
		delete(additionalProperties, "intrusion_detection")
		delete(additionalProperties, "expose_intrusion_detection_reports")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "vpc_id")
		delete(additionalProperties, "internal_domain")
		delete(additionalProperties, "default_domain")
		delete(additionalProperties, "brickwall_enabled")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStack struct {
	value *Stack
	isSet bool
}

func (v NullableStack) Get() *Stack {
	return v.value
}

func (v *NullableStack) Set(val *Stack) {
	v.value = val
	v.isSet = true
}

func (v NullableStack) IsSet() bool {
	return v.isSet
}

func (v *NullableStack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStack(val *Stack) *NullableStack {
	return &NullableStack{value: val, isSet: true}
}

func (v NullableStack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


