/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the AccountLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountLinks{}

// AccountLinks struct for AccountLinks
type AccountLinks struct {
	Organization *AccountLinksOrganization `json:"organization,omitempty"`
	Stack *AccountLinksStack `json:"stack,omitempty"`
	Apps *AccountLinksApps `json:"apps,omitempty"`
	Backups *AccountLinksBackups `json:"backups,omitempty"`
	Databases *AccountLinksDatabases `json:"databases,omitempty"`
	Disks *AccountLinksDisks `json:"disks,omitempty"`
	Services *AccountLinksServices `json:"services,omitempty"`
	Operations *AccountLinksOperations `json:"operations,omitempty"`
	Permissions *AccountLinksPermissions `json:"permissions,omitempty"`
	LogDrains *AccountLinksLogDrains `json:"log_drains,omitempty"`
	MetricDrains *AccountLinksMetricDrains `json:"metric_drains,omitempty"`
	Certificates *AccountLinksCertificates `json:"certificates,omitempty"`
	Vhosts *AccountLinksVhosts `json:"vhosts,omitempty"`
	ActivityReports *AccountLinksActivityReports `json:"activity_reports,omitempty"`
	DiskAttachments *AccountLinksDiskAttachments `json:"disk_attachments,omitempty"`
	Self *AccountLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountLinks AccountLinks

// NewAccountLinks instantiates a new AccountLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountLinks() *AccountLinks {
	this := AccountLinks{}
	return &this
}

// NewAccountLinksWithDefaults instantiates a new AccountLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountLinksWithDefaults() *AccountLinks {
	this := AccountLinks{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *AccountLinks) GetOrganization() AccountLinksOrganization {
	if o == nil || IsNil(o.Organization) {
		var ret AccountLinksOrganization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetOrganizationOk() (*AccountLinksOrganization, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *AccountLinks) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given AccountLinksOrganization and assigns it to the Organization field.
func (o *AccountLinks) SetOrganization(v AccountLinksOrganization) {
	o.Organization = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *AccountLinks) GetStack() AccountLinksStack {
	if o == nil || IsNil(o.Stack) {
		var ret AccountLinksStack
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetStackOk() (*AccountLinksStack, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *AccountLinks) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given AccountLinksStack and assigns it to the Stack field.
func (o *AccountLinks) SetStack(v AccountLinksStack) {
	o.Stack = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *AccountLinks) GetApps() AccountLinksApps {
	if o == nil || IsNil(o.Apps) {
		var ret AccountLinksApps
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetAppsOk() (*AccountLinksApps, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *AccountLinks) HasApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given AccountLinksApps and assigns it to the Apps field.
func (o *AccountLinks) SetApps(v AccountLinksApps) {
	o.Apps = &v
}

// GetBackups returns the Backups field value if set, zero value otherwise.
func (o *AccountLinks) GetBackups() AccountLinksBackups {
	if o == nil || IsNil(o.Backups) {
		var ret AccountLinksBackups
		return ret
	}
	return *o.Backups
}

// GetBackupsOk returns a tuple with the Backups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetBackupsOk() (*AccountLinksBackups, bool) {
	if o == nil || IsNil(o.Backups) {
		return nil, false
	}
	return o.Backups, true
}

// HasBackups returns a boolean if a field has been set.
func (o *AccountLinks) HasBackups() bool {
	if o != nil && !IsNil(o.Backups) {
		return true
	}

	return false
}

// SetBackups gets a reference to the given AccountLinksBackups and assigns it to the Backups field.
func (o *AccountLinks) SetBackups(v AccountLinksBackups) {
	o.Backups = &v
}

// GetDatabases returns the Databases field value if set, zero value otherwise.
func (o *AccountLinks) GetDatabases() AccountLinksDatabases {
	if o == nil || IsNil(o.Databases) {
		var ret AccountLinksDatabases
		return ret
	}
	return *o.Databases
}

// GetDatabasesOk returns a tuple with the Databases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetDatabasesOk() (*AccountLinksDatabases, bool) {
	if o == nil || IsNil(o.Databases) {
		return nil, false
	}
	return o.Databases, true
}

// HasDatabases returns a boolean if a field has been set.
func (o *AccountLinks) HasDatabases() bool {
	if o != nil && !IsNil(o.Databases) {
		return true
	}

	return false
}

// SetDatabases gets a reference to the given AccountLinksDatabases and assigns it to the Databases field.
func (o *AccountLinks) SetDatabases(v AccountLinksDatabases) {
	o.Databases = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *AccountLinks) GetDisks() AccountLinksDisks {
	if o == nil || IsNil(o.Disks) {
		var ret AccountLinksDisks
		return ret
	}
	return *o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetDisksOk() (*AccountLinksDisks, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *AccountLinks) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given AccountLinksDisks and assigns it to the Disks field.
func (o *AccountLinks) SetDisks(v AccountLinksDisks) {
	o.Disks = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *AccountLinks) GetServices() AccountLinksServices {
	if o == nil || IsNil(o.Services) {
		var ret AccountLinksServices
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetServicesOk() (*AccountLinksServices, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *AccountLinks) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given AccountLinksServices and assigns it to the Services field.
func (o *AccountLinks) SetServices(v AccountLinksServices) {
	o.Services = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *AccountLinks) GetOperations() AccountLinksOperations {
	if o == nil || IsNil(o.Operations) {
		var ret AccountLinksOperations
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetOperationsOk() (*AccountLinksOperations, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *AccountLinks) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given AccountLinksOperations and assigns it to the Operations field.
func (o *AccountLinks) SetOperations(v AccountLinksOperations) {
	o.Operations = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AccountLinks) GetPermissions() AccountLinksPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret AccountLinksPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetPermissionsOk() (*AccountLinksPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *AccountLinks) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given AccountLinksPermissions and assigns it to the Permissions field.
func (o *AccountLinks) SetPermissions(v AccountLinksPermissions) {
	o.Permissions = &v
}

// GetLogDrains returns the LogDrains field value if set, zero value otherwise.
func (o *AccountLinks) GetLogDrains() AccountLinksLogDrains {
	if o == nil || IsNil(o.LogDrains) {
		var ret AccountLinksLogDrains
		return ret
	}
	return *o.LogDrains
}

// GetLogDrainsOk returns a tuple with the LogDrains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetLogDrainsOk() (*AccountLinksLogDrains, bool) {
	if o == nil || IsNil(o.LogDrains) {
		return nil, false
	}
	return o.LogDrains, true
}

// HasLogDrains returns a boolean if a field has been set.
func (o *AccountLinks) HasLogDrains() bool {
	if o != nil && !IsNil(o.LogDrains) {
		return true
	}

	return false
}

// SetLogDrains gets a reference to the given AccountLinksLogDrains and assigns it to the LogDrains field.
func (o *AccountLinks) SetLogDrains(v AccountLinksLogDrains) {
	o.LogDrains = &v
}

// GetMetricDrains returns the MetricDrains field value if set, zero value otherwise.
func (o *AccountLinks) GetMetricDrains() AccountLinksMetricDrains {
	if o == nil || IsNil(o.MetricDrains) {
		var ret AccountLinksMetricDrains
		return ret
	}
	return *o.MetricDrains
}

// GetMetricDrainsOk returns a tuple with the MetricDrains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetMetricDrainsOk() (*AccountLinksMetricDrains, bool) {
	if o == nil || IsNil(o.MetricDrains) {
		return nil, false
	}
	return o.MetricDrains, true
}

// HasMetricDrains returns a boolean if a field has been set.
func (o *AccountLinks) HasMetricDrains() bool {
	if o != nil && !IsNil(o.MetricDrains) {
		return true
	}

	return false
}

// SetMetricDrains gets a reference to the given AccountLinksMetricDrains and assigns it to the MetricDrains field.
func (o *AccountLinks) SetMetricDrains(v AccountLinksMetricDrains) {
	o.MetricDrains = &v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *AccountLinks) GetCertificates() AccountLinksCertificates {
	if o == nil || IsNil(o.Certificates) {
		var ret AccountLinksCertificates
		return ret
	}
	return *o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetCertificatesOk() (*AccountLinksCertificates, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *AccountLinks) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given AccountLinksCertificates and assigns it to the Certificates field.
func (o *AccountLinks) SetCertificates(v AccountLinksCertificates) {
	o.Certificates = &v
}

// GetVhosts returns the Vhosts field value if set, zero value otherwise.
func (o *AccountLinks) GetVhosts() AccountLinksVhosts {
	if o == nil || IsNil(o.Vhosts) {
		var ret AccountLinksVhosts
		return ret
	}
	return *o.Vhosts
}

// GetVhostsOk returns a tuple with the Vhosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetVhostsOk() (*AccountLinksVhosts, bool) {
	if o == nil || IsNil(o.Vhosts) {
		return nil, false
	}
	return o.Vhosts, true
}

// HasVhosts returns a boolean if a field has been set.
func (o *AccountLinks) HasVhosts() bool {
	if o != nil && !IsNil(o.Vhosts) {
		return true
	}

	return false
}

// SetVhosts gets a reference to the given AccountLinksVhosts and assigns it to the Vhosts field.
func (o *AccountLinks) SetVhosts(v AccountLinksVhosts) {
	o.Vhosts = &v
}

// GetActivityReports returns the ActivityReports field value if set, zero value otherwise.
func (o *AccountLinks) GetActivityReports() AccountLinksActivityReports {
	if o == nil || IsNil(o.ActivityReports) {
		var ret AccountLinksActivityReports
		return ret
	}
	return *o.ActivityReports
}

// GetActivityReportsOk returns a tuple with the ActivityReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetActivityReportsOk() (*AccountLinksActivityReports, bool) {
	if o == nil || IsNil(o.ActivityReports) {
		return nil, false
	}
	return o.ActivityReports, true
}

// HasActivityReports returns a boolean if a field has been set.
func (o *AccountLinks) HasActivityReports() bool {
	if o != nil && !IsNil(o.ActivityReports) {
		return true
	}

	return false
}

// SetActivityReports gets a reference to the given AccountLinksActivityReports and assigns it to the ActivityReports field.
func (o *AccountLinks) SetActivityReports(v AccountLinksActivityReports) {
	o.ActivityReports = &v
}

// GetDiskAttachments returns the DiskAttachments field value if set, zero value otherwise.
func (o *AccountLinks) GetDiskAttachments() AccountLinksDiskAttachments {
	if o == nil || IsNil(o.DiskAttachments) {
		var ret AccountLinksDiskAttachments
		return ret
	}
	return *o.DiskAttachments
}

// GetDiskAttachmentsOk returns a tuple with the DiskAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetDiskAttachmentsOk() (*AccountLinksDiskAttachments, bool) {
	if o == nil || IsNil(o.DiskAttachments) {
		return nil, false
	}
	return o.DiskAttachments, true
}

// HasDiskAttachments returns a boolean if a field has been set.
func (o *AccountLinks) HasDiskAttachments() bool {
	if o != nil && !IsNil(o.DiskAttachments) {
		return true
	}

	return false
}

// SetDiskAttachments gets a reference to the given AccountLinksDiskAttachments and assigns it to the DiskAttachments field.
func (o *AccountLinks) SetDiskAttachments(v AccountLinksDiskAttachments) {
	o.DiskAttachments = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *AccountLinks) GetSelf() AccountLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret AccountLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLinks) GetSelfOk() (*AccountLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *AccountLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given AccountLinksSelf and assigns it to the Self field.
func (o *AccountLinks) SetSelf(v AccountLinksSelf) {
	o.Self = &v
}

func (o AccountLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !IsNil(o.Backups) {
		toSerialize["backups"] = o.Backups
	}
	if !IsNil(o.Databases) {
		toSerialize["databases"] = o.Databases
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.LogDrains) {
		toSerialize["log_drains"] = o.LogDrains
	}
	if !IsNil(o.MetricDrains) {
		toSerialize["metric_drains"] = o.MetricDrains
	}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}
	if !IsNil(o.Vhosts) {
		toSerialize["vhosts"] = o.Vhosts
	}
	if !IsNil(o.ActivityReports) {
		toSerialize["activity_reports"] = o.ActivityReports
	}
	if !IsNil(o.DiskAttachments) {
		toSerialize["disk_attachments"] = o.DiskAttachments
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountLinks) UnmarshalJSON(data []byte) (err error) {
	varAccountLinks := _AccountLinks{}

	err = json.Unmarshal(data, &varAccountLinks)

	if err != nil {
		return err
	}

	*o = AccountLinks(varAccountLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "organization")
		delete(additionalProperties, "stack")
		delete(additionalProperties, "apps")
		delete(additionalProperties, "backups")
		delete(additionalProperties, "databases")
		delete(additionalProperties, "disks")
		delete(additionalProperties, "services")
		delete(additionalProperties, "operations")
		delete(additionalProperties, "permissions")
		delete(additionalProperties, "log_drains")
		delete(additionalProperties, "metric_drains")
		delete(additionalProperties, "certificates")
		delete(additionalProperties, "vhosts")
		delete(additionalProperties, "activity_reports")
		delete(additionalProperties, "disk_attachments")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountLinks struct {
	value *AccountLinks
	isSet bool
}

func (v NullableAccountLinks) Get() *AccountLinks {
	return v.value
}

func (v *NullableAccountLinks) Set(val *AccountLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountLinks(val *AccountLinks) *NullableAccountLinks {
	return &NullableAccountLinks{value: val, isSet: true}
}

func (v NullableAccountLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


