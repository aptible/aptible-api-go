/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the SshPortalConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SshPortalConnection{}

// SshPortalConnection struct for SshPortalConnection
type SshPortalConnection struct {
	Id string `json:"id"`
	MetaType string `json:"_type"`
	SshUser string `json:"ssh_user"`
	SshCertificateBody string `json:"ssh_certificate_body"`
	SshPortForwardSocket NullableInt32 `json:"ssh_port_forward_socket"`
	SshPty bool `json:"ssh_pty"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	Links *SshPortalConnectionLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SshPortalConnection SshPortalConnection

// NewSshPortalConnection instantiates a new SshPortalConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshPortalConnection(id string, metaType string, sshUser string, sshCertificateBody string, sshPortForwardSocket NullableInt32, sshPty bool, createdAt string, updatedAt string) *SshPortalConnection {
	this := SshPortalConnection{}
	this.Id = id
	this.MetaType = metaType
	this.SshUser = sshUser
	this.SshCertificateBody = sshCertificateBody
	this.SshPortForwardSocket = sshPortForwardSocket
	this.SshPty = sshPty
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewSshPortalConnectionWithDefaults instantiates a new SshPortalConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshPortalConnectionWithDefaults() *SshPortalConnection {
	this := SshPortalConnection{}
	return &this
}

// GetId returns the Id field value
func (o *SshPortalConnection) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SshPortalConnection) SetId(v string) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *SshPortalConnection) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *SshPortalConnection) SetMetaType(v string) {
	o.MetaType = v
}

// GetSshUser returns the SshUser field value
func (o *SshPortalConnection) GetSshUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetSshUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshUser, true
}

// SetSshUser sets field value
func (o *SshPortalConnection) SetSshUser(v string) {
	o.SshUser = v
}

// GetSshCertificateBody returns the SshCertificateBody field value
func (o *SshPortalConnection) GetSshCertificateBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshCertificateBody
}

// GetSshCertificateBodyOk returns a tuple with the SshCertificateBody field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetSshCertificateBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshCertificateBody, true
}

// SetSshCertificateBody sets field value
func (o *SshPortalConnection) SetSshCertificateBody(v string) {
	o.SshCertificateBody = v
}

// GetSshPortForwardSocket returns the SshPortForwardSocket field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SshPortalConnection) GetSshPortForwardSocket() int32 {
	if o == nil || o.SshPortForwardSocket.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SshPortForwardSocket.Get()
}

// GetSshPortForwardSocketOk returns a tuple with the SshPortForwardSocket field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SshPortalConnection) GetSshPortForwardSocketOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshPortForwardSocket.Get(), o.SshPortForwardSocket.IsSet()
}

// SetSshPortForwardSocket sets field value
func (o *SshPortalConnection) SetSshPortForwardSocket(v int32) {
	o.SshPortForwardSocket.Set(&v)
}

// GetSshPty returns the SshPty field value
func (o *SshPortalConnection) GetSshPty() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SshPty
}

// GetSshPtyOk returns a tuple with the SshPty field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetSshPtyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshPty, true
}

// SetSshPty sets field value
func (o *SshPortalConnection) SetSshPty(v bool) {
	o.SshPty = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SshPortalConnection) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SshPortalConnection) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SshPortalConnection) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SshPortalConnection) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SshPortalConnection) GetLinks() SshPortalConnectionLinks {
	if o == nil || IsNil(o.Links) {
		var ret SshPortalConnectionLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshPortalConnection) GetLinksOk() (*SshPortalConnectionLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SshPortalConnection) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SshPortalConnectionLinks and assigns it to the Links field.
func (o *SshPortalConnection) SetLinks(v SshPortalConnectionLinks) {
	o.Links = &v
}

func (o SshPortalConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SshPortalConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["ssh_user"] = o.SshUser
	toSerialize["ssh_certificate_body"] = o.SshCertificateBody
	toSerialize["ssh_port_forward_socket"] = o.SshPortForwardSocket.Get()
	toSerialize["ssh_pty"] = o.SshPty
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SshPortalConnection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"ssh_user",
		"ssh_certificate_body",
		"ssh_port_forward_socket",
		"ssh_pty",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSshPortalConnection := _SshPortalConnection{}

	err = json.Unmarshal(data, &varSshPortalConnection)

	if err != nil {
		return err
	}

	*o = SshPortalConnection(varSshPortalConnection)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "ssh_user")
		delete(additionalProperties, "ssh_certificate_body")
		delete(additionalProperties, "ssh_port_forward_socket")
		delete(additionalProperties, "ssh_pty")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSshPortalConnection struct {
	value *SshPortalConnection
	isSet bool
}

func (v NullableSshPortalConnection) Get() *SshPortalConnection {
	return v.value
}

func (v *NullableSshPortalConnection) Set(val *SshPortalConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableSshPortalConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableSshPortalConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshPortalConnection(val *SshPortalConnection) *NullableSshPortalConnection {
	return &NullableSshPortalConnection{value: val, isSet: true}
}

func (v NullableSshPortalConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshPortalConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


