/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the VhostAcmeConfigurationChallengesInnerToInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VhostAcmeConfigurationChallengesInnerToInner{}

// VhostAcmeConfigurationChallengesInnerToInner struct for VhostAcmeConfigurationChallengesInnerToInner
type VhostAcmeConfigurationChallengesInnerToInner struct {
	Name *string `json:"name,omitempty"`
	Legacy *bool `json:"legacy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VhostAcmeConfigurationChallengesInnerToInner VhostAcmeConfigurationChallengesInnerToInner

// NewVhostAcmeConfigurationChallengesInnerToInner instantiates a new VhostAcmeConfigurationChallengesInnerToInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVhostAcmeConfigurationChallengesInnerToInner() *VhostAcmeConfigurationChallengesInnerToInner {
	this := VhostAcmeConfigurationChallengesInnerToInner{}
	return &this
}

// NewVhostAcmeConfigurationChallengesInnerToInnerWithDefaults instantiates a new VhostAcmeConfigurationChallengesInnerToInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVhostAcmeConfigurationChallengesInnerToInnerWithDefaults() *VhostAcmeConfigurationChallengesInnerToInner {
	this := VhostAcmeConfigurationChallengesInnerToInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VhostAcmeConfigurationChallengesInnerToInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VhostAcmeConfigurationChallengesInnerToInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VhostAcmeConfigurationChallengesInnerToInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VhostAcmeConfigurationChallengesInnerToInner) SetName(v string) {
	o.Name = &v
}

// GetLegacy returns the Legacy field value if set, zero value otherwise.
func (o *VhostAcmeConfigurationChallengesInnerToInner) GetLegacy() bool {
	if o == nil || IsNil(o.Legacy) {
		var ret bool
		return ret
	}
	return *o.Legacy
}

// GetLegacyOk returns a tuple with the Legacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VhostAcmeConfigurationChallengesInnerToInner) GetLegacyOk() (*bool, bool) {
	if o == nil || IsNil(o.Legacy) {
		return nil, false
	}
	return o.Legacy, true
}

// HasLegacy returns a boolean if a field has been set.
func (o *VhostAcmeConfigurationChallengesInnerToInner) HasLegacy() bool {
	if o != nil && !IsNil(o.Legacy) {
		return true
	}

	return false
}

// SetLegacy gets a reference to the given bool and assigns it to the Legacy field.
func (o *VhostAcmeConfigurationChallengesInnerToInner) SetLegacy(v bool) {
	o.Legacy = &v
}

func (o VhostAcmeConfigurationChallengesInnerToInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VhostAcmeConfigurationChallengesInnerToInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Legacy) {
		toSerialize["legacy"] = o.Legacy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VhostAcmeConfigurationChallengesInnerToInner) UnmarshalJSON(data []byte) (err error) {
	varVhostAcmeConfigurationChallengesInnerToInner := _VhostAcmeConfigurationChallengesInnerToInner{}

	err = json.Unmarshal(data, &varVhostAcmeConfigurationChallengesInnerToInner)

	if err != nil {
		return err
	}

	*o = VhostAcmeConfigurationChallengesInnerToInner(varVhostAcmeConfigurationChallengesInnerToInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "legacy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVhostAcmeConfigurationChallengesInnerToInner struct {
	value *VhostAcmeConfigurationChallengesInnerToInner
	isSet bool
}

func (v NullableVhostAcmeConfigurationChallengesInnerToInner) Get() *VhostAcmeConfigurationChallengesInnerToInner {
	return v.value
}

func (v *NullableVhostAcmeConfigurationChallengesInnerToInner) Set(val *VhostAcmeConfigurationChallengesInnerToInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVhostAcmeConfigurationChallengesInnerToInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVhostAcmeConfigurationChallengesInnerToInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVhostAcmeConfigurationChallengesInnerToInner(val *VhostAcmeConfigurationChallengesInnerToInner) *NullableVhostAcmeConfigurationChallengesInnerToInner {
	return &NullableVhostAcmeConfigurationChallengesInnerToInner{value: val, isSet: true}
}

func (v NullableVhostAcmeConfigurationChallengesInnerToInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVhostAcmeConfigurationChallengesInnerToInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


