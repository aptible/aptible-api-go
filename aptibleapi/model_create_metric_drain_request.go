/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateMetricDrainRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMetricDrainRequest{}

// CreateMetricDrainRequest struct for CreateMetricDrainRequest
type CreateMetricDrainRequest struct {
	Handle string `json:"handle"`
	DrainType string `json:"drain_type"`
	DrainConfiguration *CreateMetricDrainRequestDrainConfiguration `json:"drain_configuration,omitempty"`
	// For Deploy-hosted InfluxDB instances
	Database *string `json:"database,omitempty"`
	// For Deploy-hosted InfluxDB instances
	DatabaseId *int32 `json:"database_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateMetricDrainRequest CreateMetricDrainRequest

// NewCreateMetricDrainRequest instantiates a new CreateMetricDrainRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMetricDrainRequest(handle string, drainType string) *CreateMetricDrainRequest {
	this := CreateMetricDrainRequest{}
	this.Handle = handle
	this.DrainType = drainType
	return &this
}

// NewCreateMetricDrainRequestWithDefaults instantiates a new CreateMetricDrainRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMetricDrainRequestWithDefaults() *CreateMetricDrainRequest {
	this := CreateMetricDrainRequest{}
	return &this
}

// GetHandle returns the Handle field value
func (o *CreateMetricDrainRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *CreateMetricDrainRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *CreateMetricDrainRequest) SetHandle(v string) {
	o.Handle = v
}

// GetDrainType returns the DrainType field value
func (o *CreateMetricDrainRequest) GetDrainType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DrainType
}

// GetDrainTypeOk returns a tuple with the DrainType field value
// and a boolean to check if the value has been set.
func (o *CreateMetricDrainRequest) GetDrainTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DrainType, true
}

// SetDrainType sets field value
func (o *CreateMetricDrainRequest) SetDrainType(v string) {
	o.DrainType = v
}

// GetDrainConfiguration returns the DrainConfiguration field value if set, zero value otherwise.
func (o *CreateMetricDrainRequest) GetDrainConfiguration() CreateMetricDrainRequestDrainConfiguration {
	if o == nil || IsNil(o.DrainConfiguration) {
		var ret CreateMetricDrainRequestDrainConfiguration
		return ret
	}
	return *o.DrainConfiguration
}

// GetDrainConfigurationOk returns a tuple with the DrainConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMetricDrainRequest) GetDrainConfigurationOk() (*CreateMetricDrainRequestDrainConfiguration, bool) {
	if o == nil || IsNil(o.DrainConfiguration) {
		return nil, false
	}
	return o.DrainConfiguration, true
}

// HasDrainConfiguration returns a boolean if a field has been set.
func (o *CreateMetricDrainRequest) HasDrainConfiguration() bool {
	if o != nil && !IsNil(o.DrainConfiguration) {
		return true
	}

	return false
}

// SetDrainConfiguration gets a reference to the given CreateMetricDrainRequestDrainConfiguration and assigns it to the DrainConfiguration field.
func (o *CreateMetricDrainRequest) SetDrainConfiguration(v CreateMetricDrainRequestDrainConfiguration) {
	o.DrainConfiguration = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *CreateMetricDrainRequest) GetDatabase() string {
	if o == nil || IsNil(o.Database) {
		var ret string
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMetricDrainRequest) GetDatabaseOk() (*string, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *CreateMetricDrainRequest) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given string and assigns it to the Database field.
func (o *CreateMetricDrainRequest) SetDatabase(v string) {
	o.Database = &v
}

// GetDatabaseId returns the DatabaseId field value if set, zero value otherwise.
func (o *CreateMetricDrainRequest) GetDatabaseId() int32 {
	if o == nil || IsNil(o.DatabaseId) {
		var ret int32
		return ret
	}
	return *o.DatabaseId
}

// GetDatabaseIdOk returns a tuple with the DatabaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMetricDrainRequest) GetDatabaseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DatabaseId) {
		return nil, false
	}
	return o.DatabaseId, true
}

// HasDatabaseId returns a boolean if a field has been set.
func (o *CreateMetricDrainRequest) HasDatabaseId() bool {
	if o != nil && !IsNil(o.DatabaseId) {
		return true
	}

	return false
}

// SetDatabaseId gets a reference to the given int32 and assigns it to the DatabaseId field.
func (o *CreateMetricDrainRequest) SetDatabaseId(v int32) {
	o.DatabaseId = &v
}

func (o CreateMetricDrainRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMetricDrainRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["handle"] = o.Handle
	toSerialize["drain_type"] = o.DrainType
	if !IsNil(o.DrainConfiguration) {
		toSerialize["drain_configuration"] = o.DrainConfiguration
	}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.DatabaseId) {
		toSerialize["database_id"] = o.DatabaseId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateMetricDrainRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"handle",
		"drain_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMetricDrainRequest := _CreateMetricDrainRequest{}

	err = json.Unmarshal(data, &varCreateMetricDrainRequest)

	if err != nil {
		return err
	}

	*o = CreateMetricDrainRequest(varCreateMetricDrainRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "handle")
		delete(additionalProperties, "drain_type")
		delete(additionalProperties, "drain_configuration")
		delete(additionalProperties, "database")
		delete(additionalProperties, "database_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateMetricDrainRequest struct {
	value *CreateMetricDrainRequest
	isSet bool
}

func (v NullableCreateMetricDrainRequest) Get() *CreateMetricDrainRequest {
	return v.value
}

func (v *NullableCreateMetricDrainRequest) Set(val *CreateMetricDrainRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMetricDrainRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMetricDrainRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMetricDrainRequest(val *CreateMetricDrainRequest) *NullableCreateMetricDrainRequest {
	return &NullableCreateMetricDrainRequest{value: val, isSet: true}
}

func (v NullableCreateMetricDrainRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMetricDrainRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


