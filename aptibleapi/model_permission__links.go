/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the PermissionLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionLinks{}

// PermissionLinks struct for PermissionLinks
type PermissionLinks struct {
	Role *ListAccountsForStack200ResponseLinksStack `json:"role,omitempty"`
	Account *ListAccountsForStack200ResponseLinksStack `json:"account,omitempty"`
	Self *ListAccountsForStack200ResponseLinksStack `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PermissionLinks PermissionLinks

// NewPermissionLinks instantiates a new PermissionLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionLinks() *PermissionLinks {
	this := PermissionLinks{}
	return &this
}

// NewPermissionLinksWithDefaults instantiates a new PermissionLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionLinksWithDefaults() *PermissionLinks {
	this := PermissionLinks{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PermissionLinks) GetRole() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Role) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionLinks) GetRoleOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PermissionLinks) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Role field.
func (o *PermissionLinks) SetRole(v ListAccountsForStack200ResponseLinksStack) {
	o.Role = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *PermissionLinks) GetAccount() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Account) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionLinks) GetAccountOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *PermissionLinks) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Account field.
func (o *PermissionLinks) SetAccount(v ListAccountsForStack200ResponseLinksStack) {
	o.Account = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *PermissionLinks) GetSelf() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Self) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionLinks) GetSelfOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *PermissionLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Self field.
func (o *PermissionLinks) SetSelf(v ListAccountsForStack200ResponseLinksStack) {
	o.Self = &v
}

func (o PermissionLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PermissionLinks) UnmarshalJSON(data []byte) (err error) {
	varPermissionLinks := _PermissionLinks{}

	err = json.Unmarshal(data, &varPermissionLinks)

	if err != nil {
		return err
	}

	*o = PermissionLinks(varPermissionLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "role")
		delete(additionalProperties, "account")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePermissionLinks struct {
	value *PermissionLinks
	isSet bool
}

func (v NullablePermissionLinks) Get() *PermissionLinks {
	return v.value
}

func (v *NullablePermissionLinks) Set(val *PermissionLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionLinks(val *PermissionLinks) *NullablePermissionLinks {
	return &NullablePermissionLinks{value: val, isSet: true}
}

func (v NullablePermissionLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


