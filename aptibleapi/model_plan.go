/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Plan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Plan{}

// Plan struct for Plan
type Plan struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	ContainerMemoryLimitMb int32 `json:"container_memory_limit_mb"`
	CpuAllowedProfiles []string `json:"cpu_allowed_profiles"`
	DiskLimitGb int32 `json:"disk_limit_gb"`
	EphemeralSessionLimit int32 `json:"ephemeral_session_limit"`
	EnvironmentLimit int32 `json:"environment_limit"`
	VhostLimit int32 `json:"vhost_limit"`
	CostCents int32 `json:"cost_cents"`
	IncludedContainerMb int32 `json:"included_container_mb"`
	IncludedDiskGb int32 `json:"included_disk_gb"`
	IncludedVhosts int32 `json:"included_vhosts"`
	ComplianceDashboardAccess bool `json:"compliance_dashboard_access"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	Links *PlanLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Plan Plan

// NewPlan instantiates a new Plan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlan(id int32, metaType string, containerMemoryLimitMb int32, cpuAllowedProfiles []string, diskLimitGb int32, ephemeralSessionLimit int32, environmentLimit int32, vhostLimit int32, costCents int32, includedContainerMb int32, includedDiskGb int32, includedVhosts int32, complianceDashboardAccess bool, createdAt string, updatedAt string) *Plan {
	this := Plan{}
	this.Id = id
	this.MetaType = metaType
	this.ContainerMemoryLimitMb = containerMemoryLimitMb
	this.CpuAllowedProfiles = cpuAllowedProfiles
	this.DiskLimitGb = diskLimitGb
	this.EphemeralSessionLimit = ephemeralSessionLimit
	this.EnvironmentLimit = environmentLimit
	this.VhostLimit = vhostLimit
	this.CostCents = costCents
	this.IncludedContainerMb = includedContainerMb
	this.IncludedDiskGb = includedDiskGb
	this.IncludedVhosts = includedVhosts
	this.ComplianceDashboardAccess = complianceDashboardAccess
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewPlanWithDefaults instantiates a new Plan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanWithDefaults() *Plan {
	this := Plan{}
	return &this
}

// GetId returns the Id field value
func (o *Plan) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Plan) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Plan) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *Plan) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Plan) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Plan) SetMetaType(v string) {
	o.MetaType = v
}

// GetContainerMemoryLimitMb returns the ContainerMemoryLimitMb field value
func (o *Plan) GetContainerMemoryLimitMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContainerMemoryLimitMb
}

// GetContainerMemoryLimitMbOk returns a tuple with the ContainerMemoryLimitMb field value
// and a boolean to check if the value has been set.
func (o *Plan) GetContainerMemoryLimitMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerMemoryLimitMb, true
}

// SetContainerMemoryLimitMb sets field value
func (o *Plan) SetContainerMemoryLimitMb(v int32) {
	o.ContainerMemoryLimitMb = v
}

// GetCpuAllowedProfiles returns the CpuAllowedProfiles field value
func (o *Plan) GetCpuAllowedProfiles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CpuAllowedProfiles
}

// GetCpuAllowedProfilesOk returns a tuple with the CpuAllowedProfiles field value
// and a boolean to check if the value has been set.
func (o *Plan) GetCpuAllowedProfilesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuAllowedProfiles, true
}

// SetCpuAllowedProfiles sets field value
func (o *Plan) SetCpuAllowedProfiles(v []string) {
	o.CpuAllowedProfiles = v
}

// GetDiskLimitGb returns the DiskLimitGb field value
func (o *Plan) GetDiskLimitGb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiskLimitGb
}

// GetDiskLimitGbOk returns a tuple with the DiskLimitGb field value
// and a boolean to check if the value has been set.
func (o *Plan) GetDiskLimitGbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskLimitGb, true
}

// SetDiskLimitGb sets field value
func (o *Plan) SetDiskLimitGb(v int32) {
	o.DiskLimitGb = v
}

// GetEphemeralSessionLimit returns the EphemeralSessionLimit field value
func (o *Plan) GetEphemeralSessionLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EphemeralSessionLimit
}

// GetEphemeralSessionLimitOk returns a tuple with the EphemeralSessionLimit field value
// and a boolean to check if the value has been set.
func (o *Plan) GetEphemeralSessionLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EphemeralSessionLimit, true
}

// SetEphemeralSessionLimit sets field value
func (o *Plan) SetEphemeralSessionLimit(v int32) {
	o.EphemeralSessionLimit = v
}

// GetEnvironmentLimit returns the EnvironmentLimit field value
func (o *Plan) GetEnvironmentLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EnvironmentLimit
}

// GetEnvironmentLimitOk returns a tuple with the EnvironmentLimit field value
// and a boolean to check if the value has been set.
func (o *Plan) GetEnvironmentLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentLimit, true
}

// SetEnvironmentLimit sets field value
func (o *Plan) SetEnvironmentLimit(v int32) {
	o.EnvironmentLimit = v
}

// GetVhostLimit returns the VhostLimit field value
func (o *Plan) GetVhostLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VhostLimit
}

// GetVhostLimitOk returns a tuple with the VhostLimit field value
// and a boolean to check if the value has been set.
func (o *Plan) GetVhostLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VhostLimit, true
}

// SetVhostLimit sets field value
func (o *Plan) SetVhostLimit(v int32) {
	o.VhostLimit = v
}

// GetCostCents returns the CostCents field value
func (o *Plan) GetCostCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CostCents
}

// GetCostCentsOk returns a tuple with the CostCents field value
// and a boolean to check if the value has been set.
func (o *Plan) GetCostCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostCents, true
}

// SetCostCents sets field value
func (o *Plan) SetCostCents(v int32) {
	o.CostCents = v
}

// GetIncludedContainerMb returns the IncludedContainerMb field value
func (o *Plan) GetIncludedContainerMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IncludedContainerMb
}

// GetIncludedContainerMbOk returns a tuple with the IncludedContainerMb field value
// and a boolean to check if the value has been set.
func (o *Plan) GetIncludedContainerMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedContainerMb, true
}

// SetIncludedContainerMb sets field value
func (o *Plan) SetIncludedContainerMb(v int32) {
	o.IncludedContainerMb = v
}

// GetIncludedDiskGb returns the IncludedDiskGb field value
func (o *Plan) GetIncludedDiskGb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IncludedDiskGb
}

// GetIncludedDiskGbOk returns a tuple with the IncludedDiskGb field value
// and a boolean to check if the value has been set.
func (o *Plan) GetIncludedDiskGbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedDiskGb, true
}

// SetIncludedDiskGb sets field value
func (o *Plan) SetIncludedDiskGb(v int32) {
	o.IncludedDiskGb = v
}

// GetIncludedVhosts returns the IncludedVhosts field value
func (o *Plan) GetIncludedVhosts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IncludedVhosts
}

// GetIncludedVhostsOk returns a tuple with the IncludedVhosts field value
// and a boolean to check if the value has been set.
func (o *Plan) GetIncludedVhostsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedVhosts, true
}

// SetIncludedVhosts sets field value
func (o *Plan) SetIncludedVhosts(v int32) {
	o.IncludedVhosts = v
}

// GetComplianceDashboardAccess returns the ComplianceDashboardAccess field value
func (o *Plan) GetComplianceDashboardAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ComplianceDashboardAccess
}

// GetComplianceDashboardAccessOk returns a tuple with the ComplianceDashboardAccess field value
// and a boolean to check if the value has been set.
func (o *Plan) GetComplianceDashboardAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComplianceDashboardAccess, true
}

// SetComplianceDashboardAccess sets field value
func (o *Plan) SetComplianceDashboardAccess(v bool) {
	o.ComplianceDashboardAccess = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Plan) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Plan) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Plan) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Plan) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Plan) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Plan) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Plan) GetLinks() PlanLinks {
	if o == nil || IsNil(o.Links) {
		var ret PlanLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetLinksOk() (*PlanLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Plan) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given PlanLinks and assigns it to the Links field.
func (o *Plan) SetLinks(v PlanLinks) {
	o.Links = &v
}

func (o Plan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Plan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["container_memory_limit_mb"] = o.ContainerMemoryLimitMb
	toSerialize["cpu_allowed_profiles"] = o.CpuAllowedProfiles
	toSerialize["disk_limit_gb"] = o.DiskLimitGb
	toSerialize["ephemeral_session_limit"] = o.EphemeralSessionLimit
	toSerialize["environment_limit"] = o.EnvironmentLimit
	toSerialize["vhost_limit"] = o.VhostLimit
	toSerialize["cost_cents"] = o.CostCents
	toSerialize["included_container_mb"] = o.IncludedContainerMb
	toSerialize["included_disk_gb"] = o.IncludedDiskGb
	toSerialize["included_vhosts"] = o.IncludedVhosts
	toSerialize["compliance_dashboard_access"] = o.ComplianceDashboardAccess
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Plan) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"container_memory_limit_mb",
		"cpu_allowed_profiles",
		"disk_limit_gb",
		"ephemeral_session_limit",
		"environment_limit",
		"vhost_limit",
		"cost_cents",
		"included_container_mb",
		"included_disk_gb",
		"included_vhosts",
		"compliance_dashboard_access",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlan := _Plan{}

	err = json.Unmarshal(data, &varPlan)

	if err != nil {
		return err
	}

	*o = Plan(varPlan)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "container_memory_limit_mb")
		delete(additionalProperties, "cpu_allowed_profiles")
		delete(additionalProperties, "disk_limit_gb")
		delete(additionalProperties, "ephemeral_session_limit")
		delete(additionalProperties, "environment_limit")
		delete(additionalProperties, "vhost_limit")
		delete(additionalProperties, "cost_cents")
		delete(additionalProperties, "included_container_mb")
		delete(additionalProperties, "included_disk_gb")
		delete(additionalProperties, "included_vhosts")
		delete(additionalProperties, "compliance_dashboard_access")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePlan struct {
	value *Plan
	isSet bool
}

func (v NullablePlan) Get() *Plan {
	return v.value
}

func (v *NullablePlan) Set(val *Plan) {
	v.value = val
	v.isSet = true
}

func (v NullablePlan) IsSet() bool {
	return v.isSet
}

func (v *NullablePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlan(val *Plan) *NullablePlan {
	return &NullablePlan{value: val, isSet: true}
}

func (v NullablePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


