/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListLlmIntegrations200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLlmIntegrations200ResponseEmbedded{}

// ListLlmIntegrations200ResponseEmbedded struct for ListLlmIntegrations200ResponseEmbedded
type ListLlmIntegrations200ResponseEmbedded struct {
	LlmIntegrations []LlmIntegration `json:"llm_integrations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListLlmIntegrations200ResponseEmbedded ListLlmIntegrations200ResponseEmbedded

// NewListLlmIntegrations200ResponseEmbedded instantiates a new ListLlmIntegrations200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLlmIntegrations200ResponseEmbedded() *ListLlmIntegrations200ResponseEmbedded {
	this := ListLlmIntegrations200ResponseEmbedded{}
	return &this
}

// NewListLlmIntegrations200ResponseEmbeddedWithDefaults instantiates a new ListLlmIntegrations200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLlmIntegrations200ResponseEmbeddedWithDefaults() *ListLlmIntegrations200ResponseEmbedded {
	this := ListLlmIntegrations200ResponseEmbedded{}
	return &this
}

// GetLlmIntegrations returns the LlmIntegrations field value if set, zero value otherwise.
func (o *ListLlmIntegrations200ResponseEmbedded) GetLlmIntegrations() []LlmIntegration {
	if o == nil || IsNil(o.LlmIntegrations) {
		var ret []LlmIntegration
		return ret
	}
	return o.LlmIntegrations
}

// GetLlmIntegrationsOk returns a tuple with the LlmIntegrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLlmIntegrations200ResponseEmbedded) GetLlmIntegrationsOk() ([]LlmIntegration, bool) {
	if o == nil || IsNil(o.LlmIntegrations) {
		return nil, false
	}
	return o.LlmIntegrations, true
}

// HasLlmIntegrations returns a boolean if a field has been set.
func (o *ListLlmIntegrations200ResponseEmbedded) HasLlmIntegrations() bool {
	if o != nil && !IsNil(o.LlmIntegrations) {
		return true
	}

	return false
}

// SetLlmIntegrations gets a reference to the given []LlmIntegration and assigns it to the LlmIntegrations field.
func (o *ListLlmIntegrations200ResponseEmbedded) SetLlmIntegrations(v []LlmIntegration) {
	o.LlmIntegrations = v
}

func (o ListLlmIntegrations200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLlmIntegrations200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LlmIntegrations) {
		toSerialize["llm_integrations"] = o.LlmIntegrations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListLlmIntegrations200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListLlmIntegrations200ResponseEmbedded := _ListLlmIntegrations200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListLlmIntegrations200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListLlmIntegrations200ResponseEmbedded(varListLlmIntegrations200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "llm_integrations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListLlmIntegrations200ResponseEmbedded struct {
	value *ListLlmIntegrations200ResponseEmbedded
	isSet bool
}

func (v NullableListLlmIntegrations200ResponseEmbedded) Get() *ListLlmIntegrations200ResponseEmbedded {
	return v.value
}

func (v *NullableListLlmIntegrations200ResponseEmbedded) Set(val *ListLlmIntegrations200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListLlmIntegrations200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListLlmIntegrations200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLlmIntegrations200ResponseEmbedded(val *ListLlmIntegrations200ResponseEmbedded) *NullableListLlmIntegrations200ResponseEmbedded {
	return &NullableListLlmIntegrations200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListLlmIntegrations200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLlmIntegrations200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


