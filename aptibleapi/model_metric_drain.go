/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the MetricDrain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricDrain{}

// MetricDrain struct for MetricDrain
type MetricDrain struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	Handle string `json:"handle"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	Status string `json:"status"`
	DrainType string `json:"drain_type"`
	DrainConfiguration MetricDrainDrainConfiguration `json:"drain_configuration"`
	AggregatorCaCertificate NullableString `json:"aggregator_ca_certificate"`
	AggregatorCaPrivateKeyBlob NullableString `json:"aggregator_ca_private_key_blob"`
	AggregatorHost NullableString `json:"aggregator_host"`
	AggregatorPortMapping [][]int32 `json:"aggregator_port_mapping"`
	AggregatorInstanceId NullableString `json:"aggregator_instance_id"`
	AggregatorDockerName NullableString `json:"aggregator_docker_name"`
	AggregatorAllocation []string `json:"aggregator_allocation"`
	Links *MetricDrainLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetricDrain MetricDrain

// NewMetricDrain instantiates a new MetricDrain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDrain(id int32, metaType string, handle string, createdAt string, updatedAt string, status string, drainType string, drainConfiguration MetricDrainDrainConfiguration, aggregatorCaCertificate NullableString, aggregatorCaPrivateKeyBlob NullableString, aggregatorHost NullableString, aggregatorPortMapping [][]int32, aggregatorInstanceId NullableString, aggregatorDockerName NullableString, aggregatorAllocation []string) *MetricDrain {
	this := MetricDrain{}
	this.Id = id
	this.MetaType = metaType
	this.Handle = handle
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Status = status
	this.DrainType = drainType
	this.DrainConfiguration = drainConfiguration
	this.AggregatorCaCertificate = aggregatorCaCertificate
	this.AggregatorCaPrivateKeyBlob = aggregatorCaPrivateKeyBlob
	this.AggregatorHost = aggregatorHost
	this.AggregatorPortMapping = aggregatorPortMapping
	this.AggregatorInstanceId = aggregatorInstanceId
	this.AggregatorDockerName = aggregatorDockerName
	this.AggregatorAllocation = aggregatorAllocation
	return &this
}

// NewMetricDrainWithDefaults instantiates a new MetricDrain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDrainWithDefaults() *MetricDrain {
	this := MetricDrain{}
	return &this
}

// GetId returns the Id field value
func (o *MetricDrain) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MetricDrain) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *MetricDrain) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *MetricDrain) SetMetaType(v string) {
	o.MetaType = v
}

// GetHandle returns the Handle field value
func (o *MetricDrain) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *MetricDrain) SetHandle(v string) {
	o.Handle = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *MetricDrain) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MetricDrain) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *MetricDrain) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *MetricDrain) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetStatus returns the Status field value
func (o *MetricDrain) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MetricDrain) SetStatus(v string) {
	o.Status = v
}

// GetDrainType returns the DrainType field value
func (o *MetricDrain) GetDrainType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DrainType
}

// GetDrainTypeOk returns a tuple with the DrainType field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetDrainTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DrainType, true
}

// SetDrainType sets field value
func (o *MetricDrain) SetDrainType(v string) {
	o.DrainType = v
}

// GetDrainConfiguration returns the DrainConfiguration field value
func (o *MetricDrain) GetDrainConfiguration() MetricDrainDrainConfiguration {
	if o == nil {
		var ret MetricDrainDrainConfiguration
		return ret
	}

	return o.DrainConfiguration
}

// GetDrainConfigurationOk returns a tuple with the DrainConfiguration field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetDrainConfigurationOk() (*MetricDrainDrainConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DrainConfiguration, true
}

// SetDrainConfiguration sets field value
func (o *MetricDrain) SetDrainConfiguration(v MetricDrainDrainConfiguration) {
	o.DrainConfiguration = v
}

// GetAggregatorCaCertificate returns the AggregatorCaCertificate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetricDrain) GetAggregatorCaCertificate() string {
	if o == nil || o.AggregatorCaCertificate.Get() == nil {
		var ret string
		return ret
	}

	return *o.AggregatorCaCertificate.Get()
}

// GetAggregatorCaCertificateOk returns a tuple with the AggregatorCaCertificate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricDrain) GetAggregatorCaCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorCaCertificate.Get(), o.AggregatorCaCertificate.IsSet()
}

// SetAggregatorCaCertificate sets field value
func (o *MetricDrain) SetAggregatorCaCertificate(v string) {
	o.AggregatorCaCertificate.Set(&v)
}

// GetAggregatorCaPrivateKeyBlob returns the AggregatorCaPrivateKeyBlob field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetricDrain) GetAggregatorCaPrivateKeyBlob() string {
	if o == nil || o.AggregatorCaPrivateKeyBlob.Get() == nil {
		var ret string
		return ret
	}

	return *o.AggregatorCaPrivateKeyBlob.Get()
}

// GetAggregatorCaPrivateKeyBlobOk returns a tuple with the AggregatorCaPrivateKeyBlob field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricDrain) GetAggregatorCaPrivateKeyBlobOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorCaPrivateKeyBlob.Get(), o.AggregatorCaPrivateKeyBlob.IsSet()
}

// SetAggregatorCaPrivateKeyBlob sets field value
func (o *MetricDrain) SetAggregatorCaPrivateKeyBlob(v string) {
	o.AggregatorCaPrivateKeyBlob.Set(&v)
}

// GetAggregatorHost returns the AggregatorHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetricDrain) GetAggregatorHost() string {
	if o == nil || o.AggregatorHost.Get() == nil {
		var ret string
		return ret
	}

	return *o.AggregatorHost.Get()
}

// GetAggregatorHostOk returns a tuple with the AggregatorHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricDrain) GetAggregatorHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorHost.Get(), o.AggregatorHost.IsSet()
}

// SetAggregatorHost sets field value
func (o *MetricDrain) SetAggregatorHost(v string) {
	o.AggregatorHost.Set(&v)
}

// GetAggregatorPortMapping returns the AggregatorPortMapping field value
func (o *MetricDrain) GetAggregatorPortMapping() [][]int32 {
	if o == nil {
		var ret [][]int32
		return ret
	}

	return o.AggregatorPortMapping
}

// GetAggregatorPortMappingOk returns a tuple with the AggregatorPortMapping field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetAggregatorPortMappingOk() ([][]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorPortMapping, true
}

// SetAggregatorPortMapping sets field value
func (o *MetricDrain) SetAggregatorPortMapping(v [][]int32) {
	o.AggregatorPortMapping = v
}

// GetAggregatorInstanceId returns the AggregatorInstanceId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetricDrain) GetAggregatorInstanceId() string {
	if o == nil || o.AggregatorInstanceId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AggregatorInstanceId.Get()
}

// GetAggregatorInstanceIdOk returns a tuple with the AggregatorInstanceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricDrain) GetAggregatorInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorInstanceId.Get(), o.AggregatorInstanceId.IsSet()
}

// SetAggregatorInstanceId sets field value
func (o *MetricDrain) SetAggregatorInstanceId(v string) {
	o.AggregatorInstanceId.Set(&v)
}

// GetAggregatorDockerName returns the AggregatorDockerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetricDrain) GetAggregatorDockerName() string {
	if o == nil || o.AggregatorDockerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.AggregatorDockerName.Get()
}

// GetAggregatorDockerNameOk returns a tuple with the AggregatorDockerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricDrain) GetAggregatorDockerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorDockerName.Get(), o.AggregatorDockerName.IsSet()
}

// SetAggregatorDockerName sets field value
func (o *MetricDrain) SetAggregatorDockerName(v string) {
	o.AggregatorDockerName.Set(&v)
}

// GetAggregatorAllocation returns the AggregatorAllocation field value
func (o *MetricDrain) GetAggregatorAllocation() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AggregatorAllocation
}

// GetAggregatorAllocationOk returns a tuple with the AggregatorAllocation field value
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetAggregatorAllocationOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatorAllocation, true
}

// SetAggregatorAllocation sets field value
func (o *MetricDrain) SetAggregatorAllocation(v []string) {
	o.AggregatorAllocation = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MetricDrain) GetLinks() MetricDrainLinks {
	if o == nil || IsNil(o.Links) {
		var ret MetricDrainLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrain) GetLinksOk() (*MetricDrainLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MetricDrain) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given MetricDrainLinks and assigns it to the Links field.
func (o *MetricDrain) SetLinks(v MetricDrainLinks) {
	o.Links = &v
}

func (o MetricDrain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricDrain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["handle"] = o.Handle
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["status"] = o.Status
	toSerialize["drain_type"] = o.DrainType
	toSerialize["drain_configuration"] = o.DrainConfiguration
	toSerialize["aggregator_ca_certificate"] = o.AggregatorCaCertificate.Get()
	toSerialize["aggregator_ca_private_key_blob"] = o.AggregatorCaPrivateKeyBlob.Get()
	toSerialize["aggregator_host"] = o.AggregatorHost.Get()
	toSerialize["aggregator_port_mapping"] = o.AggregatorPortMapping
	toSerialize["aggregator_instance_id"] = o.AggregatorInstanceId.Get()
	toSerialize["aggregator_docker_name"] = o.AggregatorDockerName.Get()
	toSerialize["aggregator_allocation"] = o.AggregatorAllocation
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetricDrain) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"handle",
		"created_at",
		"updated_at",
		"status",
		"drain_type",
		"drain_configuration",
		"aggregator_ca_certificate",
		"aggregator_ca_private_key_blob",
		"aggregator_host",
		"aggregator_port_mapping",
		"aggregator_instance_id",
		"aggregator_docker_name",
		"aggregator_allocation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricDrain := _MetricDrain{}

	err = json.Unmarshal(data, &varMetricDrain)

	if err != nil {
		return err
	}

	*o = MetricDrain(varMetricDrain)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "status")
		delete(additionalProperties, "drain_type")
		delete(additionalProperties, "drain_configuration")
		delete(additionalProperties, "aggregator_ca_certificate")
		delete(additionalProperties, "aggregator_ca_private_key_blob")
		delete(additionalProperties, "aggregator_host")
		delete(additionalProperties, "aggregator_port_mapping")
		delete(additionalProperties, "aggregator_instance_id")
		delete(additionalProperties, "aggregator_docker_name")
		delete(additionalProperties, "aggregator_allocation")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetricDrain struct {
	value *MetricDrain
	isSet bool
}

func (v NullableMetricDrain) Get() *MetricDrain {
	return v.value
}

func (v *NullableMetricDrain) Set(val *MetricDrain) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDrain) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDrain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDrain(val *MetricDrain) *NullableMetricDrain {
	return &NullableMetricDrain{value: val, isSet: true}
}

func (v NullableMetricDrain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDrain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


