/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListCertificatesForAccount200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCertificatesForAccount200ResponseEmbedded{}

// ListCertificatesForAccount200ResponseEmbedded struct for ListCertificatesForAccount200ResponseEmbedded
type ListCertificatesForAccount200ResponseEmbedded struct {
	Certificates []Certificate `json:"certificates,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListCertificatesForAccount200ResponseEmbedded ListCertificatesForAccount200ResponseEmbedded

// NewListCertificatesForAccount200ResponseEmbedded instantiates a new ListCertificatesForAccount200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCertificatesForAccount200ResponseEmbedded() *ListCertificatesForAccount200ResponseEmbedded {
	this := ListCertificatesForAccount200ResponseEmbedded{}
	return &this
}

// NewListCertificatesForAccount200ResponseEmbeddedWithDefaults instantiates a new ListCertificatesForAccount200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCertificatesForAccount200ResponseEmbeddedWithDefaults() *ListCertificatesForAccount200ResponseEmbedded {
	this := ListCertificatesForAccount200ResponseEmbedded{}
	return &this
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *ListCertificatesForAccount200ResponseEmbedded) GetCertificates() []Certificate {
	if o == nil || IsNil(o.Certificates) {
		var ret []Certificate
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCertificatesForAccount200ResponseEmbedded) GetCertificatesOk() ([]Certificate, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *ListCertificatesForAccount200ResponseEmbedded) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []Certificate and assigns it to the Certificates field.
func (o *ListCertificatesForAccount200ResponseEmbedded) SetCertificates(v []Certificate) {
	o.Certificates = v
}

func (o ListCertificatesForAccount200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCertificatesForAccount200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListCertificatesForAccount200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListCertificatesForAccount200ResponseEmbedded := _ListCertificatesForAccount200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListCertificatesForAccount200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListCertificatesForAccount200ResponseEmbedded(varListCertificatesForAccount200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certificates")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListCertificatesForAccount200ResponseEmbedded struct {
	value *ListCertificatesForAccount200ResponseEmbedded
	isSet bool
}

func (v NullableListCertificatesForAccount200ResponseEmbedded) Get() *ListCertificatesForAccount200ResponseEmbedded {
	return v.value
}

func (v *NullableListCertificatesForAccount200ResponseEmbedded) Set(val *ListCertificatesForAccount200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListCertificatesForAccount200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListCertificatesForAccount200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCertificatesForAccount200ResponseEmbedded(val *ListCertificatesForAccount200ResponseEmbedded) *NullableListCertificatesForAccount200ResponseEmbedded {
	return &NullableListCertificatesForAccount200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListCertificatesForAccount200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCertificatesForAccount200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


