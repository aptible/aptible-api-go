/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListVpcPeersForStack200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVpcPeersForStack200ResponseEmbedded{}

// ListVpcPeersForStack200ResponseEmbedded struct for ListVpcPeersForStack200ResponseEmbedded
type ListVpcPeersForStack200ResponseEmbedded struct {
	VpcPeers []VpcPeer `json:"vpc_peers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListVpcPeersForStack200ResponseEmbedded ListVpcPeersForStack200ResponseEmbedded

// NewListVpcPeersForStack200ResponseEmbedded instantiates a new ListVpcPeersForStack200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVpcPeersForStack200ResponseEmbedded() *ListVpcPeersForStack200ResponseEmbedded {
	this := ListVpcPeersForStack200ResponseEmbedded{}
	return &this
}

// NewListVpcPeersForStack200ResponseEmbeddedWithDefaults instantiates a new ListVpcPeersForStack200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVpcPeersForStack200ResponseEmbeddedWithDefaults() *ListVpcPeersForStack200ResponseEmbedded {
	this := ListVpcPeersForStack200ResponseEmbedded{}
	return &this
}

// GetVpcPeers returns the VpcPeers field value if set, zero value otherwise.
func (o *ListVpcPeersForStack200ResponseEmbedded) GetVpcPeers() []VpcPeer {
	if o == nil || IsNil(o.VpcPeers) {
		var ret []VpcPeer
		return ret
	}
	return o.VpcPeers
}

// GetVpcPeersOk returns a tuple with the VpcPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVpcPeersForStack200ResponseEmbedded) GetVpcPeersOk() ([]VpcPeer, bool) {
	if o == nil || IsNil(o.VpcPeers) {
		return nil, false
	}
	return o.VpcPeers, true
}

// HasVpcPeers returns a boolean if a field has been set.
func (o *ListVpcPeersForStack200ResponseEmbedded) HasVpcPeers() bool {
	if o != nil && !IsNil(o.VpcPeers) {
		return true
	}

	return false
}

// SetVpcPeers gets a reference to the given []VpcPeer and assigns it to the VpcPeers field.
func (o *ListVpcPeersForStack200ResponseEmbedded) SetVpcPeers(v []VpcPeer) {
	o.VpcPeers = v
}

func (o ListVpcPeersForStack200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVpcPeersForStack200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VpcPeers) {
		toSerialize["vpc_peers"] = o.VpcPeers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListVpcPeersForStack200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListVpcPeersForStack200ResponseEmbedded := _ListVpcPeersForStack200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListVpcPeersForStack200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListVpcPeersForStack200ResponseEmbedded(varListVpcPeersForStack200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vpc_peers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListVpcPeersForStack200ResponseEmbedded struct {
	value *ListVpcPeersForStack200ResponseEmbedded
	isSet bool
}

func (v NullableListVpcPeersForStack200ResponseEmbedded) Get() *ListVpcPeersForStack200ResponseEmbedded {
	return v.value
}

func (v *NullableListVpcPeersForStack200ResponseEmbedded) Set(val *ListVpcPeersForStack200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListVpcPeersForStack200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListVpcPeersForStack200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVpcPeersForStack200ResponseEmbedded(val *ListVpcPeersForStack200ResponseEmbedded) *NullableListVpcPeersForStack200ResponseEmbedded {
	return &NullableListVpcPeersForStack200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListVpcPeersForStack200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVpcPeersForStack200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


