/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the OperationLinksEphemeralSessions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperationLinksEphemeralSessions{}

// OperationLinksEphemeralSessions struct for OperationLinksEphemeralSessions
type OperationLinksEphemeralSessions struct {
	Href *string `json:"href,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OperationLinksEphemeralSessions OperationLinksEphemeralSessions

// NewOperationLinksEphemeralSessions instantiates a new OperationLinksEphemeralSessions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationLinksEphemeralSessions() *OperationLinksEphemeralSessions {
	this := OperationLinksEphemeralSessions{}
	return &this
}

// NewOperationLinksEphemeralSessionsWithDefaults instantiates a new OperationLinksEphemeralSessions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationLinksEphemeralSessionsWithDefaults() *OperationLinksEphemeralSessions {
	this := OperationLinksEphemeralSessions{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *OperationLinksEphemeralSessions) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationLinksEphemeralSessions) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *OperationLinksEphemeralSessions) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *OperationLinksEphemeralSessions) SetHref(v string) {
	o.Href = &v
}

func (o OperationLinksEphemeralSessions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperationLinksEphemeralSessions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OperationLinksEphemeralSessions) UnmarshalJSON(data []byte) (err error) {
	varOperationLinksEphemeralSessions := _OperationLinksEphemeralSessions{}

	err = json.Unmarshal(data, &varOperationLinksEphemeralSessions)

	if err != nil {
		return err
	}

	*o = OperationLinksEphemeralSessions(varOperationLinksEphemeralSessions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "href")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOperationLinksEphemeralSessions struct {
	value *OperationLinksEphemeralSessions
	isSet bool
}

func (v NullableOperationLinksEphemeralSessions) Get() *OperationLinksEphemeralSessions {
	return v.value
}

func (v *NullableOperationLinksEphemeralSessions) Set(val *OperationLinksEphemeralSessions) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationLinksEphemeralSessions) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationLinksEphemeralSessions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationLinksEphemeralSessions(val *OperationLinksEphemeralSessions) *NullableOperationLinksEphemeralSessions {
	return &NullableOperationLinksEphemeralSessions{value: val, isSet: true}
}

func (v NullableOperationLinksEphemeralSessions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationLinksEphemeralSessions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


