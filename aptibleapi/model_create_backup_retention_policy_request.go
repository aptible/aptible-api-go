/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the CreateBackupRetentionPolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBackupRetentionPolicyRequest{}

// CreateBackupRetentionPolicyRequest struct for CreateBackupRetentionPolicyRequest
type CreateBackupRetentionPolicyRequest struct {
	Daily *int32 `json:"daily,omitempty"`
	Monthly *int32 `json:"monthly,omitempty"`
	Yearly *int32 `json:"yearly,omitempty"`
	KeepFinal *bool `json:"keep_final,omitempty"`
	MakeCopy *bool `json:"make_copy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateBackupRetentionPolicyRequest CreateBackupRetentionPolicyRequest

// NewCreateBackupRetentionPolicyRequest instantiates a new CreateBackupRetentionPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBackupRetentionPolicyRequest() *CreateBackupRetentionPolicyRequest {
	this := CreateBackupRetentionPolicyRequest{}
	return &this
}

// NewCreateBackupRetentionPolicyRequestWithDefaults instantiates a new CreateBackupRetentionPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBackupRetentionPolicyRequestWithDefaults() *CreateBackupRetentionPolicyRequest {
	this := CreateBackupRetentionPolicyRequest{}
	return &this
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *CreateBackupRetentionPolicyRequest) GetDaily() int32 {
	if o == nil || IsNil(o.Daily) {
		var ret int32
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupRetentionPolicyRequest) GetDailyOk() (*int32, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *CreateBackupRetentionPolicyRequest) HasDaily() bool {
	if o != nil && !IsNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given int32 and assigns it to the Daily field.
func (o *CreateBackupRetentionPolicyRequest) SetDaily(v int32) {
	o.Daily = &v
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *CreateBackupRetentionPolicyRequest) GetMonthly() int32 {
	if o == nil || IsNil(o.Monthly) {
		var ret int32
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupRetentionPolicyRequest) GetMonthlyOk() (*int32, bool) {
	if o == nil || IsNil(o.Monthly) {
		return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *CreateBackupRetentionPolicyRequest) HasMonthly() bool {
	if o != nil && !IsNil(o.Monthly) {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given int32 and assigns it to the Monthly field.
func (o *CreateBackupRetentionPolicyRequest) SetMonthly(v int32) {
	o.Monthly = &v
}

// GetYearly returns the Yearly field value if set, zero value otherwise.
func (o *CreateBackupRetentionPolicyRequest) GetYearly() int32 {
	if o == nil || IsNil(o.Yearly) {
		var ret int32
		return ret
	}
	return *o.Yearly
}

// GetYearlyOk returns a tuple with the Yearly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupRetentionPolicyRequest) GetYearlyOk() (*int32, bool) {
	if o == nil || IsNil(o.Yearly) {
		return nil, false
	}
	return o.Yearly, true
}

// HasYearly returns a boolean if a field has been set.
func (o *CreateBackupRetentionPolicyRequest) HasYearly() bool {
	if o != nil && !IsNil(o.Yearly) {
		return true
	}

	return false
}

// SetYearly gets a reference to the given int32 and assigns it to the Yearly field.
func (o *CreateBackupRetentionPolicyRequest) SetYearly(v int32) {
	o.Yearly = &v
}

// GetKeepFinal returns the KeepFinal field value if set, zero value otherwise.
func (o *CreateBackupRetentionPolicyRequest) GetKeepFinal() bool {
	if o == nil || IsNil(o.KeepFinal) {
		var ret bool
		return ret
	}
	return *o.KeepFinal
}

// GetKeepFinalOk returns a tuple with the KeepFinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupRetentionPolicyRequest) GetKeepFinalOk() (*bool, bool) {
	if o == nil || IsNil(o.KeepFinal) {
		return nil, false
	}
	return o.KeepFinal, true
}

// HasKeepFinal returns a boolean if a field has been set.
func (o *CreateBackupRetentionPolicyRequest) HasKeepFinal() bool {
	if o != nil && !IsNil(o.KeepFinal) {
		return true
	}

	return false
}

// SetKeepFinal gets a reference to the given bool and assigns it to the KeepFinal field.
func (o *CreateBackupRetentionPolicyRequest) SetKeepFinal(v bool) {
	o.KeepFinal = &v
}

// GetMakeCopy returns the MakeCopy field value if set, zero value otherwise.
func (o *CreateBackupRetentionPolicyRequest) GetMakeCopy() bool {
	if o == nil || IsNil(o.MakeCopy) {
		var ret bool
		return ret
	}
	return *o.MakeCopy
}

// GetMakeCopyOk returns a tuple with the MakeCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupRetentionPolicyRequest) GetMakeCopyOk() (*bool, bool) {
	if o == nil || IsNil(o.MakeCopy) {
		return nil, false
	}
	return o.MakeCopy, true
}

// HasMakeCopy returns a boolean if a field has been set.
func (o *CreateBackupRetentionPolicyRequest) HasMakeCopy() bool {
	if o != nil && !IsNil(o.MakeCopy) {
		return true
	}

	return false
}

// SetMakeCopy gets a reference to the given bool and assigns it to the MakeCopy field.
func (o *CreateBackupRetentionPolicyRequest) SetMakeCopy(v bool) {
	o.MakeCopy = &v
}

func (o CreateBackupRetentionPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBackupRetentionPolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.Monthly) {
		toSerialize["monthly"] = o.Monthly
	}
	if !IsNil(o.Yearly) {
		toSerialize["yearly"] = o.Yearly
	}
	if !IsNil(o.KeepFinal) {
		toSerialize["keep_final"] = o.KeepFinal
	}
	if !IsNil(o.MakeCopy) {
		toSerialize["make_copy"] = o.MakeCopy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateBackupRetentionPolicyRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateBackupRetentionPolicyRequest := _CreateBackupRetentionPolicyRequest{}

	err = json.Unmarshal(data, &varCreateBackupRetentionPolicyRequest)

	if err != nil {
		return err
	}

	*o = CreateBackupRetentionPolicyRequest(varCreateBackupRetentionPolicyRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "daily")
		delete(additionalProperties, "monthly")
		delete(additionalProperties, "yearly")
		delete(additionalProperties, "keep_final")
		delete(additionalProperties, "make_copy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateBackupRetentionPolicyRequest struct {
	value *CreateBackupRetentionPolicyRequest
	isSet bool
}

func (v NullableCreateBackupRetentionPolicyRequest) Get() *CreateBackupRetentionPolicyRequest {
	return v.value
}

func (v *NullableCreateBackupRetentionPolicyRequest) Set(val *CreateBackupRetentionPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBackupRetentionPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBackupRetentionPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBackupRetentionPolicyRequest(val *CreateBackupRetentionPolicyRequest) *NullableCreateBackupRetentionPolicyRequest {
	return &NullableCreateBackupRetentionPolicyRequest{value: val, isSet: true}
}

func (v NullableCreateBackupRetentionPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBackupRetentionPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


