/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAccountRequest{}

// CreateAccountRequest struct for CreateAccountRequest
type CreateAccountRequest struct {
	Type string `json:"type"`
	Handle string `json:"handle"`
	OrganizationId string `json:"organization_id"`
	Name *string `json:"name,omitempty"`
	StackId *int32 `json:"stack_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAccountRequest CreateAccountRequest

// NewCreateAccountRequest instantiates a new CreateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccountRequest(type_ string, handle string, organizationId string) *CreateAccountRequest {
	this := CreateAccountRequest{}
	this.Type = type_
	this.Handle = handle
	this.OrganizationId = organizationId
	return &this
}

// NewCreateAccountRequestWithDefaults instantiates a new CreateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccountRequestWithDefaults() *CreateAccountRequest {
	this := CreateAccountRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateAccountRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateAccountRequest) SetType(v string) {
	o.Type = v
}

// GetHandle returns the Handle field value
func (o *CreateAccountRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *CreateAccountRequest) SetHandle(v string) {
	o.Handle = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateAccountRequest) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateAccountRequest) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateAccountRequest) SetName(v string) {
	o.Name = &v
}

// GetStackId returns the StackId field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetStackId() int32 {
	if o == nil || IsNil(o.StackId) {
		var ret int32
		return ret
	}
	return *o.StackId
}

// GetStackIdOk returns a tuple with the StackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetStackIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StackId) {
		return nil, false
	}
	return o.StackId, true
}

// HasStackId returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasStackId() bool {
	if o != nil && !IsNil(o.StackId) {
		return true
	}

	return false
}

// SetStackId gets a reference to the given int32 and assigns it to the StackId field.
func (o *CreateAccountRequest) SetStackId(v int32) {
	o.StackId = &v
}

func (o CreateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["handle"] = o.Handle
	toSerialize["organization_id"] = o.OrganizationId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StackId) {
		toSerialize["stack_id"] = o.StackId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"handle",
		"organization_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAccountRequest := _CreateAccountRequest{}

	err = json.Unmarshal(data, &varCreateAccountRequest)

	if err != nil {
		return err
	}

	*o = CreateAccountRequest(varCreateAccountRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "stack_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAccountRequest struct {
	value *CreateAccountRequest
	isSet bool
}

func (v NullableCreateAccountRequest) Get() *CreateAccountRequest {
	return v.value
}

func (v *NullableCreateAccountRequest) Set(val *CreateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccountRequest(val *CreateAccountRequest) *NullableCreateAccountRequest {
	return &NullableCreateAccountRequest{value: val, isSet: true}
}

func (v NullableCreateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


