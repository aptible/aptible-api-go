/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GetRoot200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoot200Response{}

// GetRoot200Response struct for GetRoot200Response
type GetRoot200Response struct {
	Links GetRoot200ResponseLinks `json:"_links"`
	AdditionalProperties map[string]interface{}
}

type _GetRoot200Response GetRoot200Response

// NewGetRoot200Response instantiates a new GetRoot200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoot200Response(links GetRoot200ResponseLinks) *GetRoot200Response {
	this := GetRoot200Response{}
	this.Links = links
	return &this
}

// NewGetRoot200ResponseWithDefaults instantiates a new GetRoot200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoot200ResponseWithDefaults() *GetRoot200Response {
	this := GetRoot200Response{}
	return &this
}

// GetLinks returns the Links field value
func (o *GetRoot200Response) GetLinks() GetRoot200ResponseLinks {
	if o == nil {
		var ret GetRoot200ResponseLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *GetRoot200Response) GetLinksOk() (*GetRoot200ResponseLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *GetRoot200Response) SetLinks(v GetRoot200ResponseLinks) {
	o.Links = v
}

func (o GetRoot200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoot200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_links"] = o.Links

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetRoot200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"_links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRoot200Response := _GetRoot200Response{}

	err = json.Unmarshal(data, &varGetRoot200Response)

	if err != nil {
		return err
	}

	*o = GetRoot200Response(varGetRoot200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetRoot200Response struct {
	value *GetRoot200Response
	isSet bool
}

func (v NullableGetRoot200Response) Get() *GetRoot200Response {
	return v.value
}

func (v *NullableGetRoot200Response) Set(val *GetRoot200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoot200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoot200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoot200Response(val *GetRoot200Response) *NullableGetRoot200Response {
	return &NullableGetRoot200Response{value: val, isSet: true}
}

func (v NullableGetRoot200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoot200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


