/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the StackLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StackLinks{}

// StackLinks struct for StackLinks
type StackLinks struct {
	Organization *StackLinksOrganization `json:"organization,omitempty"`
	Accounts *StackLinksAccounts `json:"accounts,omitempty"`
	IntrusionDetectionReports *StackLinksIntrusionDetectionReports `json:"intrusion_detection_reports,omitempty"`
	VpnTunnels *StackLinksVpnTunnels `json:"vpn_tunnels,omitempty"`
	VpcPeers *StackLinksVpcPeers `json:"vpc_peers,omitempty"`
	Self *StackLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StackLinks StackLinks

// NewStackLinks instantiates a new StackLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackLinks() *StackLinks {
	this := StackLinks{}
	return &this
}

// NewStackLinksWithDefaults instantiates a new StackLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackLinksWithDefaults() *StackLinks {
	this := StackLinks{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *StackLinks) GetOrganization() StackLinksOrganization {
	if o == nil || IsNil(o.Organization) {
		var ret StackLinksOrganization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackLinks) GetOrganizationOk() (*StackLinksOrganization, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *StackLinks) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given StackLinksOrganization and assigns it to the Organization field.
func (o *StackLinks) SetOrganization(v StackLinksOrganization) {
	o.Organization = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *StackLinks) GetAccounts() StackLinksAccounts {
	if o == nil || IsNil(o.Accounts) {
		var ret StackLinksAccounts
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackLinks) GetAccountsOk() (*StackLinksAccounts, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *StackLinks) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given StackLinksAccounts and assigns it to the Accounts field.
func (o *StackLinks) SetAccounts(v StackLinksAccounts) {
	o.Accounts = &v
}

// GetIntrusionDetectionReports returns the IntrusionDetectionReports field value if set, zero value otherwise.
func (o *StackLinks) GetIntrusionDetectionReports() StackLinksIntrusionDetectionReports {
	if o == nil || IsNil(o.IntrusionDetectionReports) {
		var ret StackLinksIntrusionDetectionReports
		return ret
	}
	return *o.IntrusionDetectionReports
}

// GetIntrusionDetectionReportsOk returns a tuple with the IntrusionDetectionReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackLinks) GetIntrusionDetectionReportsOk() (*StackLinksIntrusionDetectionReports, bool) {
	if o == nil || IsNil(o.IntrusionDetectionReports) {
		return nil, false
	}
	return o.IntrusionDetectionReports, true
}

// HasIntrusionDetectionReports returns a boolean if a field has been set.
func (o *StackLinks) HasIntrusionDetectionReports() bool {
	if o != nil && !IsNil(o.IntrusionDetectionReports) {
		return true
	}

	return false
}

// SetIntrusionDetectionReports gets a reference to the given StackLinksIntrusionDetectionReports and assigns it to the IntrusionDetectionReports field.
func (o *StackLinks) SetIntrusionDetectionReports(v StackLinksIntrusionDetectionReports) {
	o.IntrusionDetectionReports = &v
}

// GetVpnTunnels returns the VpnTunnels field value if set, zero value otherwise.
func (o *StackLinks) GetVpnTunnels() StackLinksVpnTunnels {
	if o == nil || IsNil(o.VpnTunnels) {
		var ret StackLinksVpnTunnels
		return ret
	}
	return *o.VpnTunnels
}

// GetVpnTunnelsOk returns a tuple with the VpnTunnels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackLinks) GetVpnTunnelsOk() (*StackLinksVpnTunnels, bool) {
	if o == nil || IsNil(o.VpnTunnels) {
		return nil, false
	}
	return o.VpnTunnels, true
}

// HasVpnTunnels returns a boolean if a field has been set.
func (o *StackLinks) HasVpnTunnels() bool {
	if o != nil && !IsNil(o.VpnTunnels) {
		return true
	}

	return false
}

// SetVpnTunnels gets a reference to the given StackLinksVpnTunnels and assigns it to the VpnTunnels field.
func (o *StackLinks) SetVpnTunnels(v StackLinksVpnTunnels) {
	o.VpnTunnels = &v
}

// GetVpcPeers returns the VpcPeers field value if set, zero value otherwise.
func (o *StackLinks) GetVpcPeers() StackLinksVpcPeers {
	if o == nil || IsNil(o.VpcPeers) {
		var ret StackLinksVpcPeers
		return ret
	}
	return *o.VpcPeers
}

// GetVpcPeersOk returns a tuple with the VpcPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackLinks) GetVpcPeersOk() (*StackLinksVpcPeers, bool) {
	if o == nil || IsNil(o.VpcPeers) {
		return nil, false
	}
	return o.VpcPeers, true
}

// HasVpcPeers returns a boolean if a field has been set.
func (o *StackLinks) HasVpcPeers() bool {
	if o != nil && !IsNil(o.VpcPeers) {
		return true
	}

	return false
}

// SetVpcPeers gets a reference to the given StackLinksVpcPeers and assigns it to the VpcPeers field.
func (o *StackLinks) SetVpcPeers(v StackLinksVpcPeers) {
	o.VpcPeers = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *StackLinks) GetSelf() StackLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret StackLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackLinks) GetSelfOk() (*StackLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *StackLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given StackLinksSelf and assigns it to the Self field.
func (o *StackLinks) SetSelf(v StackLinksSelf) {
	o.Self = &v
}

func (o StackLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StackLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.IntrusionDetectionReports) {
		toSerialize["intrusion_detection_reports"] = o.IntrusionDetectionReports
	}
	if !IsNil(o.VpnTunnels) {
		toSerialize["vpn_tunnels"] = o.VpnTunnels
	}
	if !IsNil(o.VpcPeers) {
		toSerialize["vpc_peers"] = o.VpcPeers
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StackLinks) UnmarshalJSON(data []byte) (err error) {
	varStackLinks := _StackLinks{}

	err = json.Unmarshal(data, &varStackLinks)

	if err != nil {
		return err
	}

	*o = StackLinks(varStackLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "organization")
		delete(additionalProperties, "accounts")
		delete(additionalProperties, "intrusion_detection_reports")
		delete(additionalProperties, "vpn_tunnels")
		delete(additionalProperties, "vpc_peers")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStackLinks struct {
	value *StackLinks
	isSet bool
}

func (v NullableStackLinks) Get() *StackLinks {
	return v.value
}

func (v *NullableStackLinks) Set(val *StackLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableStackLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableStackLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackLinks(val *StackLinks) *NullableStackLinks {
	return &NullableStackLinks{value: val, isSet: true}
}

func (v NullableStackLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


