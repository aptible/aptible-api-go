/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Vhost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Vhost{}

// Vhost struct for Vhost
type Vhost struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	VirtualDomain string `json:"virtual_domain"`
	Type string `json:"type"`
	ElasticLoadBalancerName NullableString `json:"elastic_load_balancer_name"`
	ApplicationLoadBalancerArn NullableString `json:"application_load_balancer_arn"`
	SecurityGroupId NullableString `json:"security_group_id"`
	ExternalHost NullableString `json:"external_host"`
	ExternalHttpPort NullableInt32 `json:"external_http_port"`
	ExternalHttpsPort NullableInt32 `json:"external_https_port"`
	InternalHost NullableString `json:"internal_host"`
	InternalHttpPort NullableInt32 `json:"internal_http_port"`
	InternalHttpsPort NullableInt32 `json:"internal_https_port"`
	InternalHealthPort NullableInt32 `json:"internal_health_port"`
	DockerName NullableString `json:"docker_name"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	Status string `json:"status"`
	Platform string `json:"platform"`
	Default bool `json:"default"`
	Internal bool `json:"internal"`
	ContainerExposedPorts []int32 `json:"container_exposed_ports"`
	HostMappedPorts []int32 `json:"host_mapped_ports"`
	IpWhitelist []string `json:"ip_whitelist"`
	UserDomain NullableString `json:"user_domain"`
	Acme bool `json:"acme"`
	AcmeStatus NullableString `json:"acme_status"`
	AcmeDnsChallengeHost NullableString `json:"acme_dns_challenge_host"`
	ContainerPort NullableInt32 `json:"container_port"`
	ContainerPorts []int32 `json:"container_ports"`
	AcmeConfiguration NullableVhostAcmeConfiguration `json:"acme_configuration"`
	Shared NullableBool `json:"shared"`
	SharedFingerprint NullableString `json:"shared_fingerprint"`
	LoadBalancingAlgorithmType NullableString `json:"load_balancing_algorithm_type"`
	Links *VhostLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Vhost Vhost

// NewVhost instantiates a new Vhost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVhost(id int32, metaType string, virtualDomain string, type_ string, elasticLoadBalancerName NullableString, applicationLoadBalancerArn NullableString, securityGroupId NullableString, externalHost NullableString, externalHttpPort NullableInt32, externalHttpsPort NullableInt32, internalHost NullableString, internalHttpPort NullableInt32, internalHttpsPort NullableInt32, internalHealthPort NullableInt32, dockerName NullableString, createdAt string, updatedAt string, status string, platform string, default_ bool, internal bool, containerExposedPorts []int32, hostMappedPorts []int32, ipWhitelist []string, userDomain NullableString, acme bool, acmeStatus NullableString, acmeDnsChallengeHost NullableString, containerPort NullableInt32, containerPorts []int32, acmeConfiguration NullableVhostAcmeConfiguration, shared NullableBool, sharedFingerprint NullableString, loadBalancingAlgorithmType NullableString) *Vhost {
	this := Vhost{}
	this.Id = id
	this.MetaType = metaType
	this.VirtualDomain = virtualDomain
	this.Type = type_
	this.ElasticLoadBalancerName = elasticLoadBalancerName
	this.ApplicationLoadBalancerArn = applicationLoadBalancerArn
	this.SecurityGroupId = securityGroupId
	this.ExternalHost = externalHost
	this.ExternalHttpPort = externalHttpPort
	this.ExternalHttpsPort = externalHttpsPort
	this.InternalHost = internalHost
	this.InternalHttpPort = internalHttpPort
	this.InternalHttpsPort = internalHttpsPort
	this.InternalHealthPort = internalHealthPort
	this.DockerName = dockerName
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Status = status
	this.Platform = platform
	this.Default = default_
	this.Internal = internal
	this.ContainerExposedPorts = containerExposedPorts
	this.HostMappedPorts = hostMappedPorts
	this.IpWhitelist = ipWhitelist
	this.UserDomain = userDomain
	this.Acme = acme
	this.AcmeStatus = acmeStatus
	this.AcmeDnsChallengeHost = acmeDnsChallengeHost
	this.ContainerPort = containerPort
	this.ContainerPorts = containerPorts
	this.AcmeConfiguration = acmeConfiguration
	this.Shared = shared
	this.SharedFingerprint = sharedFingerprint
	this.LoadBalancingAlgorithmType = loadBalancingAlgorithmType
	return &this
}

// NewVhostWithDefaults instantiates a new Vhost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVhostWithDefaults() *Vhost {
	this := Vhost{}
	return &this
}

// GetId returns the Id field value
func (o *Vhost) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Vhost) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *Vhost) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Vhost) SetMetaType(v string) {
	o.MetaType = v
}

// GetVirtualDomain returns the VirtualDomain field value
func (o *Vhost) GetVirtualDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualDomain
}

// GetVirtualDomainOk returns a tuple with the VirtualDomain field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetVirtualDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualDomain, true
}

// SetVirtualDomain sets field value
func (o *Vhost) SetVirtualDomain(v string) {
	o.VirtualDomain = v
}

// GetType returns the Type field value
func (o *Vhost) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Vhost) SetType(v string) {
	o.Type = v
}

// GetElasticLoadBalancerName returns the ElasticLoadBalancerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetElasticLoadBalancerName() string {
	if o == nil || o.ElasticLoadBalancerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ElasticLoadBalancerName.Get()
}

// GetElasticLoadBalancerNameOk returns a tuple with the ElasticLoadBalancerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetElasticLoadBalancerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ElasticLoadBalancerName.Get(), o.ElasticLoadBalancerName.IsSet()
}

// SetElasticLoadBalancerName sets field value
func (o *Vhost) SetElasticLoadBalancerName(v string) {
	o.ElasticLoadBalancerName.Set(&v)
}

// GetApplicationLoadBalancerArn returns the ApplicationLoadBalancerArn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetApplicationLoadBalancerArn() string {
	if o == nil || o.ApplicationLoadBalancerArn.Get() == nil {
		var ret string
		return ret
	}

	return *o.ApplicationLoadBalancerArn.Get()
}

// GetApplicationLoadBalancerArnOk returns a tuple with the ApplicationLoadBalancerArn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetApplicationLoadBalancerArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationLoadBalancerArn.Get(), o.ApplicationLoadBalancerArn.IsSet()
}

// SetApplicationLoadBalancerArn sets field value
func (o *Vhost) SetApplicationLoadBalancerArn(v string) {
	o.ApplicationLoadBalancerArn.Set(&v)
}

// GetSecurityGroupId returns the SecurityGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SecurityGroupId.Get()
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityGroupId.Get(), o.SecurityGroupId.IsSet()
}

// SetSecurityGroupId sets field value
func (o *Vhost) SetSecurityGroupId(v string) {
	o.SecurityGroupId.Set(&v)
}

// GetExternalHost returns the ExternalHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetExternalHost() string {
	if o == nil || o.ExternalHost.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalHost.Get()
}

// GetExternalHostOk returns a tuple with the ExternalHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetExternalHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalHost.Get(), o.ExternalHost.IsSet()
}

// SetExternalHost sets field value
func (o *Vhost) SetExternalHost(v string) {
	o.ExternalHost.Set(&v)
}

// GetExternalHttpPort returns the ExternalHttpPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Vhost) GetExternalHttpPort() int32 {
	if o == nil || o.ExternalHttpPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ExternalHttpPort.Get()
}

// GetExternalHttpPortOk returns a tuple with the ExternalHttpPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetExternalHttpPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalHttpPort.Get(), o.ExternalHttpPort.IsSet()
}

// SetExternalHttpPort sets field value
func (o *Vhost) SetExternalHttpPort(v int32) {
	o.ExternalHttpPort.Set(&v)
}

// GetExternalHttpsPort returns the ExternalHttpsPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Vhost) GetExternalHttpsPort() int32 {
	if o == nil || o.ExternalHttpsPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ExternalHttpsPort.Get()
}

// GetExternalHttpsPortOk returns a tuple with the ExternalHttpsPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetExternalHttpsPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalHttpsPort.Get(), o.ExternalHttpsPort.IsSet()
}

// SetExternalHttpsPort sets field value
func (o *Vhost) SetExternalHttpsPort(v int32) {
	o.ExternalHttpsPort.Set(&v)
}

// GetInternalHost returns the InternalHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetInternalHost() string {
	if o == nil || o.InternalHost.Get() == nil {
		var ret string
		return ret
	}

	return *o.InternalHost.Get()
}

// GetInternalHostOk returns a tuple with the InternalHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetInternalHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalHost.Get(), o.InternalHost.IsSet()
}

// SetInternalHost sets field value
func (o *Vhost) SetInternalHost(v string) {
	o.InternalHost.Set(&v)
}

// GetInternalHttpPort returns the InternalHttpPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Vhost) GetInternalHttpPort() int32 {
	if o == nil || o.InternalHttpPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.InternalHttpPort.Get()
}

// GetInternalHttpPortOk returns a tuple with the InternalHttpPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetInternalHttpPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalHttpPort.Get(), o.InternalHttpPort.IsSet()
}

// SetInternalHttpPort sets field value
func (o *Vhost) SetInternalHttpPort(v int32) {
	o.InternalHttpPort.Set(&v)
}

// GetInternalHttpsPort returns the InternalHttpsPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Vhost) GetInternalHttpsPort() int32 {
	if o == nil || o.InternalHttpsPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.InternalHttpsPort.Get()
}

// GetInternalHttpsPortOk returns a tuple with the InternalHttpsPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetInternalHttpsPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalHttpsPort.Get(), o.InternalHttpsPort.IsSet()
}

// SetInternalHttpsPort sets field value
func (o *Vhost) SetInternalHttpsPort(v int32) {
	o.InternalHttpsPort.Set(&v)
}

// GetInternalHealthPort returns the InternalHealthPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Vhost) GetInternalHealthPort() int32 {
	if o == nil || o.InternalHealthPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.InternalHealthPort.Get()
}

// GetInternalHealthPortOk returns a tuple with the InternalHealthPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetInternalHealthPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalHealthPort.Get(), o.InternalHealthPort.IsSet()
}

// SetInternalHealthPort sets field value
func (o *Vhost) SetInternalHealthPort(v int32) {
	o.InternalHealthPort.Set(&v)
}

// GetDockerName returns the DockerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetDockerName() string {
	if o == nil || o.DockerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DockerName.Get()
}

// GetDockerNameOk returns a tuple with the DockerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetDockerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DockerName.Get(), o.DockerName.IsSet()
}

// SetDockerName sets field value
func (o *Vhost) SetDockerName(v string) {
	o.DockerName.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *Vhost) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Vhost) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Vhost) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Vhost) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetStatus returns the Status field value
func (o *Vhost) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Vhost) SetStatus(v string) {
	o.Status = v
}

// GetPlatform returns the Platform field value
func (o *Vhost) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *Vhost) SetPlatform(v string) {
	o.Platform = v
}

// GetDefault returns the Default field value
func (o *Vhost) GetDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *Vhost) SetDefault(v bool) {
	o.Default = v
}

// GetInternal returns the Internal field value
func (o *Vhost) GetInternal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Internal
}

// GetInternalOk returns a tuple with the Internal field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetInternalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Internal, true
}

// SetInternal sets field value
func (o *Vhost) SetInternal(v bool) {
	o.Internal = v
}

// GetContainerExposedPorts returns the ContainerExposedPorts field value
// If the value is explicit nil, the zero value for []int32 will be returned
func (o *Vhost) GetContainerExposedPorts() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ContainerExposedPorts
}

// GetContainerExposedPortsOk returns a tuple with the ContainerExposedPorts field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetContainerExposedPortsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ContainerExposedPorts) {
		return nil, false
	}
	return o.ContainerExposedPorts, true
}

// SetContainerExposedPorts sets field value
func (o *Vhost) SetContainerExposedPorts(v []int32) {
	o.ContainerExposedPorts = v
}

// GetHostMappedPorts returns the HostMappedPorts field value
// If the value is explicit nil, the zero value for []int32 will be returned
func (o *Vhost) GetHostMappedPorts() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.HostMappedPorts
}

// GetHostMappedPortsOk returns a tuple with the HostMappedPorts field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetHostMappedPortsOk() ([]int32, bool) {
	if o == nil || IsNil(o.HostMappedPorts) {
		return nil, false
	}
	return o.HostMappedPorts, true
}

// SetHostMappedPorts sets field value
func (o *Vhost) SetHostMappedPorts(v []int32) {
	o.HostMappedPorts = v
}

// GetIpWhitelist returns the IpWhitelist field value
func (o *Vhost) GetIpWhitelist() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IpWhitelist
}

// GetIpWhitelistOk returns a tuple with the IpWhitelist field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetIpWhitelistOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpWhitelist, true
}

// SetIpWhitelist sets field value
func (o *Vhost) SetIpWhitelist(v []string) {
	o.IpWhitelist = v
}

// GetUserDomain returns the UserDomain field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetUserDomain() string {
	if o == nil || o.UserDomain.Get() == nil {
		var ret string
		return ret
	}

	return *o.UserDomain.Get()
}

// GetUserDomainOk returns a tuple with the UserDomain field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetUserDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDomain.Get(), o.UserDomain.IsSet()
}

// SetUserDomain sets field value
func (o *Vhost) SetUserDomain(v string) {
	o.UserDomain.Set(&v)
}

// GetAcme returns the Acme field value
func (o *Vhost) GetAcme() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Acme
}

// GetAcmeOk returns a tuple with the Acme field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetAcmeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Acme, true
}

// SetAcme sets field value
func (o *Vhost) SetAcme(v bool) {
	o.Acme = v
}

// GetAcmeStatus returns the AcmeStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetAcmeStatus() string {
	if o == nil || o.AcmeStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.AcmeStatus.Get()
}

// GetAcmeStatusOk returns a tuple with the AcmeStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetAcmeStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcmeStatus.Get(), o.AcmeStatus.IsSet()
}

// SetAcmeStatus sets field value
func (o *Vhost) SetAcmeStatus(v string) {
	o.AcmeStatus.Set(&v)
}

// GetAcmeDnsChallengeHost returns the AcmeDnsChallengeHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetAcmeDnsChallengeHost() string {
	if o == nil || o.AcmeDnsChallengeHost.Get() == nil {
		var ret string
		return ret
	}

	return *o.AcmeDnsChallengeHost.Get()
}

// GetAcmeDnsChallengeHostOk returns a tuple with the AcmeDnsChallengeHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetAcmeDnsChallengeHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcmeDnsChallengeHost.Get(), o.AcmeDnsChallengeHost.IsSet()
}

// SetAcmeDnsChallengeHost sets field value
func (o *Vhost) SetAcmeDnsChallengeHost(v string) {
	o.AcmeDnsChallengeHost.Set(&v)
}

// GetContainerPort returns the ContainerPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Vhost) GetContainerPort() int32 {
	if o == nil || o.ContainerPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ContainerPort.Get()
}

// GetContainerPortOk returns a tuple with the ContainerPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetContainerPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerPort.Get(), o.ContainerPort.IsSet()
}

// SetContainerPort sets field value
func (o *Vhost) SetContainerPort(v int32) {
	o.ContainerPort.Set(&v)
}

// GetContainerPorts returns the ContainerPorts field value
func (o *Vhost) GetContainerPorts() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ContainerPorts
}

// GetContainerPortsOk returns a tuple with the ContainerPorts field value
// and a boolean to check if the value has been set.
func (o *Vhost) GetContainerPortsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerPorts, true
}

// SetContainerPorts sets field value
func (o *Vhost) SetContainerPorts(v []int32) {
	o.ContainerPorts = v
}

// GetAcmeConfiguration returns the AcmeConfiguration field value
// If the value is explicit nil, the zero value for VhostAcmeConfiguration will be returned
func (o *Vhost) GetAcmeConfiguration() VhostAcmeConfiguration {
	if o == nil || o.AcmeConfiguration.Get() == nil {
		var ret VhostAcmeConfiguration
		return ret
	}

	return *o.AcmeConfiguration.Get()
}

// GetAcmeConfigurationOk returns a tuple with the AcmeConfiguration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetAcmeConfigurationOk() (*VhostAcmeConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcmeConfiguration.Get(), o.AcmeConfiguration.IsSet()
}

// SetAcmeConfiguration sets field value
func (o *Vhost) SetAcmeConfiguration(v VhostAcmeConfiguration) {
	o.AcmeConfiguration.Set(&v)
}

// GetShared returns the Shared field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Vhost) GetShared() bool {
	if o == nil || o.Shared.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Shared.Get()
}

// GetSharedOk returns a tuple with the Shared field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetSharedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Shared.Get(), o.Shared.IsSet()
}

// SetShared sets field value
func (o *Vhost) SetShared(v bool) {
	o.Shared.Set(&v)
}

// GetSharedFingerprint returns the SharedFingerprint field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetSharedFingerprint() string {
	if o == nil || o.SharedFingerprint.Get() == nil {
		var ret string
		return ret
	}

	return *o.SharedFingerprint.Get()
}

// GetSharedFingerprintOk returns a tuple with the SharedFingerprint field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetSharedFingerprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SharedFingerprint.Get(), o.SharedFingerprint.IsSet()
}

// SetSharedFingerprint sets field value
func (o *Vhost) SetSharedFingerprint(v string) {
	o.SharedFingerprint.Set(&v)
}

// GetLoadBalancingAlgorithmType returns the LoadBalancingAlgorithmType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Vhost) GetLoadBalancingAlgorithmType() string {
	if o == nil || o.LoadBalancingAlgorithmType.Get() == nil {
		var ret string
		return ret
	}

	return *o.LoadBalancingAlgorithmType.Get()
}

// GetLoadBalancingAlgorithmTypeOk returns a tuple with the LoadBalancingAlgorithmType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vhost) GetLoadBalancingAlgorithmTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoadBalancingAlgorithmType.Get(), o.LoadBalancingAlgorithmType.IsSet()
}

// SetLoadBalancingAlgorithmType sets field value
func (o *Vhost) SetLoadBalancingAlgorithmType(v string) {
	o.LoadBalancingAlgorithmType.Set(&v)
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Vhost) GetLinks() VhostLinks {
	if o == nil || IsNil(o.Links) {
		var ret VhostLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vhost) GetLinksOk() (*VhostLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Vhost) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given VhostLinks and assigns it to the Links field.
func (o *Vhost) SetLinks(v VhostLinks) {
	o.Links = &v
}

func (o Vhost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Vhost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["virtual_domain"] = o.VirtualDomain
	toSerialize["type"] = o.Type
	toSerialize["elastic_load_balancer_name"] = o.ElasticLoadBalancerName.Get()
	toSerialize["application_load_balancer_arn"] = o.ApplicationLoadBalancerArn.Get()
	toSerialize["security_group_id"] = o.SecurityGroupId.Get()
	toSerialize["external_host"] = o.ExternalHost.Get()
	toSerialize["external_http_port"] = o.ExternalHttpPort.Get()
	toSerialize["external_https_port"] = o.ExternalHttpsPort.Get()
	toSerialize["internal_host"] = o.InternalHost.Get()
	toSerialize["internal_http_port"] = o.InternalHttpPort.Get()
	toSerialize["internal_https_port"] = o.InternalHttpsPort.Get()
	toSerialize["internal_health_port"] = o.InternalHealthPort.Get()
	toSerialize["docker_name"] = o.DockerName.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["status"] = o.Status
	toSerialize["platform"] = o.Platform
	toSerialize["default"] = o.Default
	toSerialize["internal"] = o.Internal
	if o.ContainerExposedPorts != nil {
		toSerialize["container_exposed_ports"] = o.ContainerExposedPorts
	}
	if o.HostMappedPorts != nil {
		toSerialize["host_mapped_ports"] = o.HostMappedPorts
	}
	toSerialize["ip_whitelist"] = o.IpWhitelist
	toSerialize["user_domain"] = o.UserDomain.Get()
	toSerialize["acme"] = o.Acme
	toSerialize["acme_status"] = o.AcmeStatus.Get()
	toSerialize["acme_dns_challenge_host"] = o.AcmeDnsChallengeHost.Get()
	toSerialize["container_port"] = o.ContainerPort.Get()
	toSerialize["container_ports"] = o.ContainerPorts
	toSerialize["acme_configuration"] = o.AcmeConfiguration.Get()
	toSerialize["shared"] = o.Shared.Get()
	toSerialize["shared_fingerprint"] = o.SharedFingerprint.Get()
	toSerialize["load_balancing_algorithm_type"] = o.LoadBalancingAlgorithmType.Get()
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Vhost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"virtual_domain",
		"type",
		"elastic_load_balancer_name",
		"application_load_balancer_arn",
		"security_group_id",
		"external_host",
		"external_http_port",
		"external_https_port",
		"internal_host",
		"internal_http_port",
		"internal_https_port",
		"internal_health_port",
		"docker_name",
		"created_at",
		"updated_at",
		"status",
		"platform",
		"default",
		"internal",
		"container_exposed_ports",
		"host_mapped_ports",
		"ip_whitelist",
		"user_domain",
		"acme",
		"acme_status",
		"acme_dns_challenge_host",
		"container_port",
		"container_ports",
		"acme_configuration",
		"shared",
		"shared_fingerprint",
		"load_balancing_algorithm_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVhost := _Vhost{}

	err = json.Unmarshal(data, &varVhost)

	if err != nil {
		return err
	}

	*o = Vhost(varVhost)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "virtual_domain")
		delete(additionalProperties, "type")
		delete(additionalProperties, "elastic_load_balancer_name")
		delete(additionalProperties, "application_load_balancer_arn")
		delete(additionalProperties, "security_group_id")
		delete(additionalProperties, "external_host")
		delete(additionalProperties, "external_http_port")
		delete(additionalProperties, "external_https_port")
		delete(additionalProperties, "internal_host")
		delete(additionalProperties, "internal_http_port")
		delete(additionalProperties, "internal_https_port")
		delete(additionalProperties, "internal_health_port")
		delete(additionalProperties, "docker_name")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "status")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "default")
		delete(additionalProperties, "internal")
		delete(additionalProperties, "container_exposed_ports")
		delete(additionalProperties, "host_mapped_ports")
		delete(additionalProperties, "ip_whitelist")
		delete(additionalProperties, "user_domain")
		delete(additionalProperties, "acme")
		delete(additionalProperties, "acme_status")
		delete(additionalProperties, "acme_dns_challenge_host")
		delete(additionalProperties, "container_port")
		delete(additionalProperties, "container_ports")
		delete(additionalProperties, "acme_configuration")
		delete(additionalProperties, "shared")
		delete(additionalProperties, "shared_fingerprint")
		delete(additionalProperties, "load_balancing_algorithm_type")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVhost struct {
	value *Vhost
	isSet bool
}

func (v NullableVhost) Get() *Vhost {
	return v.value
}

func (v *NullableVhost) Set(val *Vhost) {
	v.value = val
	v.isSet = true
}

func (v NullableVhost) IsSet() bool {
	return v.isSet
}

func (v *NullableVhost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVhost(val *Vhost) *NullableVhost {
	return &NullableVhost{value: val, isSet: true}
}

func (v NullableVhost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVhost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


