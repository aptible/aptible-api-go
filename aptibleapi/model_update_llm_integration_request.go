/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the UpdateLlmIntegrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLlmIntegrationRequest{}

// UpdateLlmIntegrationRequest struct for UpdateLlmIntegrationRequest
type UpdateLlmIntegrationRequest struct {
	ApiKey *string `json:"api_key,omitempty"`
	BaseUrl *string `json:"base_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateLlmIntegrationRequest UpdateLlmIntegrationRequest

// NewUpdateLlmIntegrationRequest instantiates a new UpdateLlmIntegrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLlmIntegrationRequest() *UpdateLlmIntegrationRequest {
	this := UpdateLlmIntegrationRequest{}
	return &this
}

// NewUpdateLlmIntegrationRequestWithDefaults instantiates a new UpdateLlmIntegrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLlmIntegrationRequestWithDefaults() *UpdateLlmIntegrationRequest {
	this := UpdateLlmIntegrationRequest{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *UpdateLlmIntegrationRequest) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLlmIntegrationRequest) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *UpdateLlmIntegrationRequest) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *UpdateLlmIntegrationRequest) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *UpdateLlmIntegrationRequest) GetBaseUrl() string {
	if o == nil || IsNil(o.BaseUrl) {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLlmIntegrationRequest) GetBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BaseUrl) {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *UpdateLlmIntegrationRequest) HasBaseUrl() bool {
	if o != nil && !IsNil(o.BaseUrl) {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *UpdateLlmIntegrationRequest) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

func (o UpdateLlmIntegrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLlmIntegrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.BaseUrl) {
		toSerialize["base_url"] = o.BaseUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateLlmIntegrationRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateLlmIntegrationRequest := _UpdateLlmIntegrationRequest{}

	err = json.Unmarshal(data, &varUpdateLlmIntegrationRequest)

	if err != nil {
		return err
	}

	*o = UpdateLlmIntegrationRequest(varUpdateLlmIntegrationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "api_key")
		delete(additionalProperties, "base_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateLlmIntegrationRequest struct {
	value *UpdateLlmIntegrationRequest
	isSet bool
}

func (v NullableUpdateLlmIntegrationRequest) Get() *UpdateLlmIntegrationRequest {
	return v.value
}

func (v *NullableUpdateLlmIntegrationRequest) Set(val *UpdateLlmIntegrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLlmIntegrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLlmIntegrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLlmIntegrationRequest(val *UpdateLlmIntegrationRequest) *NullableUpdateLlmIntegrationRequest {
	return &NullableUpdateLlmIntegrationRequest{value: val, isSet: true}
}

func (v NullableUpdateLlmIntegrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLlmIntegrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


