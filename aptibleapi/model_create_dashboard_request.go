/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateDashboardRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDashboardRequest{}

// CreateDashboardRequest struct for CreateDashboardRequest
type CreateDashboardRequest struct {
	OrganizationId string `json:"organization_id"`
	ResourceId int32 `json:"resource_id"`
	ResourceType string `json:"resource_type"`
	Name string `json:"name"`
	ObservationTimestamp *string `json:"observation_timestamp,omitempty"`
	RangeBegin *string `json:"range_begin,omitempty"`
	RangeEnd *string `json:"range_end,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateDashboardRequest CreateDashboardRequest

// NewCreateDashboardRequest instantiates a new CreateDashboardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDashboardRequest(organizationId string, resourceId int32, resourceType string, name string) *CreateDashboardRequest {
	this := CreateDashboardRequest{}
	this.OrganizationId = organizationId
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.Name = name
	return &this
}

// NewCreateDashboardRequestWithDefaults instantiates a new CreateDashboardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDashboardRequestWithDefaults() *CreateDashboardRequest {
	this := CreateDashboardRequest{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateDashboardRequest) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateDashboardRequest) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetResourceId returns the ResourceId field value
func (o *CreateDashboardRequest) GetResourceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetResourceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *CreateDashboardRequest) SetResourceId(v int32) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *CreateDashboardRequest) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *CreateDashboardRequest) SetResourceType(v string) {
	o.ResourceType = v
}

// GetName returns the Name field value
func (o *CreateDashboardRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateDashboardRequest) SetName(v string) {
	o.Name = v
}

// GetObservationTimestamp returns the ObservationTimestamp field value if set, zero value otherwise.
func (o *CreateDashboardRequest) GetObservationTimestamp() string {
	if o == nil || IsNil(o.ObservationTimestamp) {
		var ret string
		return ret
	}
	return *o.ObservationTimestamp
}

// GetObservationTimestampOk returns a tuple with the ObservationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetObservationTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.ObservationTimestamp) {
		return nil, false
	}
	return o.ObservationTimestamp, true
}

// HasObservationTimestamp returns a boolean if a field has been set.
func (o *CreateDashboardRequest) HasObservationTimestamp() bool {
	if o != nil && !IsNil(o.ObservationTimestamp) {
		return true
	}

	return false
}

// SetObservationTimestamp gets a reference to the given string and assigns it to the ObservationTimestamp field.
func (o *CreateDashboardRequest) SetObservationTimestamp(v string) {
	o.ObservationTimestamp = &v
}

// GetRangeBegin returns the RangeBegin field value if set, zero value otherwise.
func (o *CreateDashboardRequest) GetRangeBegin() string {
	if o == nil || IsNil(o.RangeBegin) {
		var ret string
		return ret
	}
	return *o.RangeBegin
}

// GetRangeBeginOk returns a tuple with the RangeBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetRangeBeginOk() (*string, bool) {
	if o == nil || IsNil(o.RangeBegin) {
		return nil, false
	}
	return o.RangeBegin, true
}

// HasRangeBegin returns a boolean if a field has been set.
func (o *CreateDashboardRequest) HasRangeBegin() bool {
	if o != nil && !IsNil(o.RangeBegin) {
		return true
	}

	return false
}

// SetRangeBegin gets a reference to the given string and assigns it to the RangeBegin field.
func (o *CreateDashboardRequest) SetRangeBegin(v string) {
	o.RangeBegin = &v
}

// GetRangeEnd returns the RangeEnd field value if set, zero value otherwise.
func (o *CreateDashboardRequest) GetRangeEnd() string {
	if o == nil || IsNil(o.RangeEnd) {
		var ret string
		return ret
	}
	return *o.RangeEnd
}

// GetRangeEndOk returns a tuple with the RangeEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDashboardRequest) GetRangeEndOk() (*string, bool) {
	if o == nil || IsNil(o.RangeEnd) {
		return nil, false
	}
	return o.RangeEnd, true
}

// HasRangeEnd returns a boolean if a field has been set.
func (o *CreateDashboardRequest) HasRangeEnd() bool {
	if o != nil && !IsNil(o.RangeEnd) {
		return true
	}

	return false
}

// SetRangeEnd gets a reference to the given string and assigns it to the RangeEnd field.
func (o *CreateDashboardRequest) SetRangeEnd(v string) {
	o.RangeEnd = &v
}

func (o CreateDashboardRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDashboardRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["name"] = o.Name
	if !IsNil(o.ObservationTimestamp) {
		toSerialize["observation_timestamp"] = o.ObservationTimestamp
	}
	if !IsNil(o.RangeBegin) {
		toSerialize["range_begin"] = o.RangeBegin
	}
	if !IsNil(o.RangeEnd) {
		toSerialize["range_end"] = o.RangeEnd
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateDashboardRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organization_id",
		"resource_id",
		"resource_type",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDashboardRequest := _CreateDashboardRequest{}

	err = json.Unmarshal(data, &varCreateDashboardRequest)

	if err != nil {
		return err
	}

	*o = CreateDashboardRequest(varCreateDashboardRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "resource_id")
		delete(additionalProperties, "resource_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "observation_timestamp")
		delete(additionalProperties, "range_begin")
		delete(additionalProperties, "range_end")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateDashboardRequest struct {
	value *CreateDashboardRequest
	isSet bool
}

func (v NullableCreateDashboardRequest) Get() *CreateDashboardRequest {
	return v.value
}

func (v *NullableCreateDashboardRequest) Set(val *CreateDashboardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDashboardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDashboardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDashboardRequest(val *CreateDashboardRequest) *NullableCreateDashboardRequest {
	return &NullableCreateDashboardRequest{value: val, isSet: true}
}

func (v NullableCreateDashboardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDashboardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


