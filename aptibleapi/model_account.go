/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Account type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Account{}

// Account struct for Account
type Account struct {
	Id int32 `json:"id"`
	Type string `json:"type"`
	MetaType string `json:"_type"`
	Name NullableString `json:"name"`
	Handle string `json:"handle"`
	OnboardingStatus string `json:"onboarding_status"`
	Number string `json:"number"`
	Activated bool `json:"activated"`
	SyslogHost NullableString `json:"syslog_host"`
	SyslogPort NullableInt32 `json:"syslog_port"`
	BastionHost NullableString `json:"bastion_host"`
	BastionPort int32 `json:"bastion_port"`
	SshPortalPort NullableInt32 `json:"ssh_portal_port"`
	ContainerCount int32 `json:"container_count"`
	DomainCount int32 `json:"domain_count"`
	TotalDiskSize int32 `json:"total_disk_size"`
	TotalAppCount int32 `json:"total_app_count"`
	AppContainerCount int32 `json:"app_container_count"`
	DatabaseContainerCount int32 `json:"database_container_count"`
	TotalDatabaseCount int32 `json:"total_database_count"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	SweetnessStack NullableString `json:"sweetness_stack"`
	GentlemanjerryEndpoint NullableString `json:"gentlemanjerry_endpoint"`
	GentlemanjerryCertificate NullableString `json:"gentlemanjerry_certificate"`
	GentlemanjerryDockerName NullableString `json:"gentlemanjerry_docker_name"`
	GentlemanjerryInstanceId NullableString `json:"gentlemanjerry_instance_id"`
	SweetnessStackVersion NullableString `json:"sweetness_stack_version"`
	CaBody NullableString `json:"ca_body"`
	CaPrivateKey NullableString `json:"ca_private_key,omitempty"`
	Embedded AccountEmbedded `json:"_embedded"`
	Links *AccountLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Account Account

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount(id int32, type_ string, metaType string, name NullableString, handle string, onboardingStatus string, number string, activated bool, syslogHost NullableString, syslogPort NullableInt32, bastionHost NullableString, bastionPort int32, sshPortalPort NullableInt32, containerCount int32, domainCount int32, totalDiskSize int32, totalAppCount int32, appContainerCount int32, databaseContainerCount int32, totalDatabaseCount int32, createdAt string, updatedAt string, sweetnessStack NullableString, gentlemanjerryEndpoint NullableString, gentlemanjerryCertificate NullableString, gentlemanjerryDockerName NullableString, gentlemanjerryInstanceId NullableString, sweetnessStackVersion NullableString, caBody NullableString, embedded AccountEmbedded) *Account {
	this := Account{}
	this.Id = id
	this.Type = type_
	this.MetaType = metaType
	this.Name = name
	this.Handle = handle
	this.OnboardingStatus = onboardingStatus
	this.Number = number
	this.Activated = activated
	this.SyslogHost = syslogHost
	this.SyslogPort = syslogPort
	this.BastionHost = bastionHost
	this.BastionPort = bastionPort
	this.SshPortalPort = sshPortalPort
	this.ContainerCount = containerCount
	this.DomainCount = domainCount
	this.TotalDiskSize = totalDiskSize
	this.TotalAppCount = totalAppCount
	this.AppContainerCount = appContainerCount
	this.DatabaseContainerCount = databaseContainerCount
	this.TotalDatabaseCount = totalDatabaseCount
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.SweetnessStack = sweetnessStack
	this.GentlemanjerryEndpoint = gentlemanjerryEndpoint
	this.GentlemanjerryCertificate = gentlemanjerryCertificate
	this.GentlemanjerryDockerName = gentlemanjerryDockerName
	this.GentlemanjerryInstanceId = gentlemanjerryInstanceId
	this.SweetnessStackVersion = sweetnessStackVersion
	this.CaBody = caBody
	this.Embedded = embedded
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetId returns the Id field value
func (o *Account) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Account) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Account) SetId(v int32) {
	o.Id = v
}

// GetType returns the Type field value
func (o *Account) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Account) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Account) SetType(v string) {
	o.Type = v
}

// GetMetaType returns the MetaType field value
func (o *Account) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Account) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Account) SetMetaType(v string) {
	o.MetaType = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *Account) SetName(v string) {
	o.Name.Set(&v)
}

// GetHandle returns the Handle field value
func (o *Account) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *Account) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *Account) SetHandle(v string) {
	o.Handle = v
}

// GetOnboardingStatus returns the OnboardingStatus field value
func (o *Account) GetOnboardingStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OnboardingStatus
}

// GetOnboardingStatusOk returns a tuple with the OnboardingStatus field value
// and a boolean to check if the value has been set.
func (o *Account) GetOnboardingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnboardingStatus, true
}

// SetOnboardingStatus sets field value
func (o *Account) SetOnboardingStatus(v string) {
	o.OnboardingStatus = v
}

// GetNumber returns the Number field value
func (o *Account) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *Account) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *Account) SetNumber(v string) {
	o.Number = v
}

// GetActivated returns the Activated field value
func (o *Account) GetActivated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Activated
}

// GetActivatedOk returns a tuple with the Activated field value
// and a boolean to check if the value has been set.
func (o *Account) GetActivatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Activated, true
}

// SetActivated sets field value
func (o *Account) SetActivated(v bool) {
	o.Activated = v
}

// GetSyslogHost returns the SyslogHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetSyslogHost() string {
	if o == nil || o.SyslogHost.Get() == nil {
		var ret string
		return ret
	}

	return *o.SyslogHost.Get()
}

// GetSyslogHostOk returns a tuple with the SyslogHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetSyslogHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyslogHost.Get(), o.SyslogHost.IsSet()
}

// SetSyslogHost sets field value
func (o *Account) SetSyslogHost(v string) {
	o.SyslogHost.Set(&v)
}

// GetSyslogPort returns the SyslogPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Account) GetSyslogPort() int32 {
	if o == nil || o.SyslogPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SyslogPort.Get()
}

// GetSyslogPortOk returns a tuple with the SyslogPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetSyslogPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyslogPort.Get(), o.SyslogPort.IsSet()
}

// SetSyslogPort sets field value
func (o *Account) SetSyslogPort(v int32) {
	o.SyslogPort.Set(&v)
}

// GetBastionHost returns the BastionHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetBastionHost() string {
	if o == nil || o.BastionHost.Get() == nil {
		var ret string
		return ret
	}

	return *o.BastionHost.Get()
}

// GetBastionHostOk returns a tuple with the BastionHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetBastionHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BastionHost.Get(), o.BastionHost.IsSet()
}

// SetBastionHost sets field value
func (o *Account) SetBastionHost(v string) {
	o.BastionHost.Set(&v)
}

// GetBastionPort returns the BastionPort field value
func (o *Account) GetBastionPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BastionPort
}

// GetBastionPortOk returns a tuple with the BastionPort field value
// and a boolean to check if the value has been set.
func (o *Account) GetBastionPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BastionPort, true
}

// SetBastionPort sets field value
func (o *Account) SetBastionPort(v int32) {
	o.BastionPort = v
}

// GetSshPortalPort returns the SshPortalPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Account) GetSshPortalPort() int32 {
	if o == nil || o.SshPortalPort.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SshPortalPort.Get()
}

// GetSshPortalPortOk returns a tuple with the SshPortalPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetSshPortalPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshPortalPort.Get(), o.SshPortalPort.IsSet()
}

// SetSshPortalPort sets field value
func (o *Account) SetSshPortalPort(v int32) {
	o.SshPortalPort.Set(&v)
}

// GetContainerCount returns the ContainerCount field value
func (o *Account) GetContainerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContainerCount
}

// GetContainerCountOk returns a tuple with the ContainerCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetContainerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerCount, true
}

// SetContainerCount sets field value
func (o *Account) SetContainerCount(v int32) {
	o.ContainerCount = v
}

// GetDomainCount returns the DomainCount field value
func (o *Account) GetDomainCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DomainCount
}

// GetDomainCountOk returns a tuple with the DomainCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetDomainCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainCount, true
}

// SetDomainCount sets field value
func (o *Account) SetDomainCount(v int32) {
	o.DomainCount = v
}

// GetTotalDiskSize returns the TotalDiskSize field value
func (o *Account) GetTotalDiskSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalDiskSize
}

// GetTotalDiskSizeOk returns a tuple with the TotalDiskSize field value
// and a boolean to check if the value has been set.
func (o *Account) GetTotalDiskSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDiskSize, true
}

// SetTotalDiskSize sets field value
func (o *Account) SetTotalDiskSize(v int32) {
	o.TotalDiskSize = v
}

// GetTotalAppCount returns the TotalAppCount field value
func (o *Account) GetTotalAppCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAppCount
}

// GetTotalAppCountOk returns a tuple with the TotalAppCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetTotalAppCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAppCount, true
}

// SetTotalAppCount sets field value
func (o *Account) SetTotalAppCount(v int32) {
	o.TotalAppCount = v
}

// GetAppContainerCount returns the AppContainerCount field value
func (o *Account) GetAppContainerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppContainerCount
}

// GetAppContainerCountOk returns a tuple with the AppContainerCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetAppContainerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppContainerCount, true
}

// SetAppContainerCount sets field value
func (o *Account) SetAppContainerCount(v int32) {
	o.AppContainerCount = v
}

// GetDatabaseContainerCount returns the DatabaseContainerCount field value
func (o *Account) GetDatabaseContainerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DatabaseContainerCount
}

// GetDatabaseContainerCountOk returns a tuple with the DatabaseContainerCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetDatabaseContainerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseContainerCount, true
}

// SetDatabaseContainerCount sets field value
func (o *Account) SetDatabaseContainerCount(v int32) {
	o.DatabaseContainerCount = v
}

// GetTotalDatabaseCount returns the TotalDatabaseCount field value
func (o *Account) GetTotalDatabaseCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalDatabaseCount
}

// GetTotalDatabaseCountOk returns a tuple with the TotalDatabaseCount field value
// and a boolean to check if the value has been set.
func (o *Account) GetTotalDatabaseCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDatabaseCount, true
}

// SetTotalDatabaseCount sets field value
func (o *Account) SetTotalDatabaseCount(v int32) {
	o.TotalDatabaseCount = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Account) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Account) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Account) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Account) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Account) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Account) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetSweetnessStack returns the SweetnessStack field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetSweetnessStack() string {
	if o == nil || o.SweetnessStack.Get() == nil {
		var ret string
		return ret
	}

	return *o.SweetnessStack.Get()
}

// GetSweetnessStackOk returns a tuple with the SweetnessStack field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetSweetnessStackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SweetnessStack.Get(), o.SweetnessStack.IsSet()
}

// SetSweetnessStack sets field value
func (o *Account) SetSweetnessStack(v string) {
	o.SweetnessStack.Set(&v)
}

// GetGentlemanjerryEndpoint returns the GentlemanjerryEndpoint field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetGentlemanjerryEndpoint() string {
	if o == nil || o.GentlemanjerryEndpoint.Get() == nil {
		var ret string
		return ret
	}

	return *o.GentlemanjerryEndpoint.Get()
}

// GetGentlemanjerryEndpointOk returns a tuple with the GentlemanjerryEndpoint field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetGentlemanjerryEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GentlemanjerryEndpoint.Get(), o.GentlemanjerryEndpoint.IsSet()
}

// SetGentlemanjerryEndpoint sets field value
func (o *Account) SetGentlemanjerryEndpoint(v string) {
	o.GentlemanjerryEndpoint.Set(&v)
}

// GetGentlemanjerryCertificate returns the GentlemanjerryCertificate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetGentlemanjerryCertificate() string {
	if o == nil || o.GentlemanjerryCertificate.Get() == nil {
		var ret string
		return ret
	}

	return *o.GentlemanjerryCertificate.Get()
}

// GetGentlemanjerryCertificateOk returns a tuple with the GentlemanjerryCertificate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetGentlemanjerryCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GentlemanjerryCertificate.Get(), o.GentlemanjerryCertificate.IsSet()
}

// SetGentlemanjerryCertificate sets field value
func (o *Account) SetGentlemanjerryCertificate(v string) {
	o.GentlemanjerryCertificate.Set(&v)
}

// GetGentlemanjerryDockerName returns the GentlemanjerryDockerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetGentlemanjerryDockerName() string {
	if o == nil || o.GentlemanjerryDockerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.GentlemanjerryDockerName.Get()
}

// GetGentlemanjerryDockerNameOk returns a tuple with the GentlemanjerryDockerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetGentlemanjerryDockerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GentlemanjerryDockerName.Get(), o.GentlemanjerryDockerName.IsSet()
}

// SetGentlemanjerryDockerName sets field value
func (o *Account) SetGentlemanjerryDockerName(v string) {
	o.GentlemanjerryDockerName.Set(&v)
}

// GetGentlemanjerryInstanceId returns the GentlemanjerryInstanceId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetGentlemanjerryInstanceId() string {
	if o == nil || o.GentlemanjerryInstanceId.Get() == nil {
		var ret string
		return ret
	}

	return *o.GentlemanjerryInstanceId.Get()
}

// GetGentlemanjerryInstanceIdOk returns a tuple with the GentlemanjerryInstanceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetGentlemanjerryInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GentlemanjerryInstanceId.Get(), o.GentlemanjerryInstanceId.IsSet()
}

// SetGentlemanjerryInstanceId sets field value
func (o *Account) SetGentlemanjerryInstanceId(v string) {
	o.GentlemanjerryInstanceId.Set(&v)
}

// GetSweetnessStackVersion returns the SweetnessStackVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetSweetnessStackVersion() string {
	if o == nil || o.SweetnessStackVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.SweetnessStackVersion.Get()
}

// GetSweetnessStackVersionOk returns a tuple with the SweetnessStackVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetSweetnessStackVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SweetnessStackVersion.Get(), o.SweetnessStackVersion.IsSet()
}

// SetSweetnessStackVersion sets field value
func (o *Account) SetSweetnessStackVersion(v string) {
	o.SweetnessStackVersion.Set(&v)
}

// GetCaBody returns the CaBody field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetCaBody() string {
	if o == nil || o.CaBody.Get() == nil {
		var ret string
		return ret
	}

	return *o.CaBody.Get()
}

// GetCaBodyOk returns a tuple with the CaBody field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetCaBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaBody.Get(), o.CaBody.IsSet()
}

// SetCaBody sets field value
func (o *Account) SetCaBody(v string) {
	o.CaBody.Set(&v)
}

// GetCaPrivateKey returns the CaPrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetCaPrivateKey() string {
	if o == nil || IsNil(o.CaPrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.CaPrivateKey.Get()
}

// GetCaPrivateKeyOk returns a tuple with the CaPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetCaPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaPrivateKey.Get(), o.CaPrivateKey.IsSet()
}

// HasCaPrivateKey returns a boolean if a field has been set.
func (o *Account) HasCaPrivateKey() bool {
	if o != nil && o.CaPrivateKey.IsSet() {
		return true
	}

	return false
}

// SetCaPrivateKey gets a reference to the given NullableString and assigns it to the CaPrivateKey field.
func (o *Account) SetCaPrivateKey(v string) {
	o.CaPrivateKey.Set(&v)
}
// SetCaPrivateKeyNil sets the value for CaPrivateKey to be an explicit nil
func (o *Account) SetCaPrivateKeyNil() {
	o.CaPrivateKey.Set(nil)
}

// UnsetCaPrivateKey ensures that no value is present for CaPrivateKey, not even an explicit nil
func (o *Account) UnsetCaPrivateKey() {
	o.CaPrivateKey.Unset()
}

// GetEmbedded returns the Embedded field value
func (o *Account) GetEmbedded() AccountEmbedded {
	if o == nil {
		var ret AccountEmbedded
		return ret
	}

	return o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value
// and a boolean to check if the value has been set.
func (o *Account) GetEmbeddedOk() (*AccountEmbedded, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Embedded, true
}

// SetEmbedded sets field value
func (o *Account) SetEmbedded(v AccountEmbedded) {
	o.Embedded = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Account) GetLinks() AccountLinks {
	if o == nil || IsNil(o.Links) {
		var ret AccountLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetLinksOk() (*AccountLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Account) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AccountLinks and assigns it to the Links field.
func (o *Account) SetLinks(v AccountLinks) {
	o.Links = &v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Account) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["_type"] = o.MetaType
	toSerialize["name"] = o.Name.Get()
	toSerialize["handle"] = o.Handle
	toSerialize["onboarding_status"] = o.OnboardingStatus
	toSerialize["number"] = o.Number
	toSerialize["activated"] = o.Activated
	toSerialize["syslog_host"] = o.SyslogHost.Get()
	toSerialize["syslog_port"] = o.SyslogPort.Get()
	toSerialize["bastion_host"] = o.BastionHost.Get()
	toSerialize["bastion_port"] = o.BastionPort
	toSerialize["ssh_portal_port"] = o.SshPortalPort.Get()
	toSerialize["container_count"] = o.ContainerCount
	toSerialize["domain_count"] = o.DomainCount
	toSerialize["total_disk_size"] = o.TotalDiskSize
	toSerialize["total_app_count"] = o.TotalAppCount
	toSerialize["app_container_count"] = o.AppContainerCount
	toSerialize["database_container_count"] = o.DatabaseContainerCount
	toSerialize["total_database_count"] = o.TotalDatabaseCount
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["sweetness_stack"] = o.SweetnessStack.Get()
	toSerialize["gentlemanjerry_endpoint"] = o.GentlemanjerryEndpoint.Get()
	toSerialize["gentlemanjerry_certificate"] = o.GentlemanjerryCertificate.Get()
	toSerialize["gentlemanjerry_docker_name"] = o.GentlemanjerryDockerName.Get()
	toSerialize["gentlemanjerry_instance_id"] = o.GentlemanjerryInstanceId.Get()
	toSerialize["sweetness_stack_version"] = o.SweetnessStackVersion.Get()
	toSerialize["ca_body"] = o.CaBody.Get()
	if o.CaPrivateKey.IsSet() {
		toSerialize["ca_private_key"] = o.CaPrivateKey.Get()
	}
	toSerialize["_embedded"] = o.Embedded
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Account) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
		"_type",
		"name",
		"handle",
		"onboarding_status",
		"number",
		"activated",
		"syslog_host",
		"syslog_port",
		"bastion_host",
		"bastion_port",
		"ssh_portal_port",
		"container_count",
		"domain_count",
		"total_disk_size",
		"total_app_count",
		"app_container_count",
		"database_container_count",
		"total_database_count",
		"created_at",
		"updated_at",
		"sweetness_stack",
		"gentlemanjerry_endpoint",
		"gentlemanjerry_certificate",
		"gentlemanjerry_docker_name",
		"gentlemanjerry_instance_id",
		"sweetness_stack_version",
		"ca_body",
		"_embedded",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccount := _Account{}

	err = json.Unmarshal(data, &varAccount)

	if err != nil {
		return err
	}

	*o = Account(varAccount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "onboarding_status")
		delete(additionalProperties, "number")
		delete(additionalProperties, "activated")
		delete(additionalProperties, "syslog_host")
		delete(additionalProperties, "syslog_port")
		delete(additionalProperties, "bastion_host")
		delete(additionalProperties, "bastion_port")
		delete(additionalProperties, "ssh_portal_port")
		delete(additionalProperties, "container_count")
		delete(additionalProperties, "domain_count")
		delete(additionalProperties, "total_disk_size")
		delete(additionalProperties, "total_app_count")
		delete(additionalProperties, "app_container_count")
		delete(additionalProperties, "database_container_count")
		delete(additionalProperties, "total_database_count")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "sweetness_stack")
		delete(additionalProperties, "gentlemanjerry_endpoint")
		delete(additionalProperties, "gentlemanjerry_certificate")
		delete(additionalProperties, "gentlemanjerry_docker_name")
		delete(additionalProperties, "gentlemanjerry_instance_id")
		delete(additionalProperties, "sweetness_stack_version")
		delete(additionalProperties, "ca_body")
		delete(additionalProperties, "ca_private_key")
		delete(additionalProperties, "_embedded")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


