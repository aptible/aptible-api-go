/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the DatabaseImageLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseImageLinks{}

// DatabaseImageLinks struct for DatabaseImageLinks
type DatabaseImageLinks struct {
	Database *ListAccountsForStack200ResponseLinksStack `json:"database,omitempty"`
	Self *ListAccountsForStack200ResponseLinksStack `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DatabaseImageLinks DatabaseImageLinks

// NewDatabaseImageLinks instantiates a new DatabaseImageLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseImageLinks() *DatabaseImageLinks {
	this := DatabaseImageLinks{}
	return &this
}

// NewDatabaseImageLinksWithDefaults instantiates a new DatabaseImageLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseImageLinksWithDefaults() *DatabaseImageLinks {
	this := DatabaseImageLinks{}
	return &this
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *DatabaseImageLinks) GetDatabase() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Database) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseImageLinks) GetDatabaseOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *DatabaseImageLinks) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Database field.
func (o *DatabaseImageLinks) SetDatabase(v ListAccountsForStack200ResponseLinksStack) {
	o.Database = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *DatabaseImageLinks) GetSelf() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Self) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseImageLinks) GetSelfOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *DatabaseImageLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Self field.
func (o *DatabaseImageLinks) SetSelf(v ListAccountsForStack200ResponseLinksStack) {
	o.Self = &v
}

func (o DatabaseImageLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseImageLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DatabaseImageLinks) UnmarshalJSON(data []byte) (err error) {
	varDatabaseImageLinks := _DatabaseImageLinks{}

	err = json.Unmarshal(data, &varDatabaseImageLinks)

	if err != nil {
		return err
	}

	*o = DatabaseImageLinks(varDatabaseImageLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "database")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDatabaseImageLinks struct {
	value *DatabaseImageLinks
	isSet bool
}

func (v NullableDatabaseImageLinks) Get() *DatabaseImageLinks {
	return v.value
}

func (v *NullableDatabaseImageLinks) Set(val *DatabaseImageLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseImageLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseImageLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseImageLinks(val *DatabaseImageLinks) *NullableDatabaseImageLinks {
	return &NullableDatabaseImageLinks{value: val, isSet: true}
}

func (v NullableDatabaseImageLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseImageLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


