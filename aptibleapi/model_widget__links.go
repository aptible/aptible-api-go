/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the WidgetLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetLinks{}

// WidgetLinks struct for WidgetLinks
type WidgetLinks struct {
	Dashboard *ListAccountsForStack200ResponseLinksStack `json:"dashboard,omitempty"`
	Resource *ListAccountsForStack200ResponseLinksStack `json:"resource,omitempty"`
	Self *ListAccountsForStack200ResponseLinksStack `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WidgetLinks WidgetLinks

// NewWidgetLinks instantiates a new WidgetLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetLinks() *WidgetLinks {
	this := WidgetLinks{}
	return &this
}

// NewWidgetLinksWithDefaults instantiates a new WidgetLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetLinksWithDefaults() *WidgetLinks {
	this := WidgetLinks{}
	return &this
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *WidgetLinks) GetDashboard() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Dashboard) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetLinks) GetDashboardOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Dashboard) {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *WidgetLinks) HasDashboard() bool {
	if o != nil && !IsNil(o.Dashboard) {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Dashboard field.
func (o *WidgetLinks) SetDashboard(v ListAccountsForStack200ResponseLinksStack) {
	o.Dashboard = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *WidgetLinks) GetResource() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Resource) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetLinks) GetResourceOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *WidgetLinks) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Resource field.
func (o *WidgetLinks) SetResource(v ListAccountsForStack200ResponseLinksStack) {
	o.Resource = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *WidgetLinks) GetSelf() ListAccountsForStack200ResponseLinksStack {
	if o == nil || IsNil(o.Self) {
		var ret ListAccountsForStack200ResponseLinksStack
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetLinks) GetSelfOk() (*ListAccountsForStack200ResponseLinksStack, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *WidgetLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ListAccountsForStack200ResponseLinksStack and assigns it to the Self field.
func (o *WidgetLinks) SetSelf(v ListAccountsForStack200ResponseLinksStack) {
	o.Self = &v
}

func (o WidgetLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dashboard) {
		toSerialize["dashboard"] = o.Dashboard
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WidgetLinks) UnmarshalJSON(data []byte) (err error) {
	varWidgetLinks := _WidgetLinks{}

	err = json.Unmarshal(data, &varWidgetLinks)

	if err != nil {
		return err
	}

	*o = WidgetLinks(varWidgetLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dashboard")
		delete(additionalProperties, "resource")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWidgetLinks struct {
	value *WidgetLinks
	isSet bool
}

func (v NullableWidgetLinks) Get() *WidgetLinks {
	return v.value
}

func (v *NullableWidgetLinks) Set(val *WidgetLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetLinks(val *WidgetLinks) *NullableWidgetLinks {
	return &NullableWidgetLinks{value: val, isSet: true}
}

func (v NullableWidgetLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


