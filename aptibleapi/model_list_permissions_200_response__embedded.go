/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListPermissions200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPermissions200ResponseEmbedded{}

// ListPermissions200ResponseEmbedded struct for ListPermissions200ResponseEmbedded
type ListPermissions200ResponseEmbedded struct {
	Permissions []Permission `json:"permissions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPermissions200ResponseEmbedded ListPermissions200ResponseEmbedded

// NewListPermissions200ResponseEmbedded instantiates a new ListPermissions200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPermissions200ResponseEmbedded() *ListPermissions200ResponseEmbedded {
	this := ListPermissions200ResponseEmbedded{}
	return &this
}

// NewListPermissions200ResponseEmbeddedWithDefaults instantiates a new ListPermissions200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPermissions200ResponseEmbeddedWithDefaults() *ListPermissions200ResponseEmbedded {
	this := ListPermissions200ResponseEmbedded{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ListPermissions200ResponseEmbedded) GetPermissions() []Permission {
	if o == nil || IsNil(o.Permissions) {
		var ret []Permission
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPermissions200ResponseEmbedded) GetPermissionsOk() ([]Permission, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ListPermissions200ResponseEmbedded) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Permission and assigns it to the Permissions field.
func (o *ListPermissions200ResponseEmbedded) SetPermissions(v []Permission) {
	o.Permissions = v
}

func (o ListPermissions200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPermissions200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPermissions200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListPermissions200ResponseEmbedded := _ListPermissions200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListPermissions200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListPermissions200ResponseEmbedded(varListPermissions200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "permissions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPermissions200ResponseEmbedded struct {
	value *ListPermissions200ResponseEmbedded
	isSet bool
}

func (v NullableListPermissions200ResponseEmbedded) Get() *ListPermissions200ResponseEmbedded {
	return v.value
}

func (v *NullableListPermissions200ResponseEmbedded) Set(val *ListPermissions200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListPermissions200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListPermissions200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPermissions200ResponseEmbedded(val *ListPermissions200ResponseEmbedded) *NullableListPermissions200ResponseEmbedded {
	return &NullableListPermissions200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListPermissions200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPermissions200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


