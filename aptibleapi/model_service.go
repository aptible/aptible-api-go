/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the Service type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Service{}

// Service struct for Service
type Service struct {
	Id int32 `json:"id"`
	MetaType string `json:"_type"`
	Handle string `json:"handle"`
	DockerRepo NullableString `json:"docker_repo"`
	DockerRef NullableString `json:"docker_ref"`
	ProcessType string `json:"process_type"`
	Command string `json:"command"`
	ContainerCount int32 `json:"container_count"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	ContainerMemoryLimitMb NullableInt32 `json:"container_memory_limit_mb"`
	InstanceClass string `json:"instance_class"`
	ForceZeroDowntime bool `json:"force_zero_downtime"`
	NaiveHealthCheck bool `json:"naive_health_check"`
	StopTimeout NullableInt32 `json:"stop_timeout"`
	Links *ServiceLinks `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Service Service

// NewService instantiates a new Service object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewService(id int32, metaType string, handle string, dockerRepo NullableString, dockerRef NullableString, processType string, command string, containerCount int32, createdAt string, updatedAt string, containerMemoryLimitMb NullableInt32, instanceClass string, forceZeroDowntime bool, naiveHealthCheck bool, stopTimeout NullableInt32) *Service {
	this := Service{}
	this.Id = id
	this.MetaType = metaType
	this.Handle = handle
	this.DockerRepo = dockerRepo
	this.DockerRef = dockerRef
	this.ProcessType = processType
	this.Command = command
	this.ContainerCount = containerCount
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ContainerMemoryLimitMb = containerMemoryLimitMb
	this.InstanceClass = instanceClass
	this.ForceZeroDowntime = forceZeroDowntime
	this.NaiveHealthCheck = naiveHealthCheck
	this.StopTimeout = stopTimeout
	return &this
}

// NewServiceWithDefaults instantiates a new Service object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceWithDefaults() *Service {
	this := Service{}
	return &this
}

// GetId returns the Id field value
func (o *Service) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Service) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Service) SetId(v int32) {
	o.Id = v
}

// GetMetaType returns the MetaType field value
func (o *Service) GetMetaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaType
}

// GetMetaTypeOk returns a tuple with the MetaType field value
// and a boolean to check if the value has been set.
func (o *Service) GetMetaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaType, true
}

// SetMetaType sets field value
func (o *Service) SetMetaType(v string) {
	o.MetaType = v
}

// GetHandle returns the Handle field value
func (o *Service) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *Service) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *Service) SetHandle(v string) {
	o.Handle = v
}

// GetDockerRepo returns the DockerRepo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Service) GetDockerRepo() string {
	if o == nil || o.DockerRepo.Get() == nil {
		var ret string
		return ret
	}

	return *o.DockerRepo.Get()
}

// GetDockerRepoOk returns a tuple with the DockerRepo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Service) GetDockerRepoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DockerRepo.Get(), o.DockerRepo.IsSet()
}

// SetDockerRepo sets field value
func (o *Service) SetDockerRepo(v string) {
	o.DockerRepo.Set(&v)
}

// GetDockerRef returns the DockerRef field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Service) GetDockerRef() string {
	if o == nil || o.DockerRef.Get() == nil {
		var ret string
		return ret
	}

	return *o.DockerRef.Get()
}

// GetDockerRefOk returns a tuple with the DockerRef field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Service) GetDockerRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DockerRef.Get(), o.DockerRef.IsSet()
}

// SetDockerRef sets field value
func (o *Service) SetDockerRef(v string) {
	o.DockerRef.Set(&v)
}

// GetProcessType returns the ProcessType field value
func (o *Service) GetProcessType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessType
}

// GetProcessTypeOk returns a tuple with the ProcessType field value
// and a boolean to check if the value has been set.
func (o *Service) GetProcessTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessType, true
}

// SetProcessType sets field value
func (o *Service) SetProcessType(v string) {
	o.ProcessType = v
}

// GetCommand returns the Command field value
func (o *Service) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *Service) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *Service) SetCommand(v string) {
	o.Command = v
}

// GetContainerCount returns the ContainerCount field value
func (o *Service) GetContainerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContainerCount
}

// GetContainerCountOk returns a tuple with the ContainerCount field value
// and a boolean to check if the value has been set.
func (o *Service) GetContainerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerCount, true
}

// SetContainerCount sets field value
func (o *Service) SetContainerCount(v int32) {
	o.ContainerCount = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Service) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Service) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Service) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Service) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Service) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Service) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetContainerMemoryLimitMb returns the ContainerMemoryLimitMb field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Service) GetContainerMemoryLimitMb() int32 {
	if o == nil || o.ContainerMemoryLimitMb.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ContainerMemoryLimitMb.Get()
}

// GetContainerMemoryLimitMbOk returns a tuple with the ContainerMemoryLimitMb field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Service) GetContainerMemoryLimitMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerMemoryLimitMb.Get(), o.ContainerMemoryLimitMb.IsSet()
}

// SetContainerMemoryLimitMb sets field value
func (o *Service) SetContainerMemoryLimitMb(v int32) {
	o.ContainerMemoryLimitMb.Set(&v)
}

// GetInstanceClass returns the InstanceClass field value
func (o *Service) GetInstanceClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceClass
}

// GetInstanceClassOk returns a tuple with the InstanceClass field value
// and a boolean to check if the value has been set.
func (o *Service) GetInstanceClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceClass, true
}

// SetInstanceClass sets field value
func (o *Service) SetInstanceClass(v string) {
	o.InstanceClass = v
}

// GetForceZeroDowntime returns the ForceZeroDowntime field value
func (o *Service) GetForceZeroDowntime() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ForceZeroDowntime
}

// GetForceZeroDowntimeOk returns a tuple with the ForceZeroDowntime field value
// and a boolean to check if the value has been set.
func (o *Service) GetForceZeroDowntimeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForceZeroDowntime, true
}

// SetForceZeroDowntime sets field value
func (o *Service) SetForceZeroDowntime(v bool) {
	o.ForceZeroDowntime = v
}

// GetNaiveHealthCheck returns the NaiveHealthCheck field value
func (o *Service) GetNaiveHealthCheck() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.NaiveHealthCheck
}

// GetNaiveHealthCheckOk returns a tuple with the NaiveHealthCheck field value
// and a boolean to check if the value has been set.
func (o *Service) GetNaiveHealthCheckOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NaiveHealthCheck, true
}

// SetNaiveHealthCheck sets field value
func (o *Service) SetNaiveHealthCheck(v bool) {
	o.NaiveHealthCheck = v
}

// GetStopTimeout returns the StopTimeout field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Service) GetStopTimeout() int32 {
	if o == nil || o.StopTimeout.Get() == nil {
		var ret int32
		return ret
	}

	return *o.StopTimeout.Get()
}

// GetStopTimeoutOk returns a tuple with the StopTimeout field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Service) GetStopTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StopTimeout.Get(), o.StopTimeout.IsSet()
}

// SetStopTimeout sets field value
func (o *Service) SetStopTimeout(v int32) {
	o.StopTimeout.Set(&v)
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Service) GetLinks() ServiceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ServiceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetLinksOk() (*ServiceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Service) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ServiceLinks and assigns it to the Links field.
func (o *Service) SetLinks(v ServiceLinks) {
	o.Links = &v
}

func (o Service) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Service) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["_type"] = o.MetaType
	toSerialize["handle"] = o.Handle
	toSerialize["docker_repo"] = o.DockerRepo.Get()
	toSerialize["docker_ref"] = o.DockerRef.Get()
	toSerialize["process_type"] = o.ProcessType
	toSerialize["command"] = o.Command
	toSerialize["container_count"] = o.ContainerCount
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["container_memory_limit_mb"] = o.ContainerMemoryLimitMb.Get()
	toSerialize["instance_class"] = o.InstanceClass
	toSerialize["force_zero_downtime"] = o.ForceZeroDowntime
	toSerialize["naive_health_check"] = o.NaiveHealthCheck
	toSerialize["stop_timeout"] = o.StopTimeout.Get()
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Service) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"_type",
		"handle",
		"docker_repo",
		"docker_ref",
		"process_type",
		"command",
		"container_count",
		"created_at",
		"updated_at",
		"container_memory_limit_mb",
		"instance_class",
		"force_zero_downtime",
		"naive_health_check",
		"stop_timeout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varService := _Service{}

	err = json.Unmarshal(data, &varService)

	if err != nil {
		return err
	}

	*o = Service(varService)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "_type")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "docker_repo")
		delete(additionalProperties, "docker_ref")
		delete(additionalProperties, "process_type")
		delete(additionalProperties, "command")
		delete(additionalProperties, "container_count")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "container_memory_limit_mb")
		delete(additionalProperties, "instance_class")
		delete(additionalProperties, "force_zero_downtime")
		delete(additionalProperties, "naive_health_check")
		delete(additionalProperties, "stop_timeout")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableService struct {
	value *Service
	isSet bool
}

func (v NullableService) Get() *Service {
	return v.value
}

func (v *NullableService) Set(val *Service) {
	v.value = val
	v.isSet = true
}

func (v NullableService) IsSet() bool {
	return v.isSet
}

func (v *NullableService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableService(val *Service) *NullableService {
	return &NullableService{value: val, isSet: true}
}

func (v NullableService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


