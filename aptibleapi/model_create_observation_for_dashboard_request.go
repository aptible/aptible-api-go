/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateObservationForDashboardRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateObservationForDashboardRequest{}

// CreateObservationForDashboardRequest struct for CreateObservationForDashboardRequest
type CreateObservationForDashboardRequest struct {
	RangeBegin string `json:"range_begin"`
	RangeEnd string `json:"range_end"`
	Data map[string]interface{} `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _CreateObservationForDashboardRequest CreateObservationForDashboardRequest

// NewCreateObservationForDashboardRequest instantiates a new CreateObservationForDashboardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateObservationForDashboardRequest(rangeBegin string, rangeEnd string, data map[string]interface{}) *CreateObservationForDashboardRequest {
	this := CreateObservationForDashboardRequest{}
	this.RangeBegin = rangeBegin
	this.RangeEnd = rangeEnd
	this.Data = data
	return &this
}

// NewCreateObservationForDashboardRequestWithDefaults instantiates a new CreateObservationForDashboardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateObservationForDashboardRequestWithDefaults() *CreateObservationForDashboardRequest {
	this := CreateObservationForDashboardRequest{}
	return &this
}

// GetRangeBegin returns the RangeBegin field value
func (o *CreateObservationForDashboardRequest) GetRangeBegin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RangeBegin
}

// GetRangeBeginOk returns a tuple with the RangeBegin field value
// and a boolean to check if the value has been set.
func (o *CreateObservationForDashboardRequest) GetRangeBeginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangeBegin, true
}

// SetRangeBegin sets field value
func (o *CreateObservationForDashboardRequest) SetRangeBegin(v string) {
	o.RangeBegin = v
}

// GetRangeEnd returns the RangeEnd field value
func (o *CreateObservationForDashboardRequest) GetRangeEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RangeEnd
}

// GetRangeEndOk returns a tuple with the RangeEnd field value
// and a boolean to check if the value has been set.
func (o *CreateObservationForDashboardRequest) GetRangeEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangeEnd, true
}

// SetRangeEnd sets field value
func (o *CreateObservationForDashboardRequest) SetRangeEnd(v string) {
	o.RangeEnd = v
}

// GetData returns the Data field value
func (o *CreateObservationForDashboardRequest) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateObservationForDashboardRequest) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *CreateObservationForDashboardRequest) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o CreateObservationForDashboardRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateObservationForDashboardRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["range_begin"] = o.RangeBegin
	toSerialize["range_end"] = o.RangeEnd
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateObservationForDashboardRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"range_begin",
		"range_end",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateObservationForDashboardRequest := _CreateObservationForDashboardRequest{}

	err = json.Unmarshal(data, &varCreateObservationForDashboardRequest)

	if err != nil {
		return err
	}

	*o = CreateObservationForDashboardRequest(varCreateObservationForDashboardRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "range_begin")
		delete(additionalProperties, "range_end")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateObservationForDashboardRequest struct {
	value *CreateObservationForDashboardRequest
	isSet bool
}

func (v NullableCreateObservationForDashboardRequest) Get() *CreateObservationForDashboardRequest {
	return v.value
}

func (v *NullableCreateObservationForDashboardRequest) Set(val *CreateObservationForDashboardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateObservationForDashboardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateObservationForDashboardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateObservationForDashboardRequest(val *CreateObservationForDashboardRequest) *NullableCreateObservationForDashboardRequest {
	return &NullableCreateObservationForDashboardRequest{value: val, isSet: true}
}

func (v NullableCreateObservationForDashboardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateObservationForDashboardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


