/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the AppLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppLinks{}

// AppLinks struct for AppLinks
type AppLinks struct {
	Account *AppLinksAccount `json:"account,omitempty"`
	CurrentConfiguration *AppLinksCurrentConfiguration `json:"current_configuration,omitempty"`
	CurrentImage *AppLinksCurrentImage `json:"current_image,omitempty"`
	Operations *AppLinksOperations `json:"operations,omitempty"`
	Images *AppLinksImages `json:"images,omitempty"`
	Configurations *AppLinksConfigurations `json:"configurations,omitempty"`
	Services *AppLinksServices `json:"services,omitempty"`
	Vhosts *AppLinksVhosts `json:"vhosts,omitempty"`
	EphemeralSessions *AppLinksEphemeralSessions `json:"ephemeral_sessions,omitempty"`
	ServiceDefinitions *AppLinksServiceDefinitions `json:"service_definitions,omitempty"`
	PrereleaseCommands *AppLinksPrereleaseCommands `json:"prerelease_commands,omitempty"`
	CodeScanResults *AppLinksCodeScanResults `json:"code_scan_results,omitempty"`
	LastCodeScanResult *AppLinksLastCodeScanResult `json:"last_code_scan_result,omitempty"`
	Deployments *AppLinksDeployments `json:"deployments,omitempty"`
	CurrentDeployment *AppLinksCurrentDeployment `json:"current_deployment,omitempty"`
	Self *AppLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppLinks AppLinks

// NewAppLinks instantiates a new AppLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppLinks() *AppLinks {
	this := AppLinks{}
	return &this
}

// NewAppLinksWithDefaults instantiates a new AppLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppLinksWithDefaults() *AppLinks {
	this := AppLinks{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *AppLinks) GetAccount() AppLinksAccount {
	if o == nil || IsNil(o.Account) {
		var ret AppLinksAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetAccountOk() (*AppLinksAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *AppLinks) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given AppLinksAccount and assigns it to the Account field.
func (o *AppLinks) SetAccount(v AppLinksAccount) {
	o.Account = &v
}

// GetCurrentConfiguration returns the CurrentConfiguration field value if set, zero value otherwise.
func (o *AppLinks) GetCurrentConfiguration() AppLinksCurrentConfiguration {
	if o == nil || IsNil(o.CurrentConfiguration) {
		var ret AppLinksCurrentConfiguration
		return ret
	}
	return *o.CurrentConfiguration
}

// GetCurrentConfigurationOk returns a tuple with the CurrentConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetCurrentConfigurationOk() (*AppLinksCurrentConfiguration, bool) {
	if o == nil || IsNil(o.CurrentConfiguration) {
		return nil, false
	}
	return o.CurrentConfiguration, true
}

// HasCurrentConfiguration returns a boolean if a field has been set.
func (o *AppLinks) HasCurrentConfiguration() bool {
	if o != nil && !IsNil(o.CurrentConfiguration) {
		return true
	}

	return false
}

// SetCurrentConfiguration gets a reference to the given AppLinksCurrentConfiguration and assigns it to the CurrentConfiguration field.
func (o *AppLinks) SetCurrentConfiguration(v AppLinksCurrentConfiguration) {
	o.CurrentConfiguration = &v
}

// GetCurrentImage returns the CurrentImage field value if set, zero value otherwise.
func (o *AppLinks) GetCurrentImage() AppLinksCurrentImage {
	if o == nil || IsNil(o.CurrentImage) {
		var ret AppLinksCurrentImage
		return ret
	}
	return *o.CurrentImage
}

// GetCurrentImageOk returns a tuple with the CurrentImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetCurrentImageOk() (*AppLinksCurrentImage, bool) {
	if o == nil || IsNil(o.CurrentImage) {
		return nil, false
	}
	return o.CurrentImage, true
}

// HasCurrentImage returns a boolean if a field has been set.
func (o *AppLinks) HasCurrentImage() bool {
	if o != nil && !IsNil(o.CurrentImage) {
		return true
	}

	return false
}

// SetCurrentImage gets a reference to the given AppLinksCurrentImage and assigns it to the CurrentImage field.
func (o *AppLinks) SetCurrentImage(v AppLinksCurrentImage) {
	o.CurrentImage = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *AppLinks) GetOperations() AppLinksOperations {
	if o == nil || IsNil(o.Operations) {
		var ret AppLinksOperations
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetOperationsOk() (*AppLinksOperations, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *AppLinks) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given AppLinksOperations and assigns it to the Operations field.
func (o *AppLinks) SetOperations(v AppLinksOperations) {
	o.Operations = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *AppLinks) GetImages() AppLinksImages {
	if o == nil || IsNil(o.Images) {
		var ret AppLinksImages
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetImagesOk() (*AppLinksImages, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *AppLinks) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given AppLinksImages and assigns it to the Images field.
func (o *AppLinks) SetImages(v AppLinksImages) {
	o.Images = &v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *AppLinks) GetConfigurations() AppLinksConfigurations {
	if o == nil || IsNil(o.Configurations) {
		var ret AppLinksConfigurations
		return ret
	}
	return *o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetConfigurationsOk() (*AppLinksConfigurations, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *AppLinks) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given AppLinksConfigurations and assigns it to the Configurations field.
func (o *AppLinks) SetConfigurations(v AppLinksConfigurations) {
	o.Configurations = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *AppLinks) GetServices() AppLinksServices {
	if o == nil || IsNil(o.Services) {
		var ret AppLinksServices
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetServicesOk() (*AppLinksServices, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *AppLinks) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given AppLinksServices and assigns it to the Services field.
func (o *AppLinks) SetServices(v AppLinksServices) {
	o.Services = &v
}

// GetVhosts returns the Vhosts field value if set, zero value otherwise.
func (o *AppLinks) GetVhosts() AppLinksVhosts {
	if o == nil || IsNil(o.Vhosts) {
		var ret AppLinksVhosts
		return ret
	}
	return *o.Vhosts
}

// GetVhostsOk returns a tuple with the Vhosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetVhostsOk() (*AppLinksVhosts, bool) {
	if o == nil || IsNil(o.Vhosts) {
		return nil, false
	}
	return o.Vhosts, true
}

// HasVhosts returns a boolean if a field has been set.
func (o *AppLinks) HasVhosts() bool {
	if o != nil && !IsNil(o.Vhosts) {
		return true
	}

	return false
}

// SetVhosts gets a reference to the given AppLinksVhosts and assigns it to the Vhosts field.
func (o *AppLinks) SetVhosts(v AppLinksVhosts) {
	o.Vhosts = &v
}

// GetEphemeralSessions returns the EphemeralSessions field value if set, zero value otherwise.
func (o *AppLinks) GetEphemeralSessions() AppLinksEphemeralSessions {
	if o == nil || IsNil(o.EphemeralSessions) {
		var ret AppLinksEphemeralSessions
		return ret
	}
	return *o.EphemeralSessions
}

// GetEphemeralSessionsOk returns a tuple with the EphemeralSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetEphemeralSessionsOk() (*AppLinksEphemeralSessions, bool) {
	if o == nil || IsNil(o.EphemeralSessions) {
		return nil, false
	}
	return o.EphemeralSessions, true
}

// HasEphemeralSessions returns a boolean if a field has been set.
func (o *AppLinks) HasEphemeralSessions() bool {
	if o != nil && !IsNil(o.EphemeralSessions) {
		return true
	}

	return false
}

// SetEphemeralSessions gets a reference to the given AppLinksEphemeralSessions and assigns it to the EphemeralSessions field.
func (o *AppLinks) SetEphemeralSessions(v AppLinksEphemeralSessions) {
	o.EphemeralSessions = &v
}

// GetServiceDefinitions returns the ServiceDefinitions field value if set, zero value otherwise.
func (o *AppLinks) GetServiceDefinitions() AppLinksServiceDefinitions {
	if o == nil || IsNil(o.ServiceDefinitions) {
		var ret AppLinksServiceDefinitions
		return ret
	}
	return *o.ServiceDefinitions
}

// GetServiceDefinitionsOk returns a tuple with the ServiceDefinitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetServiceDefinitionsOk() (*AppLinksServiceDefinitions, bool) {
	if o == nil || IsNil(o.ServiceDefinitions) {
		return nil, false
	}
	return o.ServiceDefinitions, true
}

// HasServiceDefinitions returns a boolean if a field has been set.
func (o *AppLinks) HasServiceDefinitions() bool {
	if o != nil && !IsNil(o.ServiceDefinitions) {
		return true
	}

	return false
}

// SetServiceDefinitions gets a reference to the given AppLinksServiceDefinitions and assigns it to the ServiceDefinitions field.
func (o *AppLinks) SetServiceDefinitions(v AppLinksServiceDefinitions) {
	o.ServiceDefinitions = &v
}

// GetPrereleaseCommands returns the PrereleaseCommands field value if set, zero value otherwise.
func (o *AppLinks) GetPrereleaseCommands() AppLinksPrereleaseCommands {
	if o == nil || IsNil(o.PrereleaseCommands) {
		var ret AppLinksPrereleaseCommands
		return ret
	}
	return *o.PrereleaseCommands
}

// GetPrereleaseCommandsOk returns a tuple with the PrereleaseCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetPrereleaseCommandsOk() (*AppLinksPrereleaseCommands, bool) {
	if o == nil || IsNil(o.PrereleaseCommands) {
		return nil, false
	}
	return o.PrereleaseCommands, true
}

// HasPrereleaseCommands returns a boolean if a field has been set.
func (o *AppLinks) HasPrereleaseCommands() bool {
	if o != nil && !IsNil(o.PrereleaseCommands) {
		return true
	}

	return false
}

// SetPrereleaseCommands gets a reference to the given AppLinksPrereleaseCommands and assigns it to the PrereleaseCommands field.
func (o *AppLinks) SetPrereleaseCommands(v AppLinksPrereleaseCommands) {
	o.PrereleaseCommands = &v
}

// GetCodeScanResults returns the CodeScanResults field value if set, zero value otherwise.
func (o *AppLinks) GetCodeScanResults() AppLinksCodeScanResults {
	if o == nil || IsNil(o.CodeScanResults) {
		var ret AppLinksCodeScanResults
		return ret
	}
	return *o.CodeScanResults
}

// GetCodeScanResultsOk returns a tuple with the CodeScanResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetCodeScanResultsOk() (*AppLinksCodeScanResults, bool) {
	if o == nil || IsNil(o.CodeScanResults) {
		return nil, false
	}
	return o.CodeScanResults, true
}

// HasCodeScanResults returns a boolean if a field has been set.
func (o *AppLinks) HasCodeScanResults() bool {
	if o != nil && !IsNil(o.CodeScanResults) {
		return true
	}

	return false
}

// SetCodeScanResults gets a reference to the given AppLinksCodeScanResults and assigns it to the CodeScanResults field.
func (o *AppLinks) SetCodeScanResults(v AppLinksCodeScanResults) {
	o.CodeScanResults = &v
}

// GetLastCodeScanResult returns the LastCodeScanResult field value if set, zero value otherwise.
func (o *AppLinks) GetLastCodeScanResult() AppLinksLastCodeScanResult {
	if o == nil || IsNil(o.LastCodeScanResult) {
		var ret AppLinksLastCodeScanResult
		return ret
	}
	return *o.LastCodeScanResult
}

// GetLastCodeScanResultOk returns a tuple with the LastCodeScanResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetLastCodeScanResultOk() (*AppLinksLastCodeScanResult, bool) {
	if o == nil || IsNil(o.LastCodeScanResult) {
		return nil, false
	}
	return o.LastCodeScanResult, true
}

// HasLastCodeScanResult returns a boolean if a field has been set.
func (o *AppLinks) HasLastCodeScanResult() bool {
	if o != nil && !IsNil(o.LastCodeScanResult) {
		return true
	}

	return false
}

// SetLastCodeScanResult gets a reference to the given AppLinksLastCodeScanResult and assigns it to the LastCodeScanResult field.
func (o *AppLinks) SetLastCodeScanResult(v AppLinksLastCodeScanResult) {
	o.LastCodeScanResult = &v
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *AppLinks) GetDeployments() AppLinksDeployments {
	if o == nil || IsNil(o.Deployments) {
		var ret AppLinksDeployments
		return ret
	}
	return *o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetDeploymentsOk() (*AppLinksDeployments, bool) {
	if o == nil || IsNil(o.Deployments) {
		return nil, false
	}
	return o.Deployments, true
}

// HasDeployments returns a boolean if a field has been set.
func (o *AppLinks) HasDeployments() bool {
	if o != nil && !IsNil(o.Deployments) {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given AppLinksDeployments and assigns it to the Deployments field.
func (o *AppLinks) SetDeployments(v AppLinksDeployments) {
	o.Deployments = &v
}

// GetCurrentDeployment returns the CurrentDeployment field value if set, zero value otherwise.
func (o *AppLinks) GetCurrentDeployment() AppLinksCurrentDeployment {
	if o == nil || IsNil(o.CurrentDeployment) {
		var ret AppLinksCurrentDeployment
		return ret
	}
	return *o.CurrentDeployment
}

// GetCurrentDeploymentOk returns a tuple with the CurrentDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetCurrentDeploymentOk() (*AppLinksCurrentDeployment, bool) {
	if o == nil || IsNil(o.CurrentDeployment) {
		return nil, false
	}
	return o.CurrentDeployment, true
}

// HasCurrentDeployment returns a boolean if a field has been set.
func (o *AppLinks) HasCurrentDeployment() bool {
	if o != nil && !IsNil(o.CurrentDeployment) {
		return true
	}

	return false
}

// SetCurrentDeployment gets a reference to the given AppLinksCurrentDeployment and assigns it to the CurrentDeployment field.
func (o *AppLinks) SetCurrentDeployment(v AppLinksCurrentDeployment) {
	o.CurrentDeployment = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *AppLinks) GetSelf() AppLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret AppLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetSelfOk() (*AppLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *AppLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given AppLinksSelf and assigns it to the Self field.
func (o *AppLinks) SetSelf(v AppLinksSelf) {
	o.Self = &v
}

func (o AppLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.CurrentConfiguration) {
		toSerialize["current_configuration"] = o.CurrentConfiguration
	}
	if !IsNil(o.CurrentImage) {
		toSerialize["current_image"] = o.CurrentImage
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.Vhosts) {
		toSerialize["vhosts"] = o.Vhosts
	}
	if !IsNil(o.EphemeralSessions) {
		toSerialize["ephemeral_sessions"] = o.EphemeralSessions
	}
	if !IsNil(o.ServiceDefinitions) {
		toSerialize["service_definitions"] = o.ServiceDefinitions
	}
	if !IsNil(o.PrereleaseCommands) {
		toSerialize["prerelease_commands"] = o.PrereleaseCommands
	}
	if !IsNil(o.CodeScanResults) {
		toSerialize["code_scan_results"] = o.CodeScanResults
	}
	if !IsNil(o.LastCodeScanResult) {
		toSerialize["last_code_scan_result"] = o.LastCodeScanResult
	}
	if !IsNil(o.Deployments) {
		toSerialize["deployments"] = o.Deployments
	}
	if !IsNil(o.CurrentDeployment) {
		toSerialize["current_deployment"] = o.CurrentDeployment
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AppLinks) UnmarshalJSON(data []byte) (err error) {
	varAppLinks := _AppLinks{}

	err = json.Unmarshal(data, &varAppLinks)

	if err != nil {
		return err
	}

	*o = AppLinks(varAppLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account")
		delete(additionalProperties, "current_configuration")
		delete(additionalProperties, "current_image")
		delete(additionalProperties, "operations")
		delete(additionalProperties, "images")
		delete(additionalProperties, "configurations")
		delete(additionalProperties, "services")
		delete(additionalProperties, "vhosts")
		delete(additionalProperties, "ephemeral_sessions")
		delete(additionalProperties, "service_definitions")
		delete(additionalProperties, "prerelease_commands")
		delete(additionalProperties, "code_scan_results")
		delete(additionalProperties, "last_code_scan_result")
		delete(additionalProperties, "deployments")
		delete(additionalProperties, "current_deployment")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppLinks struct {
	value *AppLinks
	isSet bool
}

func (v NullableAppLinks) Get() *AppLinks {
	return v.value
}

func (v *NullableAppLinks) Set(val *AppLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAppLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAppLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppLinks(val *AppLinks) *NullableAppLinks {
	return &NullableAppLinks{value: val, isSet: true}
}

func (v NullableAppLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


