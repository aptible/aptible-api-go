/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the MetricDrainDrainConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricDrainDrainConfiguration{}

// MetricDrainDrainConfiguration struct for MetricDrainDrainConfiguration
type MetricDrainDrainConfiguration struct {
	Address *string `json:"address,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	Database *string `json:"database,omitempty"`
	ApiKey *string `json:"api_key,omitempty"`
	SeriesUrl *string `json:"series_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetricDrainDrainConfiguration MetricDrainDrainConfiguration

// NewMetricDrainDrainConfiguration instantiates a new MetricDrainDrainConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDrainDrainConfiguration() *MetricDrainDrainConfiguration {
	this := MetricDrainDrainConfiguration{}
	return &this
}

// NewMetricDrainDrainConfigurationWithDefaults instantiates a new MetricDrainDrainConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDrainDrainConfigurationWithDefaults() *MetricDrainDrainConfiguration {
	this := MetricDrainDrainConfiguration{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MetricDrainDrainConfiguration) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrainDrainConfiguration) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MetricDrainDrainConfiguration) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MetricDrainDrainConfiguration) SetAddress(v string) {
	o.Address = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MetricDrainDrainConfiguration) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrainDrainConfiguration) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MetricDrainDrainConfiguration) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MetricDrainDrainConfiguration) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MetricDrainDrainConfiguration) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrainDrainConfiguration) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MetricDrainDrainConfiguration) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MetricDrainDrainConfiguration) SetPassword(v string) {
	o.Password = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *MetricDrainDrainConfiguration) GetDatabase() string {
	if o == nil || IsNil(o.Database) {
		var ret string
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrainDrainConfiguration) GetDatabaseOk() (*string, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *MetricDrainDrainConfiguration) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given string and assigns it to the Database field.
func (o *MetricDrainDrainConfiguration) SetDatabase(v string) {
	o.Database = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *MetricDrainDrainConfiguration) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrainDrainConfiguration) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *MetricDrainDrainConfiguration) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *MetricDrainDrainConfiguration) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetSeriesUrl returns the SeriesUrl field value if set, zero value otherwise.
func (o *MetricDrainDrainConfiguration) GetSeriesUrl() string {
	if o == nil || IsNil(o.SeriesUrl) {
		var ret string
		return ret
	}
	return *o.SeriesUrl
}

// GetSeriesUrlOk returns a tuple with the SeriesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDrainDrainConfiguration) GetSeriesUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesUrl) {
		return nil, false
	}
	return o.SeriesUrl, true
}

// HasSeriesUrl returns a boolean if a field has been set.
func (o *MetricDrainDrainConfiguration) HasSeriesUrl() bool {
	if o != nil && !IsNil(o.SeriesUrl) {
		return true
	}

	return false
}

// SetSeriesUrl gets a reference to the given string and assigns it to the SeriesUrl field.
func (o *MetricDrainDrainConfiguration) SetSeriesUrl(v string) {
	o.SeriesUrl = &v
}

func (o MetricDrainDrainConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricDrainDrainConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.SeriesUrl) {
		toSerialize["series_url"] = o.SeriesUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetricDrainDrainConfiguration) UnmarshalJSON(data []byte) (err error) {
	varMetricDrainDrainConfiguration := _MetricDrainDrainConfiguration{}

	err = json.Unmarshal(data, &varMetricDrainDrainConfiguration)

	if err != nil {
		return err
	}

	*o = MetricDrainDrainConfiguration(varMetricDrainDrainConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "database")
		delete(additionalProperties, "api_key")
		delete(additionalProperties, "series_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetricDrainDrainConfiguration struct {
	value *MetricDrainDrainConfiguration
	isSet bool
}

func (v NullableMetricDrainDrainConfiguration) Get() *MetricDrainDrainConfiguration {
	return v.value
}

func (v *NullableMetricDrainDrainConfiguration) Set(val *MetricDrainDrainConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDrainDrainConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDrainDrainConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDrainDrainConfiguration(val *MetricDrainDrainConfiguration) *NullableMetricDrainDrainConfiguration {
	return &NullableMetricDrainDrainConfiguration{value: val, isSet: true}
}

func (v NullableMetricDrainDrainConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDrainDrainConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


