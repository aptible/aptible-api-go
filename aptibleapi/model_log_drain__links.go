/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the LogDrainLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogDrainLinks{}

// LogDrainLinks struct for LogDrainLinks
type LogDrainLinks struct {
	Account *LogDrainLinksAccount `json:"account,omitempty"`
	Database *LogDrainLinksDatabase `json:"database,omitempty"`
	Operations *LogDrainLinksOperations `json:"operations,omitempty"`
	Containers *LogDrainLinksContainers `json:"containers,omitempty"`
	EphemeralContainers *LogDrainLinksEphemeralContainers `json:"ephemeral_containers,omitempty"`
	Self *LogDrainLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LogDrainLinks LogDrainLinks

// NewLogDrainLinks instantiates a new LogDrainLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogDrainLinks() *LogDrainLinks {
	this := LogDrainLinks{}
	return &this
}

// NewLogDrainLinksWithDefaults instantiates a new LogDrainLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogDrainLinksWithDefaults() *LogDrainLinks {
	this := LogDrainLinks{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *LogDrainLinks) GetAccount() LogDrainLinksAccount {
	if o == nil || IsNil(o.Account) {
		var ret LogDrainLinksAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainLinks) GetAccountOk() (*LogDrainLinksAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *LogDrainLinks) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given LogDrainLinksAccount and assigns it to the Account field.
func (o *LogDrainLinks) SetAccount(v LogDrainLinksAccount) {
	o.Account = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *LogDrainLinks) GetDatabase() LogDrainLinksDatabase {
	if o == nil || IsNil(o.Database) {
		var ret LogDrainLinksDatabase
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainLinks) GetDatabaseOk() (*LogDrainLinksDatabase, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *LogDrainLinks) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given LogDrainLinksDatabase and assigns it to the Database field.
func (o *LogDrainLinks) SetDatabase(v LogDrainLinksDatabase) {
	o.Database = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *LogDrainLinks) GetOperations() LogDrainLinksOperations {
	if o == nil || IsNil(o.Operations) {
		var ret LogDrainLinksOperations
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainLinks) GetOperationsOk() (*LogDrainLinksOperations, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *LogDrainLinks) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given LogDrainLinksOperations and assigns it to the Operations field.
func (o *LogDrainLinks) SetOperations(v LogDrainLinksOperations) {
	o.Operations = &v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *LogDrainLinks) GetContainers() LogDrainLinksContainers {
	if o == nil || IsNil(o.Containers) {
		var ret LogDrainLinksContainers
		return ret
	}
	return *o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainLinks) GetContainersOk() (*LogDrainLinksContainers, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *LogDrainLinks) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given LogDrainLinksContainers and assigns it to the Containers field.
func (o *LogDrainLinks) SetContainers(v LogDrainLinksContainers) {
	o.Containers = &v
}

// GetEphemeralContainers returns the EphemeralContainers field value if set, zero value otherwise.
func (o *LogDrainLinks) GetEphemeralContainers() LogDrainLinksEphemeralContainers {
	if o == nil || IsNil(o.EphemeralContainers) {
		var ret LogDrainLinksEphemeralContainers
		return ret
	}
	return *o.EphemeralContainers
}

// GetEphemeralContainersOk returns a tuple with the EphemeralContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainLinks) GetEphemeralContainersOk() (*LogDrainLinksEphemeralContainers, bool) {
	if o == nil || IsNil(o.EphemeralContainers) {
		return nil, false
	}
	return o.EphemeralContainers, true
}

// HasEphemeralContainers returns a boolean if a field has been set.
func (o *LogDrainLinks) HasEphemeralContainers() bool {
	if o != nil && !IsNil(o.EphemeralContainers) {
		return true
	}

	return false
}

// SetEphemeralContainers gets a reference to the given LogDrainLinksEphemeralContainers and assigns it to the EphemeralContainers field.
func (o *LogDrainLinks) SetEphemeralContainers(v LogDrainLinksEphemeralContainers) {
	o.EphemeralContainers = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *LogDrainLinks) GetSelf() LogDrainLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret LogDrainLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogDrainLinks) GetSelfOk() (*LogDrainLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *LogDrainLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given LogDrainLinksSelf and assigns it to the Self field.
func (o *LogDrainLinks) SetSelf(v LogDrainLinksSelf) {
	o.Self = &v
}

func (o LogDrainLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogDrainLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	if !IsNil(o.EphemeralContainers) {
		toSerialize["ephemeral_containers"] = o.EphemeralContainers
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LogDrainLinks) UnmarshalJSON(data []byte) (err error) {
	varLogDrainLinks := _LogDrainLinks{}

	err = json.Unmarshal(data, &varLogDrainLinks)

	if err != nil {
		return err
	}

	*o = LogDrainLinks(varLogDrainLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account")
		delete(additionalProperties, "database")
		delete(additionalProperties, "operations")
		delete(additionalProperties, "containers")
		delete(additionalProperties, "ephemeral_containers")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLogDrainLinks struct {
	value *LogDrainLinks
	isSet bool
}

func (v NullableLogDrainLinks) Get() *LogDrainLinks {
	return v.value
}

func (v *NullableLogDrainLinks) Set(val *LogDrainLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableLogDrainLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableLogDrainLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogDrainLinks(val *LogDrainLinks) *NullableLogDrainLinks {
	return &NullableLogDrainLinks{value: val, isSet: true}
}

func (v NullableLogDrainLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogDrainLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


