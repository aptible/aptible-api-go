/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ListPersistentDisksForAccount200ResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPersistentDisksForAccount200ResponseEmbedded{}

// ListPersistentDisksForAccount200ResponseEmbedded struct for ListPersistentDisksForAccount200ResponseEmbedded
type ListPersistentDisksForAccount200ResponseEmbedded struct {
	PersistentDisks []PersistentDisk `json:"persistent_disks,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPersistentDisksForAccount200ResponseEmbedded ListPersistentDisksForAccount200ResponseEmbedded

// NewListPersistentDisksForAccount200ResponseEmbedded instantiates a new ListPersistentDisksForAccount200ResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPersistentDisksForAccount200ResponseEmbedded() *ListPersistentDisksForAccount200ResponseEmbedded {
	this := ListPersistentDisksForAccount200ResponseEmbedded{}
	return &this
}

// NewListPersistentDisksForAccount200ResponseEmbeddedWithDefaults instantiates a new ListPersistentDisksForAccount200ResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPersistentDisksForAccount200ResponseEmbeddedWithDefaults() *ListPersistentDisksForAccount200ResponseEmbedded {
	this := ListPersistentDisksForAccount200ResponseEmbedded{}
	return &this
}

// GetPersistentDisks returns the PersistentDisks field value if set, zero value otherwise.
func (o *ListPersistentDisksForAccount200ResponseEmbedded) GetPersistentDisks() []PersistentDisk {
	if o == nil || IsNil(o.PersistentDisks) {
		var ret []PersistentDisk
		return ret
	}
	return o.PersistentDisks
}

// GetPersistentDisksOk returns a tuple with the PersistentDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPersistentDisksForAccount200ResponseEmbedded) GetPersistentDisksOk() ([]PersistentDisk, bool) {
	if o == nil || IsNil(o.PersistentDisks) {
		return nil, false
	}
	return o.PersistentDisks, true
}

// HasPersistentDisks returns a boolean if a field has been set.
func (o *ListPersistentDisksForAccount200ResponseEmbedded) HasPersistentDisks() bool {
	if o != nil && !IsNil(o.PersistentDisks) {
		return true
	}

	return false
}

// SetPersistentDisks gets a reference to the given []PersistentDisk and assigns it to the PersistentDisks field.
func (o *ListPersistentDisksForAccount200ResponseEmbedded) SetPersistentDisks(v []PersistentDisk) {
	o.PersistentDisks = v
}

func (o ListPersistentDisksForAccount200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPersistentDisksForAccount200ResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PersistentDisks) {
		toSerialize["persistent_disks"] = o.PersistentDisks
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPersistentDisksForAccount200ResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varListPersistentDisksForAccount200ResponseEmbedded := _ListPersistentDisksForAccount200ResponseEmbedded{}

	err = json.Unmarshal(data, &varListPersistentDisksForAccount200ResponseEmbedded)

	if err != nil {
		return err
	}

	*o = ListPersistentDisksForAccount200ResponseEmbedded(varListPersistentDisksForAccount200ResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "persistent_disks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPersistentDisksForAccount200ResponseEmbedded struct {
	value *ListPersistentDisksForAccount200ResponseEmbedded
	isSet bool
}

func (v NullableListPersistentDisksForAccount200ResponseEmbedded) Get() *ListPersistentDisksForAccount200ResponseEmbedded {
	return v.value
}

func (v *NullableListPersistentDisksForAccount200ResponseEmbedded) Set(val *ListPersistentDisksForAccount200ResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableListPersistentDisksForAccount200ResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableListPersistentDisksForAccount200ResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPersistentDisksForAccount200ResponseEmbedded(val *ListPersistentDisksForAccount200ResponseEmbedded) *NullableListPersistentDisksForAccount200ResponseEmbedded {
	return &NullableListPersistentDisksForAccount200ResponseEmbedded{value: val, isSet: true}
}

func (v NullableListPersistentDisksForAccount200ResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPersistentDisksForAccount200ResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


