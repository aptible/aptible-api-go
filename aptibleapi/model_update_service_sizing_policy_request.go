/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the UpdateServiceSizingPolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateServiceSizingPolicyRequest{}

// UpdateServiceSizingPolicyRequest struct for UpdateServiceSizingPolicyRequest
type UpdateServiceSizingPolicyRequest struct {
	ScalingEnabled *bool `json:"scaling_enabled,omitempty"`
	MetricLookbackSeconds *int32 `json:"metric_lookback_seconds,omitempty"`
	Percentile *float32 `json:"percentile,omitempty"`
	PostScaleUpCooldownSeconds *int32 `json:"post_scale_up_cooldown_seconds,omitempty"`
	PostScaleDownCooldownSeconds *int32 `json:"post_scale_down_cooldown_seconds,omitempty"`
	PostReleaseCooldownSeconds *int32 `json:"post_release_cooldown_seconds,omitempty"`
	MemCpuRatioRThreshold *float32 `json:"mem_cpu_ratio_r_threshold,omitempty"`
	MemCpuRatioCThreshold *float32 `json:"mem_cpu_ratio_c_threshold,omitempty"`
	MemScaleUpThreshold *float32 `json:"mem_scale_up_threshold,omitempty"`
	MemScaleDownThreshold *float32 `json:"mem_scale_down_threshold,omitempty"`
	MinimumMemory *int32 `json:"minimum_memory,omitempty"`
	MaximumMemory *int32 `json:"maximum_memory,omitempty"`
	Autoscaling *string `json:"autoscaling,omitempty"`
	MinCpuThreshold *float32 `json:"min_cpu_threshold,omitempty"`
	MaxCpuThreshold *float32 `json:"max_cpu_threshold,omitempty"`
	MinContainers *int32 `json:"min_containers,omitempty"`
	MaxContainers *int32 `json:"max_containers,omitempty"`
	ScaleUpStep *int32 `json:"scale_up_step,omitempty"`
	ScaleDownStep *int32 `json:"scale_down_step,omitempty"`
	UseHorizontalScale *bool `json:"use_horizontal_scale,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateServiceSizingPolicyRequest UpdateServiceSizingPolicyRequest

// NewUpdateServiceSizingPolicyRequest instantiates a new UpdateServiceSizingPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateServiceSizingPolicyRequest() *UpdateServiceSizingPolicyRequest {
	this := UpdateServiceSizingPolicyRequest{}
	return &this
}

// NewUpdateServiceSizingPolicyRequestWithDefaults instantiates a new UpdateServiceSizingPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateServiceSizingPolicyRequestWithDefaults() *UpdateServiceSizingPolicyRequest {
	this := UpdateServiceSizingPolicyRequest{}
	return &this
}

// GetScalingEnabled returns the ScalingEnabled field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetScalingEnabled() bool {
	if o == nil || IsNil(o.ScalingEnabled) {
		var ret bool
		return ret
	}
	return *o.ScalingEnabled
}

// GetScalingEnabledOk returns a tuple with the ScalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetScalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ScalingEnabled) {
		return nil, false
	}
	return o.ScalingEnabled, true
}

// HasScalingEnabled returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasScalingEnabled() bool {
	if o != nil && !IsNil(o.ScalingEnabled) {
		return true
	}

	return false
}

// SetScalingEnabled gets a reference to the given bool and assigns it to the ScalingEnabled field.
func (o *UpdateServiceSizingPolicyRequest) SetScalingEnabled(v bool) {
	o.ScalingEnabled = &v
}

// GetMetricLookbackSeconds returns the MetricLookbackSeconds field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMetricLookbackSeconds() int32 {
	if o == nil || IsNil(o.MetricLookbackSeconds) {
		var ret int32
		return ret
	}
	return *o.MetricLookbackSeconds
}

// GetMetricLookbackSecondsOk returns a tuple with the MetricLookbackSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMetricLookbackSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.MetricLookbackSeconds) {
		return nil, false
	}
	return o.MetricLookbackSeconds, true
}

// HasMetricLookbackSeconds returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMetricLookbackSeconds() bool {
	if o != nil && !IsNil(o.MetricLookbackSeconds) {
		return true
	}

	return false
}

// SetMetricLookbackSeconds gets a reference to the given int32 and assigns it to the MetricLookbackSeconds field.
func (o *UpdateServiceSizingPolicyRequest) SetMetricLookbackSeconds(v int32) {
	o.MetricLookbackSeconds = &v
}

// GetPercentile returns the Percentile field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetPercentile() float32 {
	if o == nil || IsNil(o.Percentile) {
		var ret float32
		return ret
	}
	return *o.Percentile
}

// GetPercentileOk returns a tuple with the Percentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetPercentileOk() (*float32, bool) {
	if o == nil || IsNil(o.Percentile) {
		return nil, false
	}
	return o.Percentile, true
}

// HasPercentile returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasPercentile() bool {
	if o != nil && !IsNil(o.Percentile) {
		return true
	}

	return false
}

// SetPercentile gets a reference to the given float32 and assigns it to the Percentile field.
func (o *UpdateServiceSizingPolicyRequest) SetPercentile(v float32) {
	o.Percentile = &v
}

// GetPostScaleUpCooldownSeconds returns the PostScaleUpCooldownSeconds field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetPostScaleUpCooldownSeconds() int32 {
	if o == nil || IsNil(o.PostScaleUpCooldownSeconds) {
		var ret int32
		return ret
	}
	return *o.PostScaleUpCooldownSeconds
}

// GetPostScaleUpCooldownSecondsOk returns a tuple with the PostScaleUpCooldownSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetPostScaleUpCooldownSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostScaleUpCooldownSeconds) {
		return nil, false
	}
	return o.PostScaleUpCooldownSeconds, true
}

// HasPostScaleUpCooldownSeconds returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasPostScaleUpCooldownSeconds() bool {
	if o != nil && !IsNil(o.PostScaleUpCooldownSeconds) {
		return true
	}

	return false
}

// SetPostScaleUpCooldownSeconds gets a reference to the given int32 and assigns it to the PostScaleUpCooldownSeconds field.
func (o *UpdateServiceSizingPolicyRequest) SetPostScaleUpCooldownSeconds(v int32) {
	o.PostScaleUpCooldownSeconds = &v
}

// GetPostScaleDownCooldownSeconds returns the PostScaleDownCooldownSeconds field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetPostScaleDownCooldownSeconds() int32 {
	if o == nil || IsNil(o.PostScaleDownCooldownSeconds) {
		var ret int32
		return ret
	}
	return *o.PostScaleDownCooldownSeconds
}

// GetPostScaleDownCooldownSecondsOk returns a tuple with the PostScaleDownCooldownSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetPostScaleDownCooldownSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostScaleDownCooldownSeconds) {
		return nil, false
	}
	return o.PostScaleDownCooldownSeconds, true
}

// HasPostScaleDownCooldownSeconds returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasPostScaleDownCooldownSeconds() bool {
	if o != nil && !IsNil(o.PostScaleDownCooldownSeconds) {
		return true
	}

	return false
}

// SetPostScaleDownCooldownSeconds gets a reference to the given int32 and assigns it to the PostScaleDownCooldownSeconds field.
func (o *UpdateServiceSizingPolicyRequest) SetPostScaleDownCooldownSeconds(v int32) {
	o.PostScaleDownCooldownSeconds = &v
}

// GetPostReleaseCooldownSeconds returns the PostReleaseCooldownSeconds field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetPostReleaseCooldownSeconds() int32 {
	if o == nil || IsNil(o.PostReleaseCooldownSeconds) {
		var ret int32
		return ret
	}
	return *o.PostReleaseCooldownSeconds
}

// GetPostReleaseCooldownSecondsOk returns a tuple with the PostReleaseCooldownSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetPostReleaseCooldownSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostReleaseCooldownSeconds) {
		return nil, false
	}
	return o.PostReleaseCooldownSeconds, true
}

// HasPostReleaseCooldownSeconds returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasPostReleaseCooldownSeconds() bool {
	if o != nil && !IsNil(o.PostReleaseCooldownSeconds) {
		return true
	}

	return false
}

// SetPostReleaseCooldownSeconds gets a reference to the given int32 and assigns it to the PostReleaseCooldownSeconds field.
func (o *UpdateServiceSizingPolicyRequest) SetPostReleaseCooldownSeconds(v int32) {
	o.PostReleaseCooldownSeconds = &v
}

// GetMemCpuRatioRThreshold returns the MemCpuRatioRThreshold field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMemCpuRatioRThreshold() float32 {
	if o == nil || IsNil(o.MemCpuRatioRThreshold) {
		var ret float32
		return ret
	}
	return *o.MemCpuRatioRThreshold
}

// GetMemCpuRatioRThresholdOk returns a tuple with the MemCpuRatioRThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMemCpuRatioRThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MemCpuRatioRThreshold) {
		return nil, false
	}
	return o.MemCpuRatioRThreshold, true
}

// HasMemCpuRatioRThreshold returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMemCpuRatioRThreshold() bool {
	if o != nil && !IsNil(o.MemCpuRatioRThreshold) {
		return true
	}

	return false
}

// SetMemCpuRatioRThreshold gets a reference to the given float32 and assigns it to the MemCpuRatioRThreshold field.
func (o *UpdateServiceSizingPolicyRequest) SetMemCpuRatioRThreshold(v float32) {
	o.MemCpuRatioRThreshold = &v
}

// GetMemCpuRatioCThreshold returns the MemCpuRatioCThreshold field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMemCpuRatioCThreshold() float32 {
	if o == nil || IsNil(o.MemCpuRatioCThreshold) {
		var ret float32
		return ret
	}
	return *o.MemCpuRatioCThreshold
}

// GetMemCpuRatioCThresholdOk returns a tuple with the MemCpuRatioCThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMemCpuRatioCThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MemCpuRatioCThreshold) {
		return nil, false
	}
	return o.MemCpuRatioCThreshold, true
}

// HasMemCpuRatioCThreshold returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMemCpuRatioCThreshold() bool {
	if o != nil && !IsNil(o.MemCpuRatioCThreshold) {
		return true
	}

	return false
}

// SetMemCpuRatioCThreshold gets a reference to the given float32 and assigns it to the MemCpuRatioCThreshold field.
func (o *UpdateServiceSizingPolicyRequest) SetMemCpuRatioCThreshold(v float32) {
	o.MemCpuRatioCThreshold = &v
}

// GetMemScaleUpThreshold returns the MemScaleUpThreshold field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMemScaleUpThreshold() float32 {
	if o == nil || IsNil(o.MemScaleUpThreshold) {
		var ret float32
		return ret
	}
	return *o.MemScaleUpThreshold
}

// GetMemScaleUpThresholdOk returns a tuple with the MemScaleUpThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMemScaleUpThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MemScaleUpThreshold) {
		return nil, false
	}
	return o.MemScaleUpThreshold, true
}

// HasMemScaleUpThreshold returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMemScaleUpThreshold() bool {
	if o != nil && !IsNil(o.MemScaleUpThreshold) {
		return true
	}

	return false
}

// SetMemScaleUpThreshold gets a reference to the given float32 and assigns it to the MemScaleUpThreshold field.
func (o *UpdateServiceSizingPolicyRequest) SetMemScaleUpThreshold(v float32) {
	o.MemScaleUpThreshold = &v
}

// GetMemScaleDownThreshold returns the MemScaleDownThreshold field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMemScaleDownThreshold() float32 {
	if o == nil || IsNil(o.MemScaleDownThreshold) {
		var ret float32
		return ret
	}
	return *o.MemScaleDownThreshold
}

// GetMemScaleDownThresholdOk returns a tuple with the MemScaleDownThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMemScaleDownThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MemScaleDownThreshold) {
		return nil, false
	}
	return o.MemScaleDownThreshold, true
}

// HasMemScaleDownThreshold returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMemScaleDownThreshold() bool {
	if o != nil && !IsNil(o.MemScaleDownThreshold) {
		return true
	}

	return false
}

// SetMemScaleDownThreshold gets a reference to the given float32 and assigns it to the MemScaleDownThreshold field.
func (o *UpdateServiceSizingPolicyRequest) SetMemScaleDownThreshold(v float32) {
	o.MemScaleDownThreshold = &v
}

// GetMinimumMemory returns the MinimumMemory field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMinimumMemory() int32 {
	if o == nil || IsNil(o.MinimumMemory) {
		var ret int32
		return ret
	}
	return *o.MinimumMemory
}

// GetMinimumMemoryOk returns a tuple with the MinimumMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMinimumMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumMemory) {
		return nil, false
	}
	return o.MinimumMemory, true
}

// HasMinimumMemory returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMinimumMemory() bool {
	if o != nil && !IsNil(o.MinimumMemory) {
		return true
	}

	return false
}

// SetMinimumMemory gets a reference to the given int32 and assigns it to the MinimumMemory field.
func (o *UpdateServiceSizingPolicyRequest) SetMinimumMemory(v int32) {
	o.MinimumMemory = &v
}

// GetMaximumMemory returns the MaximumMemory field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMaximumMemory() int32 {
	if o == nil || IsNil(o.MaximumMemory) {
		var ret int32
		return ret
	}
	return *o.MaximumMemory
}

// GetMaximumMemoryOk returns a tuple with the MaximumMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMaximumMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumMemory) {
		return nil, false
	}
	return o.MaximumMemory, true
}

// HasMaximumMemory returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMaximumMemory() bool {
	if o != nil && !IsNil(o.MaximumMemory) {
		return true
	}

	return false
}

// SetMaximumMemory gets a reference to the given int32 and assigns it to the MaximumMemory field.
func (o *UpdateServiceSizingPolicyRequest) SetMaximumMemory(v int32) {
	o.MaximumMemory = &v
}

// GetAutoscaling returns the Autoscaling field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetAutoscaling() string {
	if o == nil || IsNil(o.Autoscaling) {
		var ret string
		return ret
	}
	return *o.Autoscaling
}

// GetAutoscalingOk returns a tuple with the Autoscaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetAutoscalingOk() (*string, bool) {
	if o == nil || IsNil(o.Autoscaling) {
		return nil, false
	}
	return o.Autoscaling, true
}

// HasAutoscaling returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasAutoscaling() bool {
	if o != nil && !IsNil(o.Autoscaling) {
		return true
	}

	return false
}

// SetAutoscaling gets a reference to the given string and assigns it to the Autoscaling field.
func (o *UpdateServiceSizingPolicyRequest) SetAutoscaling(v string) {
	o.Autoscaling = &v
}

// GetMinCpuThreshold returns the MinCpuThreshold field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMinCpuThreshold() float32 {
	if o == nil || IsNil(o.MinCpuThreshold) {
		var ret float32
		return ret
	}
	return *o.MinCpuThreshold
}

// GetMinCpuThresholdOk returns a tuple with the MinCpuThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMinCpuThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MinCpuThreshold) {
		return nil, false
	}
	return o.MinCpuThreshold, true
}

// HasMinCpuThreshold returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMinCpuThreshold() bool {
	if o != nil && !IsNil(o.MinCpuThreshold) {
		return true
	}

	return false
}

// SetMinCpuThreshold gets a reference to the given float32 and assigns it to the MinCpuThreshold field.
func (o *UpdateServiceSizingPolicyRequest) SetMinCpuThreshold(v float32) {
	o.MinCpuThreshold = &v
}

// GetMaxCpuThreshold returns the MaxCpuThreshold field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMaxCpuThreshold() float32 {
	if o == nil || IsNil(o.MaxCpuThreshold) {
		var ret float32
		return ret
	}
	return *o.MaxCpuThreshold
}

// GetMaxCpuThresholdOk returns a tuple with the MaxCpuThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMaxCpuThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxCpuThreshold) {
		return nil, false
	}
	return o.MaxCpuThreshold, true
}

// HasMaxCpuThreshold returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMaxCpuThreshold() bool {
	if o != nil && !IsNil(o.MaxCpuThreshold) {
		return true
	}

	return false
}

// SetMaxCpuThreshold gets a reference to the given float32 and assigns it to the MaxCpuThreshold field.
func (o *UpdateServiceSizingPolicyRequest) SetMaxCpuThreshold(v float32) {
	o.MaxCpuThreshold = &v
}

// GetMinContainers returns the MinContainers field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMinContainers() int32 {
	if o == nil || IsNil(o.MinContainers) {
		var ret int32
		return ret
	}
	return *o.MinContainers
}

// GetMinContainersOk returns a tuple with the MinContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMinContainersOk() (*int32, bool) {
	if o == nil || IsNil(o.MinContainers) {
		return nil, false
	}
	return o.MinContainers, true
}

// HasMinContainers returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMinContainers() bool {
	if o != nil && !IsNil(o.MinContainers) {
		return true
	}

	return false
}

// SetMinContainers gets a reference to the given int32 and assigns it to the MinContainers field.
func (o *UpdateServiceSizingPolicyRequest) SetMinContainers(v int32) {
	o.MinContainers = &v
}

// GetMaxContainers returns the MaxContainers field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetMaxContainers() int32 {
	if o == nil || IsNil(o.MaxContainers) {
		var ret int32
		return ret
	}
	return *o.MaxContainers
}

// GetMaxContainersOk returns a tuple with the MaxContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetMaxContainersOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxContainers) {
		return nil, false
	}
	return o.MaxContainers, true
}

// HasMaxContainers returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasMaxContainers() bool {
	if o != nil && !IsNil(o.MaxContainers) {
		return true
	}

	return false
}

// SetMaxContainers gets a reference to the given int32 and assigns it to the MaxContainers field.
func (o *UpdateServiceSizingPolicyRequest) SetMaxContainers(v int32) {
	o.MaxContainers = &v
}

// GetScaleUpStep returns the ScaleUpStep field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetScaleUpStep() int32 {
	if o == nil || IsNil(o.ScaleUpStep) {
		var ret int32
		return ret
	}
	return *o.ScaleUpStep
}

// GetScaleUpStepOk returns a tuple with the ScaleUpStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetScaleUpStepOk() (*int32, bool) {
	if o == nil || IsNil(o.ScaleUpStep) {
		return nil, false
	}
	return o.ScaleUpStep, true
}

// HasScaleUpStep returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasScaleUpStep() bool {
	if o != nil && !IsNil(o.ScaleUpStep) {
		return true
	}

	return false
}

// SetScaleUpStep gets a reference to the given int32 and assigns it to the ScaleUpStep field.
func (o *UpdateServiceSizingPolicyRequest) SetScaleUpStep(v int32) {
	o.ScaleUpStep = &v
}

// GetScaleDownStep returns the ScaleDownStep field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetScaleDownStep() int32 {
	if o == nil || IsNil(o.ScaleDownStep) {
		var ret int32
		return ret
	}
	return *o.ScaleDownStep
}

// GetScaleDownStepOk returns a tuple with the ScaleDownStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetScaleDownStepOk() (*int32, bool) {
	if o == nil || IsNil(o.ScaleDownStep) {
		return nil, false
	}
	return o.ScaleDownStep, true
}

// HasScaleDownStep returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasScaleDownStep() bool {
	if o != nil && !IsNil(o.ScaleDownStep) {
		return true
	}

	return false
}

// SetScaleDownStep gets a reference to the given int32 and assigns it to the ScaleDownStep field.
func (o *UpdateServiceSizingPolicyRequest) SetScaleDownStep(v int32) {
	o.ScaleDownStep = &v
}

// GetUseHorizontalScale returns the UseHorizontalScale field value if set, zero value otherwise.
func (o *UpdateServiceSizingPolicyRequest) GetUseHorizontalScale() bool {
	if o == nil || IsNil(o.UseHorizontalScale) {
		var ret bool
		return ret
	}
	return *o.UseHorizontalScale
}

// GetUseHorizontalScaleOk returns a tuple with the UseHorizontalScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServiceSizingPolicyRequest) GetUseHorizontalScaleOk() (*bool, bool) {
	if o == nil || IsNil(o.UseHorizontalScale) {
		return nil, false
	}
	return o.UseHorizontalScale, true
}

// HasUseHorizontalScale returns a boolean if a field has been set.
func (o *UpdateServiceSizingPolicyRequest) HasUseHorizontalScale() bool {
	if o != nil && !IsNil(o.UseHorizontalScale) {
		return true
	}

	return false
}

// SetUseHorizontalScale gets a reference to the given bool and assigns it to the UseHorizontalScale field.
func (o *UpdateServiceSizingPolicyRequest) SetUseHorizontalScale(v bool) {
	o.UseHorizontalScale = &v
}

func (o UpdateServiceSizingPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateServiceSizingPolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScalingEnabled) {
		toSerialize["scaling_enabled"] = o.ScalingEnabled
	}
	if !IsNil(o.MetricLookbackSeconds) {
		toSerialize["metric_lookback_seconds"] = o.MetricLookbackSeconds
	}
	if !IsNil(o.Percentile) {
		toSerialize["percentile"] = o.Percentile
	}
	if !IsNil(o.PostScaleUpCooldownSeconds) {
		toSerialize["post_scale_up_cooldown_seconds"] = o.PostScaleUpCooldownSeconds
	}
	if !IsNil(o.PostScaleDownCooldownSeconds) {
		toSerialize["post_scale_down_cooldown_seconds"] = o.PostScaleDownCooldownSeconds
	}
	if !IsNil(o.PostReleaseCooldownSeconds) {
		toSerialize["post_release_cooldown_seconds"] = o.PostReleaseCooldownSeconds
	}
	if !IsNil(o.MemCpuRatioRThreshold) {
		toSerialize["mem_cpu_ratio_r_threshold"] = o.MemCpuRatioRThreshold
	}
	if !IsNil(o.MemCpuRatioCThreshold) {
		toSerialize["mem_cpu_ratio_c_threshold"] = o.MemCpuRatioCThreshold
	}
	if !IsNil(o.MemScaleUpThreshold) {
		toSerialize["mem_scale_up_threshold"] = o.MemScaleUpThreshold
	}
	if !IsNil(o.MemScaleDownThreshold) {
		toSerialize["mem_scale_down_threshold"] = o.MemScaleDownThreshold
	}
	if !IsNil(o.MinimumMemory) {
		toSerialize["minimum_memory"] = o.MinimumMemory
	}
	if !IsNil(o.MaximumMemory) {
		toSerialize["maximum_memory"] = o.MaximumMemory
	}
	if !IsNil(o.Autoscaling) {
		toSerialize["autoscaling"] = o.Autoscaling
	}
	if !IsNil(o.MinCpuThreshold) {
		toSerialize["min_cpu_threshold"] = o.MinCpuThreshold
	}
	if !IsNil(o.MaxCpuThreshold) {
		toSerialize["max_cpu_threshold"] = o.MaxCpuThreshold
	}
	if !IsNil(o.MinContainers) {
		toSerialize["min_containers"] = o.MinContainers
	}
	if !IsNil(o.MaxContainers) {
		toSerialize["max_containers"] = o.MaxContainers
	}
	if !IsNil(o.ScaleUpStep) {
		toSerialize["scale_up_step"] = o.ScaleUpStep
	}
	if !IsNil(o.ScaleDownStep) {
		toSerialize["scale_down_step"] = o.ScaleDownStep
	}
	if !IsNil(o.UseHorizontalScale) {
		toSerialize["use_horizontal_scale"] = o.UseHorizontalScale
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateServiceSizingPolicyRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateServiceSizingPolicyRequest := _UpdateServiceSizingPolicyRequest{}

	err = json.Unmarshal(data, &varUpdateServiceSizingPolicyRequest)

	if err != nil {
		return err
	}

	*o = UpdateServiceSizingPolicyRequest(varUpdateServiceSizingPolicyRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "scaling_enabled")
		delete(additionalProperties, "metric_lookback_seconds")
		delete(additionalProperties, "percentile")
		delete(additionalProperties, "post_scale_up_cooldown_seconds")
		delete(additionalProperties, "post_scale_down_cooldown_seconds")
		delete(additionalProperties, "post_release_cooldown_seconds")
		delete(additionalProperties, "mem_cpu_ratio_r_threshold")
		delete(additionalProperties, "mem_cpu_ratio_c_threshold")
		delete(additionalProperties, "mem_scale_up_threshold")
		delete(additionalProperties, "mem_scale_down_threshold")
		delete(additionalProperties, "minimum_memory")
		delete(additionalProperties, "maximum_memory")
		delete(additionalProperties, "autoscaling")
		delete(additionalProperties, "min_cpu_threshold")
		delete(additionalProperties, "max_cpu_threshold")
		delete(additionalProperties, "min_containers")
		delete(additionalProperties, "max_containers")
		delete(additionalProperties, "scale_up_step")
		delete(additionalProperties, "scale_down_step")
		delete(additionalProperties, "use_horizontal_scale")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateServiceSizingPolicyRequest struct {
	value *UpdateServiceSizingPolicyRequest
	isSet bool
}

func (v NullableUpdateServiceSizingPolicyRequest) Get() *UpdateServiceSizingPolicyRequest {
	return v.value
}

func (v *NullableUpdateServiceSizingPolicyRequest) Set(val *UpdateServiceSizingPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateServiceSizingPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateServiceSizingPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateServiceSizingPolicyRequest(val *UpdateServiceSizingPolicyRequest) *NullableUpdateServiceSizingPolicyRequest {
	return &NullableUpdateServiceSizingPolicyRequest{value: val, isSet: true}
}

func (v NullableUpdateServiceSizingPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateServiceSizingPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


