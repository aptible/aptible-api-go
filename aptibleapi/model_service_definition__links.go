/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
)

// checks if the ServiceDefinitionLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceDefinitionLinks{}

// ServiceDefinitionLinks struct for ServiceDefinitionLinks
type ServiceDefinitionLinks struct {
	App *ServiceDefinitionLinksApp `json:"app,omitempty"`
	Self *ServiceDefinitionLinksSelf `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceDefinitionLinks ServiceDefinitionLinks

// NewServiceDefinitionLinks instantiates a new ServiceDefinitionLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceDefinitionLinks() *ServiceDefinitionLinks {
	this := ServiceDefinitionLinks{}
	return &this
}

// NewServiceDefinitionLinksWithDefaults instantiates a new ServiceDefinitionLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceDefinitionLinksWithDefaults() *ServiceDefinitionLinks {
	this := ServiceDefinitionLinks{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *ServiceDefinitionLinks) GetApp() ServiceDefinitionLinksApp {
	if o == nil || IsNil(o.App) {
		var ret ServiceDefinitionLinksApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDefinitionLinks) GetAppOk() (*ServiceDefinitionLinksApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *ServiceDefinitionLinks) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given ServiceDefinitionLinksApp and assigns it to the App field.
func (o *ServiceDefinitionLinks) SetApp(v ServiceDefinitionLinksApp) {
	o.App = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ServiceDefinitionLinks) GetSelf() ServiceDefinitionLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret ServiceDefinitionLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDefinitionLinks) GetSelfOk() (*ServiceDefinitionLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ServiceDefinitionLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ServiceDefinitionLinksSelf and assigns it to the Self field.
func (o *ServiceDefinitionLinks) SetSelf(v ServiceDefinitionLinksSelf) {
	o.Self = &v
}

func (o ServiceDefinitionLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceDefinitionLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceDefinitionLinks) UnmarshalJSON(data []byte) (err error) {
	varServiceDefinitionLinks := _ServiceDefinitionLinks{}

	err = json.Unmarshal(data, &varServiceDefinitionLinks)

	if err != nil {
		return err
	}

	*o = ServiceDefinitionLinks(varServiceDefinitionLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "app")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceDefinitionLinks struct {
	value *ServiceDefinitionLinks
	isSet bool
}

func (v NullableServiceDefinitionLinks) Get() *ServiceDefinitionLinks {
	return v.value
}

func (v *NullableServiceDefinitionLinks) Set(val *ServiceDefinitionLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceDefinitionLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceDefinitionLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceDefinitionLinks(val *ServiceDefinitionLinks) *NullableServiceDefinitionLinks {
	return &NullableServiceDefinitionLinks{value: val, isSet: true}
}

func (v NullableServiceDefinitionLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceDefinitionLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


